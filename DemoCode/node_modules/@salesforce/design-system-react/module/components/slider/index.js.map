{"version":3,"sources":["../../../.tmp-es/components/slider/index.jsx"],"names":["React","PropTypes","isFunction","classNames","shortid","SLIDER","getAriaProps","propTypes","string","assistiveText","shape","disabled","label","classNameContainer","oneOfType","array","object","defaultValue","number","bool","errorText","id","max","min","name","onChange","func","onInput","size","oneOf","step","value","vertical","defaultProps","Slider","props","event","Number","target","generatedId","generate","generatedErrorId","ariaProps","getErrorId","labelText","getId","handleChange","handleInput","undefined","Component"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Slider Component\n\n// Implements the [Slider design pattern](https://www.lightningdesignsystem.com/components/slider/) in React.\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### isFunction\nimport isFunction from 'lodash.isfunction';\n\n// ### classNames\nimport classNames from 'classnames';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\nimport { SLIDER } from '../../utilities/constants';\n\nimport getAriaProps from '../../utilities/get-aria-props';\n\nconst propTypes = {\n\t/**\n\t * The `aria-describedby` attribute is used to indicate the IDs of the elements that describe the object. It is used to establish a relationship between widgets or groups and text that described them. This is very similar to aria-labelledby: a label describes the essence of an object, while a description provides more information that the user might need.\n\t */\n\t'aria-describedby': PropTypes.string,\n\t/**\n\t * Assistive text for accessibility**\n\t * `disabled`: Read by screen readers to indicate a disabled slider\n\t * `label`: Visually hidden label but read out loud by screen readers.\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tdisabled: PropTypes.string,\n\t\tlabel: PropTypes.string,\n\t}),\n\t/**\n\t * Class names to be added to the outer container of the Slider.\n\t */\n\tclassNameContainer: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * This is the initial value of an uncontrolled form element and is present\n\t * only to provide compatibility with hybrid framework applications that\n\t * are not entirely React. It should only be used in an application without\n\t * centralized state (Redux, Flux). \"Controlled components\" with centralized\n\t * state is highly recommended. See [Code Overview](https://github.com/salesforce/design-system-react/blob/master/docs/codebase-overview.md#controlled-and-uncontrolled-components) for more information.\n\t */\n\tdefaultValue: PropTypes.number,\n\t/**\n\t * Disables the Slider and prevents clicking it. Only available on the horizontal view.\n\t */\n\tdisabled: PropTypes.bool,\n\t/**\n\t * Message to display when the Slider is in an error state. When this is present, also visually highlights the component as in error.\n\t */\n\terrorText: PropTypes.string,\n\t/**\n\t * Set the HTML `id` of the slider.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * This label appears above the Slider.\n\t */\n\tlabel: PropTypes.string,\n\t/**\n\t * Maximum value of a specified range. Defaults to 100.\n\t */\n\tmax: PropTypes.number,\n\t/**\n\t * Minimum value of a specified range. Defaults to 0.\n\t */\n\tmin: PropTypes.number,\n\t/**\n\t * Name of the submitted form parameter.\n\t */\n\tname: PropTypes.string,\n\t/**\n\t * This event fires whenever the user has modified the data of the control. This callback recieves the following parameters `event, { value: [string] }`.\n\t */\n\tonChange: PropTypes.func,\n\t/**\n\t * This event fires when the value is committed. This callback recieves the following parameters `event, { value: [string] }`.\n\t */\n\tonInput: PropTypes.func,\n\t/**\n\t * Size of the slider.\n\t */\n\tsize: PropTypes.oneOf(['x-small', 'small', 'medium', 'large']),\n\t/**\n\t * By default, the granularity is 1 and the value is always an integer. For example, If you need a value between 5 and 10, accurate to two decimal places, you should set the value of step to 0.01\n\t */\n\tstep: PropTypes.number,\n\t/**\n\t * The Slider should be a controlled component, and will always display this value. This should always be used if you are using a Flux/Redux framework.\n\t */\n\tvalue: PropTypes.number,\n\t/**\n\t * Modifier that makes the slider vertical\n\t */\n\tvertical: PropTypes.bool,\n};\n\nconst defaultProps = {\n\tassistiveText: { disabled: 'Disabled' },\n\tmin: 0,\n\tmax: 100,\n\tstep: 1,\n};\n\n/**\n * The ability to style sliders with CSS varies across browsers. Using this component ensures sliders look the same everywhere.\n */\nclass Slider extends React.Component {\n\tstatic displayName = SLIDER;\n\n\tstatic propTypes = propTypes;\n\n\tstatic defaultProps = defaultProps;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.generatedId = shortid.generate();\n\n\t\tif (this.props.errorText) {\n\t\t\tthis.generatedErrorId = shortid.generate();\n\t\t}\n\t}\n\n\tgetId() {\n\t\treturn this.props.id || this.generatedId;\n\t}\n\n\tgetErrorId() {\n\t\treturn this.props['aria-describedby'] || this.generatedErrorId;\n\t}\n\n\thandleChange = (event) => {\n\t\tif (isFunction(this.props.onChange)) {\n\t\t\tthis.props.onChange(event, { value: Number(event.target.value) });\n\t\t}\n\t};\n\n\thandleInput = (event) => {\n\t\tif (isFunction(this.props.onInput)) {\n\t\t\tthis.props.onInput(event, { value: Number(event.target.value) });\n\t\t}\n\t};\n\n\trender() {\n\t\tconst ariaProps = getAriaProps(this.props);\n\t\tariaProps['aria-describedby'] = this.getErrorId();\n\n\t\tconst assistiveText = {\n\t\t\t...defaultProps.assistiveText,\n\t\t\t...this.props.assistiveText,\n\t\t};\n\t\tconst labelText =\n\t\t\tthis.props.label ||\n\t\t\t(this.props.assistiveText && this.props.assistiveText.label);\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-form-element',\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-has-error': this.props.errorText,\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.classNameContainer\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t<label\n\t\t\t\t\tclassName={classNames('slds-form-element__label', {\n\t\t\t\t\t\t'slds-assistive-text':\n\t\t\t\t\t\t\tthis.props.assistiveText && !this.props.label,\n\t\t\t\t\t})}\n\t\t\t\t\thtmlFor={this.getId()}\n\t\t\t\t>\n\t\t\t\t\t<span className=\"slds-slider-label\">\n\t\t\t\t\t\t{labelText ? (\n\t\t\t\t\t\t\t<span className=\"slds-slider-label__label\">{labelText}</span>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t<span className=\"slds-slider-label__range\">\n\t\t\t\t\t\t\t{this.props.min}\n\t\t\t\t\t\t\t{' - '}\n\t\t\t\t\t\t\t{this.props.max}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t{this.props.disabled ? (\n\t\t\t\t\t\t\t<span className=\"slds-assistive-text\">\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t{assistiveText.disabled}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</span>\n\t\t\t\t</label>\n\t\t\t\t<div className=\"slds-form-element__control\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={classNames('slds-slider', {\n\t\t\t\t\t\t\t'slds-slider_vertical': this.props.vertical,\n\t\t\t\t\t\t\t'slds-size_x-small': this.props.size === 'x-small',\n\t\t\t\t\t\t\t'slds-size_small': this.props.size === 'small',\n\t\t\t\t\t\t\t'slds-size_medium': this.props.size === 'medium',\n\t\t\t\t\t\t\t'slds-size_large': this.props.size === 'large',\n\t\t\t\t\t\t})}\n\t\t\t\t\t>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\t\tid={this.getId()}\n\t\t\t\t\t\t\tname={this.props.name}\n\t\t\t\t\t\t\tclassName=\"slds-slider__range\"\n\t\t\t\t\t\t\tmin={this.props.min}\n\t\t\t\t\t\t\tmax={this.props.max}\n\t\t\t\t\t\t\tstep={this.props.step}\n\t\t\t\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\tonInput={this.handleInput}\n\t\t\t\t\t\t\t{...ariaProps}\n\t\t\t\t\t\t\t/* A form element should not have both value and defaultValue props. */\n\t\t\t\t\t\t\t{...(this.props.value !== undefined\n\t\t\t\t\t\t\t\t? { value: this.props.value }\n\t\t\t\t\t\t\t\t: { defaultValue: this.props.defaultValue })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span className=\"slds-slider__value\" aria-hidden=\"true\">\n\t\t\t\t\t\t\t{this.props.value || this.props.defaultValue || '0'}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t{this.props.errorText ? (\n\t\t\t\t\t\t<div id={this.getErrorId()} className=\"slds-form-element__help\">\n\t\t\t\t\t\t\t{this.props.errorText}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Slider;\n"],"file":"index.js"}