{"version":3,"sources":["../../../../.tmp-es/components/toast/__tests__/toast.browser-test.jsx"],"names":["React","chai","expect","chaiEnzyme","mountComponent","unmountComponent","Toast","ToastContainer","Icon","IconSettings","use","DemoComponent","props","state","isOpen","heading","headingLink","setState","Component","displayName","describe","onClickHeadingLink","sinon","spy","beforeEach","afterEach","it","button","wrapper","find","length","to","equal","simulate","link","calledOnce","be","true","done","have","setTimeout","backgroundColor","prop"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-render-return-value */\n/* eslint-disable react/no-find-dom-node */\n\nimport React from 'react';\nimport chai, { expect } from 'chai';\nimport chaiEnzyme from 'chai-enzyme';\nimport {\n\tmountComponent,\n\tunmountComponent,\n} from '../../../tests/enzyme-helpers';\n\nimport Toast from '../../toast'; // `~` is replaced with design-system-react at runtime\nimport ToastContainer from '../../toast/container'; // `~` is replaced with design-system-react at runtime\nimport Icon from '../../icon'; // `~` is replaced with design-system-react at runtime\nimport IconSettings from '../../icon-settings';\n\nchai.use(chaiEnzyme());\n\nclass DemoComponent extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisOpen: true,\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t\t<div>\n\t\t\t\t\t<ToastContainer>\n\t\t\t\t\t\t{this.state.isOpen ? (\n\t\t\t\t\t\t\t<Toast\n\t\t\t\t\t\t\t\tdismissible\n\t\t\t\t\t\t\t\ticon={<Icon category=\"utility\" name=\"user\" />}\n\t\t\t\t\t\t\t\tlabels={{\n\t\t\t\t\t\t\t\t\theading: 'Logged in as John Smith (johnsmith@acme.com).',\n\t\t\t\t\t\t\t\t\theadingLink: 'Log out',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonRequestClose={() => {\n\t\t\t\t\t\t\t\t\tthis.setState({ isOpen: false });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t{...this.props}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</ToastContainer>\n\t\t\t\t</div>\n\t\t\t</IconSettings>\n\t\t);\n\t}\n}\n\nDemoComponent.displayName = 'ToastExample';\n\ndescribe('SLDSToast: ', function() {\n\tconst onClickHeadingLink = sinon.spy();\n\n\tdescribe('Dismiss Toast', () => {\n\t\tbeforeEach(\n\t\t\tmountComponent(<DemoComponent onClickHeadingLink={onClickHeadingLink} />)\n\t\t);\n\n\t\tafterEach(unmountComponent);\n\n\t\t/* Please notice the of `function () {}` and not () => {}.\n\t\t * It allows access to the Mocha test context via `this`.\n\t\t */\n\t\tit('calls onRequestClose handler', function() {\n\t\t\tconst button = this.wrapper.find('button.slds-notify__close');\n\t\t\t// If applicable, use second parameter to pass the data object\n\t\t\texpect(this.wrapper.find('.slds-notify').length).to.equal(1);\n\t\t\tbutton.simulate('click', {});\n\t\t\texpect(this.wrapper.find('.slds-notify').length).to.equal(0);\n\t\t});\n\n\t\tit('calls onClickHeadingLink handler', function() {\n\t\t\tconst link = this.wrapper.find('a');\n\t\t\t// If applicable, use second parameter to pass the data object\n\t\t\tlink.simulate('click', {});\n\t\t\texpect(onClickHeadingLink.calledOnce).to.be.true;\n\t\t});\n\t});\n\n\tdescribe('Toast with duration auto-closes itself', () => {\n\t\tbeforeEach(mountComponent(<DemoComponent duration={1} />));\n\n\t\t// afterEach(unmountComponent);\n\n\t\t/* Please notice the of `function () {}` and not () => {}.\n\t\t * It allows access to the Mocha test context via `this`.\n\t\t */\n\t\tit('it calls onRequestClose after 1ms', function(done) {\n\t\t\texpect(this.wrapper).to.have.state('isOpen', true);\n\n\t\t\tsetTimeout(() => {\n\t\t\t\texpect(this.wrapper).to.have.state('isOpen', false);\n\t\t\t\tdone();\n\t\t\t}, 2);\n\t\t});\n\t});\n\n\tdescribe('Basic Toast Props Render', function() {\n\t\tbeforeEach(\n\t\t\tmountComponent(\n\t\t\t\t<DemoComponent style={{ backgroundColor: 'rgb(18, 49, 35)' }} />\n\t\t\t)\n\t\t);\n\n\t\tafterEach(unmountComponent);\n\n\t\tit('renders custom styles', function() {\n\t\t\texpect(\n\t\t\t\tthis.wrapper.find('.slds-notify').prop('style').backgroundColor\n\t\t\t).to.equal('rgb(18, 49, 35)');\n\t\t});\n\t});\n});\n"],"file":"toast.browser-test.js"}