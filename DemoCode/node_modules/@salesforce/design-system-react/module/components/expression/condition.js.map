{"version":3,"sources":["../../../.tmp-es/components/expression/condition.jsx"],"names":["React","PropTypes","classNames","assign","shortid","EXPRESSION_CONDITION","Combobox","Input","Button","propTypes","assistiveText","shape","title","string","deleteIcon","id","className","oneOfType","array","object","events","onChangeResource","func","onChangeOperator","onChangeValue","onDelete","isRequired","focusOnMount","bool","labels","deleteCondition","label","operator","resource","value","isSubCondition","resourcesList","arrayOf","resourceSelected","operatorsList","operatorSelected","defaultProps","ExpressionCondition","props","generatedId","generate","rootNode","input","querySelector","focus","getId","onSelect","icon","Component","displayName"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Expression Condition design pattern](https://lightningdesignsystem.com/components/expression/) in React.\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport assign from 'lodash.assign';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\nimport { EXPRESSION_CONDITION } from '../../utilities/constants';\n\nimport Combobox from '../combobox';\nimport Input from '../input';\nimport Button from '../button';\n\nconst propTypes = {\n\t/**\n\t *  **Assistive text for accessibility.**\n\t * * `title`: For users of assistive technology, title for the condition fieldset. Defaults to 'Condition'\n\t * * `deleteIcon`: For users of assistive technology, assistive text for the Delete Condition button's icon. Defaults to 'Delete Condition'\n\t */\n\tassistiveText: PropTypes.shape({\n\t\ttitle: PropTypes.string,\n\t\tdeleteIcon: PropTypes.string,\n\t}),\n\t/**\n\t * HTML id for component.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * CSS classes to be added to the element with class `.slds-expression__row`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Callbacks for various expression condition events such as value change, delete etc\n\t */\n\tevents: PropTypes.shape({\n\t\tonChangeResource: PropTypes.func,\n\t\tonChangeOperator: PropTypes.func,\n\t\tonChangeValue: PropTypes.func,\n\t\tonDelete: PropTypes.func,\n\t}).isRequired,\n\t/**\n\t * If set to true, the component will focus on the first focusable input upon mounting. This is useful for accessibility when adding new conditions.\n\t */\n\tfocusOnMount: PropTypes.bool,\n\t/**\n\t * **Text labels for internationalization**\n\t * This object is merged with the default props object on every\n\t * * `deleteCondition`: Title for the delete condition button. Defaults to \"Delete Condition\".\n\t * * `label`: Label for the condition, shown left-most in the row. Left empty on default.\n\t * * `operator`: Label for the operator selection dropdown. Defaults to \"Operator\"\n\t * * `resource`: Label for the resource selection dropdown. Defaults to \"Resource\"\n\t * * `value`: Label for the value input box. Defaults to \"Value\"\n\t */\n\tlabels: PropTypes.shape({\n\t\tdeleteCondition: PropTypes.string,\n\t\tlabel: PropTypes.string,\n\t\toperator: PropTypes.string,\n\t\tresource: PropTypes.string,\n\t\tvalue: PropTypes.string,\n\t}),\n\t/**\n\t * Controls whether the condition is a sub-condition inside a ExpressionGroup\n\t */\n\tisSubCondition: PropTypes.bool,\n\t/**\n\t * **Array of item objects that are options in the resource selection dropdown menu.**\n\t * Each object can contain:\n\t * * `id`: A unique identifier string.\n\t * * `label`: A primary string of text for a menu item.\n\t * ```\n\t * {\n\t * \tid: '1',\n\t * \tlabel: 'Resource 1',\n\t * },\n\t * ```\n\t * Note: The dropdown uses the Combobox Component, and `resourcesList` is\n\t * passed as `options` props to it, and hence shall also support more\n\t * custom objects. Please refer to the Combobox documentation.\n\t */\n\tresourcesList: PropTypes.arrayOf(PropTypes.object),\n\t/**\n\t *  Accepts an object from the `resourcesList` which needs to be selected\n\t *  for the resource dropdown menu,\n\t */\n\tresourceSelected: PropTypes.object,\n\t/**\n\t * **Array of item objects that are options in the operator selection dropdown menu.**\n\t * Each object can contain:\n\t * * `id`: A unique identifier string.\n\t * * `label`: A primary string of text for a menu item.\n\t * ```\n\t * {\n\t * \tid: '1',\n\t * \tlabel: 'Operator 1',\n\t * },\n\t * ```\n\t * Note: The dropdown uses the Combobox Component, and `operatorList` is\n\t * passed as `options` props to it, and hence shall also support more\n\t * custom objects. Please refer to the Combobox documentation.\n\t */\n\toperatorsList: PropTypes.arrayOf(PropTypes.object),\n\t/**\n\t *  Accepts an object from the `operatorSelected` which needs to be selected\n\t *  for the operator dropdown menu,\n\t */\n\toperatorSelected: PropTypes.object,\n\t/**\n\t *  Sets the input value for the Value input field.\n\t */\n\tvalue: PropTypes.string,\n};\n\nconst defaultProps = {\n\tassistiveText: {\n\t\ttitle: 'Condition',\n\t\tdeleteIcon: 'Delete Condition',\n\t},\n\tlabels: {\n\t\tlabel: '',\n\t\toperator: 'Operator',\n\t\tresource: 'Resource',\n\t\tvalue: 'Value',\n\t\tdeleteCondition: 'Delete Condition',\n\t},\n\tvalue: '',\n};\n/**\n * Expression Condition Component\n */\nclass ExpressionCondition extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.generatedId = shortid.generate();\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.focusOnMount && this.rootNode) {\n\t\t\tconst input = this.rootNode.querySelector('input');\n\t\t\tif (input) {\n\t\t\t\tinput.focus();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get the Expression Condition's HTML id. Generate a new one if no ID present.\n\t */\n\tgetId() {\n\t\treturn this.props.id || this.generatedId;\n\t}\n\n\trender() {\n\t\tconst assistiveText = assign(\n\t\t\t{},\n\t\t\tdefaultProps.assistiveText,\n\t\t\tthis.props.assistiveText\n\t\t);\n\t\tconst labels = assign({}, defaultProps.labels, this.props.labels);\n\t\treturn (\n\t\t\t<li\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t`slds-expression__row`,\n\t\t\t\t\t{ 'slds-expression__row_group': this.props.isSubCondition },\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t\tid={this.getId()}\n\t\t\t\tref={(rootNode) => {\n\t\t\t\t\tthis.rootNode = rootNode;\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<fieldset>\n\t\t\t\t\t<legend className=\"slds-expression__legend\">\n\t\t\t\t\t\t<span>{labels.label}</span>\n\t\t\t\t\t\t<span className=\"slds-assistive-text\">{assistiveText.title}</span>\n\t\t\t\t\t</legend>\n\t\t\t\t\t<div className=\"slds-grid slds-gutters_xx-small\">\n\t\t\t\t\t\t<div className=\"slds-col\">\n\t\t\t\t\t\t\t<Combobox\n\t\t\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\t\t\tonSelect: this.props.events.onChangeResource,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tid={`${this.getId()}-resource-selector`}\n\t\t\t\t\t\t\t\tmultiple={false}\n\t\t\t\t\t\t\t\tvariant=\"readonly\"\n\t\t\t\t\t\t\t\tlabels={{ label: labels.resource }}\n\t\t\t\t\t\t\t\toptions={this.props.resourcesList}\n\t\t\t\t\t\t\t\tselection={[this.props.resourceSelected]}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"slds-col slds-grow-none\">\n\t\t\t\t\t\t\t<Combobox\n\t\t\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\t\t\tonSelect: this.props.events.onChangeOperator,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tid={`${this.getId()}-operator-selector`}\n\t\t\t\t\t\t\t\tmultiple={false}\n\t\t\t\t\t\t\t\tvariant=\"readonly\"\n\t\t\t\t\t\t\t\tlabels={{ label: labels.operator }}\n\t\t\t\t\t\t\t\toptions={this.props.operatorsList}\n\t\t\t\t\t\t\t\tselection={[this.props.operatorSelected]}\n\t\t\t\t\t\t\t\tsingleInputDisabled={!this.props.resourceSelected}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"slds-col\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tid={`${this.getId()}-input`}\n\t\t\t\t\t\t\t\tlabel={labels.value}\n\t\t\t\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t\t\t\t\tonChange={this.props.events.onChangeValue}\n\t\t\t\t\t\t\t\tdisabled={!this.props.resourceSelected}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"slds-col slds-grow-none\">\n\t\t\t\t\t\t\t<div className=\"slds-form-element\">\n\t\t\t\t\t\t\t\t<span className=\"slds-form-element__label\">&nbsp;</span>\n\t\t\t\t\t\t\t\t<div className=\"slds-form-element__control\">\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tid={`${this.getId()}-delete-button`}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outline-brand\"\n\t\t\t\t\t\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\t\t\t\t\t\ticonName=\"delete\"\n\t\t\t\t\t\t\t\t\t\ticonVariant=\"border-filled\"\n\t\t\t\t\t\t\t\t\t\tonClick={this.props.events.onDelete}\n\t\t\t\t\t\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\t\t\t\t\t\ticon: assistiveText.deleteIcon,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\ttitle={labels.deleteCondition}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</fieldset>\n\t\t\t</li>\n\t\t);\n\t}\n}\n\nExpressionCondition.displayName = EXPRESSION_CONDITION;\nExpressionCondition.propTypes = propTypes;\nExpressionCondition.defaultProps = defaultProps;\n\nexport default ExpressionCondition;\n"],"file":"condition.js"}