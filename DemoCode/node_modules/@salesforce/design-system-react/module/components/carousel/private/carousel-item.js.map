{"version":3,"sources":["../../../../.tmp-es/components/carousel/private/carousel-item.jsx"],"names":["React","PropTypes","Button","CAROUSEL_ITEM","CarouselItem","props","getPanelId","carouselId","itemId","id","panelIndex","margin","maxWidth","itemWidth","padding","onRenderItem","item","href","onClick","onFocus","backgroundColor","width","isInCurrentPanel","src","imageAssistiveText","heading","height","minHeight","description","buttonLabel","displayName","propTypes","string","className","oneOfType","array","object","node","isRequired","number","bool","func","defaultProps"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # CarouselItem Component\n\n// Implements the [CarouselItem design pattern](https://www.lightningdesignsystem.com/components/carousel/) in React.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '../../button';\n\nimport { CAROUSEL_ITEM } from '../../../utilities/constants';\n\n/**\n * A carousel allows multiple pieces of featured content to occupy an allocated amount of space.\n */\nconst CarouselItem = (props) => (\n\t<div\n\t\tid={props.getPanelId({ carouselId: props.carouselId, itemId: props.id })}\n\t\tclassName=\"slds-carousel__panel slds-m-horizontal_xx-small slds-list_horizontal\"\n\t\trole=\"tabpanel\"\n\t\taria-hidden=\"false\"\n\t\taria-labelledby={`indicator-id-${props.carouselId}-${props.panelIndex}`}\n\t\tstyle={{\n\t\t\tmargin: 0,\n\t\t\tmaxWidth: `${props.itemWidth}px`,\n\t\t\tpadding: '0 6px',\n\t\t}}\n\t>\n\t\t{props.onRenderItem ? (\n\t\t\tprops.onRenderItem({ item: props })\n\t\t) : (\n\t\t\t<a\n\t\t\t\tclassName=\"slds-carousel__panel-action slds-text-link_reset\"\n\t\t\t\thref={props.href}\n\t\t\t\tonClick={props.onClick}\n\t\t\t\tonFocus={props.onFocus}\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundColor: 'white',\n\t\t\t\t\twidth: '100%',\n\t\t\t\t}}\n\t\t\t\ttabIndex={props.isInCurrentPanel ? '0' : '-1'}\n\t\t\t>\n\t\t\t\t<div className=\"slds-carousel__image\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={props.src}\n\t\t\t\t\t\talt={props.imageAssistiveText || props.heading}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"slds-carousel__content\" style={{ height: 'auto' }}>\n\t\t\t\t\t<h2 className=\"slds-carousel__content-title\">{props.heading}</h2>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"slds-p-bottom_x-small slds-text-body_small\"\n\t\t\t\t\t\tstyle={{ minHeight: '40px' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{props.description}\n\t\t\t\t\t</div>\n\t\t\t\t\t{props.buttonLabel && (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tlabel={props.buttonLabel}\n\t\t\t\t\t\t\ttabIndex={props.isInCurrentPanel ? '0' : '-1'}\n\t\t\t\t\t\t\tvariant=\"neutral\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</a>\n\t\t)}\n\t</div>\n);\n\nCarouselItem.displayName = CAROUSEL_ITEM;\n\nCarouselItem.propTypes = {\n\t/**\n\t * Label of the button to be displayed. If not provided, no button will be rendered.\n\t */\n\tbuttonLabel: PropTypes.string,\n\t/**\n\t * Carousel HTML ID\n\t */\n\tcarouselId: PropTypes.string,\n\t/**\n\t * CSS classes that are applied to the component\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Visible paragraph text to be displayed on the carousel item\n\t */\n\tdescription: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t/**\n\t * Carousel Item's visible heading\n\t */\n\theading: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n\thref: PropTypes.string,\n\t/**\n\t * Id of the item component.\n\t */\n\tid: PropTypes.number.isRequired,\n\t/**\n\t * Image alt text\n\t */\n\timageAssistiveText: PropTypes.string,\n\t/**\n\t * Boolean indicating whether this item is currently visible in the active parent carousel panel\n\t */\n\tisInCurrentPanel: PropTypes.bool,\n\t/**\n\t * Width of the carousel item\n\t */\n\titemWidth: PropTypes.number,\n\t/**\n\t * Accepts a callback to handle when the a tag is focused on\n\t */\n\tonFocus: PropTypes.func,\n\t/**\n\t * Accepts a custom carousel item rendering function\n\t */\n\tonRenderItem: PropTypes.func,\n\t/**\n\t * Index of the panel this item belongs to, to be used when associating it to an indicator\n\t */\n\tpanelIndex: PropTypes.number,\n\t/**\n\t * Path of the image to be used\n\t */\n\tsrc: PropTypes.string.isRequired,\n};\n\nCarouselItem.defaultProps = {\n\thref: 'javascript:void(0);',\n};\n\nexport default CarouselItem;\n"],"file":"carousel-item.js"}