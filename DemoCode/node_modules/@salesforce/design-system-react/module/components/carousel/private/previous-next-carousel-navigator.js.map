{"version":3,"sources":["../../../../.tmp-es/components/carousel/private/previous-next-carousel-navigator.jsx"],"names":["React","PropTypes","Button","CAROUSEL_NAVIGATORS","previousNextCarouselNavigator","props","inlineStyle","margin","top","icon","assistiveText","isDisabled","iconName","onClick","displayName","propTypes","string","oneOf","bool","object","func"],"mappings":";;;;AAAA;;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,mBAAT,QAAoC,8BAApC;AAEA;;;;AAGA,IAAMC,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACC,KAAD;AAAA;AAAA;AACrC;AACC,MAAA,SAAS,EAAC,4CADX;AAEC,MAAA,KAAK,oBAAOA,KAAK,CAACC,WAAb;AAA0BC,QAAAA,MAAM,EAAE,WAAlC;AAA+CC,QAAAA,GAAG,EAAE;AAApD;AAFN;AAAA;AAIC,wBAAC,MAAD;AACC,MAAA,aAAa,EAAE;AAAEC,QAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAd,OADhB;AAEC,MAAA,SAAS,EAAC,wCAFX;AAGC,MAAA,QAAQ,EAAEL,KAAK,CAACM,UAHjB;AAIC,MAAA,YAAY,EAAC,SAJd;AAKC,MAAA,QAAQ,EAAEN,KAAK,CAACO,QALjB;AAMC,MAAA,WAAW,EAAC,eANb;AAOC,MAAA,QAAQ,EAAC,OAPV;AAQC,MAAA,OAAO,EAAEP,KAAK,CAACQ,OARhB;AASC,MAAA,OAAO,EAAC;AATT,MAJD;AADqC;AAAA,CAAtC,C,CAkBA;;;AACAT,6BAA6B,CAACU,WAA9B,GAA4CX,mBAA5C,C,CAEA;;AACAC,6BAA6B,CAACW,SAA9B,GAA0C;AACzC;;;AAGAL,EAAAA,aAAa,EAAET,SAAS,CAACe,MAJgB;;AAKzC;;;AAGAJ,EAAAA,QAAQ,EAAEX,SAAS,CAACgB,KAAV,CAAgB,CAAC,aAAD,EAAgB,cAAhB,CAAhB,CAR+B;;AASzC;;;AAGAN,EAAAA,UAAU,EAAEV,SAAS,CAACiB,IAZmB;;AAazC;;;AAGAZ,EAAAA,WAAW,EAAEL,SAAS,CAACkB,MAhBkB;;AAiBzC;;;AAGAN,EAAAA,OAAO,EAAEZ,SAAS,CAACmB;AApBsB,CAA1C;AAuBA,eAAehB,6BAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '../../../components/button';\nimport { CAROUSEL_NAVIGATORS } from '../../../utilities/constants';\n\n/**\n * previousNextCarouselNavigator is used to display previous/next navigation items of the carousel\n */\nconst previousNextCarouselNavigator = (props) => (\n\t<div\n\t\tclassName=\"slds-carousel__col-center slds-is-absolute\"\n\t\tstyle={{ ...props.inlineStyle, margin: '-12px 0 0', top: '50%' }}\n\t>\n\t\t<Button\n\t\t\tassistiveText={{ icon: props.assistiveText }}\n\t\t\tclassName=\"slds-button_icon slds-carousel__button\"\n\t\t\tdisabled={props.isDisabled}\n\t\t\ticonCategory=\"utility\"\n\t\t\ticonName={props.iconName}\n\t\t\ticonVariant=\"border-filled\"\n\t\t\ticonSize=\"small\"\n\t\t\tonClick={props.onClick}\n\t\t\tvariant=\"icon\"\n\t\t/>\n\t</div>\n);\n// /assets/icons/utility-sprite/svg/symbols.svg#right\npreviousNextCarouselNavigator.displayName = CAROUSEL_NAVIGATORS;\n\n// ### Prop Types\npreviousNextCarouselNavigator.propTypes = {\n\t/**\n\t * Description of the previous/next navigation icons for screen-readers.\n\t */\n\tassistiveText: PropTypes.string,\n\t/**\n\t * Name of icon displayed within the navigation button\n\t */\n\ticonName: PropTypes.oneOf(['chevronleft', 'chevronright']),\n\t/**\n\t * Determines where the navigator indicator has been disabled\n\t */\n\tisDisabled: PropTypes.bool,\n\t/**\n\t * Additional styles to be applied to the container\n\t */\n\tinlineStyle: PropTypes.object,\n\t/**\n\t * Triggered when the indicator is clicked.\n\t */\n\tonClick: PropTypes.func,\n};\n\nexport default previousNextCarouselNavigator;\n"],"file":"previous-next-carousel-navigator.js"}