{"version":3,"sources":["../../../.tmp-es/components/app-launcher/expandable-section.jsx"],"names":["React","PropTypes","classNames","checkProps","componentDoc","ExpandableSection","APP_LAUNCHER_EXPANDABLE_SECTION","APP_LAUNCHER_TILE","AppLauncherExpandableSection","props","isOpen","event","data","onToggleOpen","setState","prevState","expandableSectionProps","undefined","state","toggleOpen","ulChildrenType","ulContent","Children","map","children","child","liClasses","type","displayName","Component","assistiveText","shape","toggleSection","string","node","className","oneOfType","array","object","id","bool","nonCollapsible","func","title","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AAEA;AAEA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;AACA;AACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,YAAP,MAAyB,kBAAzB,C,CAEA;;AACA,OAAOC,iBAAP,MAA8B,uBAA9B,C,CAEA;;AACA,SACCC,+BADD,EAECC,iBAFD,QAGO,2BAHP;AAKA;;;;;IAIMC,4B;;;;;AACL;AACA;AAGA;AA+CA,wCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,sGAAMA,KAAN;;AADkB,4DAJX;AACPC,MAAAA,MAAM,EAAE;AADD,KAIW;;AAAA,iEAMN,UAACC,KAAD,EAAQC,IAAR,EAAiB;AAC7B,UAAI,MAAKH,KAAL,CAAWI,YAAf,EAA6B;AAC5B,cAAKJ,KAAL,CAAWI,YAAX,CAAwBF,KAAxB,EAA+BC,IAA/B;AACA,OAFD,MAEO;AACN,cAAKE,QAAL,CAAc,UAACC,SAAD;AAAA,iBAAgB;AAC7BL,YAAAA,MAAM,EAAE,CAACK,SAAS,CAACL;AADU,WAAhB;AAAA,SAAd;AAGA;AACD,KAdkB;;AAGlBP,IAAAA,UAAU,CAACG,+BAAD,EAAkCG,KAAlC,EAAyCL,YAAzC,CAAV;AAHkB;AAIlB;;;;6BAYQ;AACR,UAAMY,sBAAsB,qBACxB,KAAKP,KADmB,EAExB;AACFC,QAAAA,MAAM,EACL,KAAKD,KAAL,CAAWC,MAAX,KAAsBO,SAAtB,GACG,KAAKR,KAAL,CAAWC,MADd,GAEG,KAAKQ,KAAL,CAAWR,MAJb;AAKFG,QAAAA,YAAY,EAAE,KAAKM;AALjB,OAFwB,CAA5B;;AAUA,UAAIC,cAAc,GAAG,OAArB;AAEA,UAAMC,SAAS,GAAGrB,KAAK,CAACsB,QAAN,CAAeC,GAAf,CAAmB,KAAKd,KAAL,CAAWe,QAA9B,EAAwC,UAACC,KAAD,EAAW;AACpE,YAAIC,SAAS,GACZ,kEADD;;AAGA,YACED,KAAK,IAAIA,KAAK,CAACE,IAAf,IAAuBF,KAAK,CAACE,IAAN,CAAWC,WAAX,KAA2BrB,iBAAnD,IACCkB,KAAK,IAAI,CAACA,KAAK,CAACE,IAFlB,EAGE;AACDP,UAAAA,cAAc,GAAG,OAAjB;AACA;;AAED,YAAIA,cAAc,KAAK,OAAvB,EAAgC;AAC/BM,UAAAA,SAAS,GAAG,2DAAZ;AACA;;AAED;AAAA;AAAO;AAAI,YAAA,SAAS,EAAEA;AAAf,aAA2BD,KAA3B;AAAP;AACA,OAhBiB,CAAlB;AAkBA;AAAA;AACC,4BAAC,iBAAD,EAAuBT,sBAAvB;AAAA;AACC;AACC,UAAA,SAAS,EAAEd,UAAU,CAAC,qBAAD,EAAwB;AAC5C,qCAAyBkB,cAAc,KAAK;AADA,WAAxB;AADtB,WAKEC,SALF,CADD;AADD;AAWA;;;;EA9GyCrB,KAAK,CAAC6B,S;;gBAA3CrB,4B,iBAGgBF,+B;;gBAHhBE,4B,eAMc;AAClB;;;;AAIAsB,EAAAA,aAAa,EAAE7B,SAAS,CAAC8B,KAAV,CAAgB;AAC9BC,IAAAA,aAAa,EAAE/B,SAAS,CAACgC;AADK,GAAhB,CALG;;AAQlB;;;AAGAT,EAAAA,QAAQ,EAAEvB,SAAS,CAACiC,IAXF;;AAYlB;;;AAGAC,EAAAA,SAAS,EAAElC,SAAS,CAACmC,SAAV,CAAoB,CAC9BnC,SAAS,CAACoC,KADoB,EAE9BpC,SAAS,CAACqC,MAFoB,EAG9BrC,SAAS,CAACgC,MAHoB,CAApB,CAfO;;AAoBlB;;;AAGAM,EAAAA,EAAE,EAAEtC,SAAS,CAACgC,MAvBI;;AAwBlB;;;AAGAvB,EAAAA,MAAM,EAAET,SAAS,CAACuC,IA3BA;;AA4BlB;;;AAGAC,EAAAA,cAAc,EAAExC,SAAS,CAACuC,IA/BR;;AAgClB;;;AAGA3B,EAAAA,YAAY,EAAEZ,SAAS,CAACyC,IAnCN;;AAoClB;;;AAGAC,EAAAA,KAAK,EAAE1C,SAAS,CAACgC,MAAV,CAAiBW;AAvCN,C;;AA2GpB,eAAepC,4BAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # App Launcher Expandable Section Component\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// A simple javascript utility for conditionally joining classNames together.\nimport classNames from 'classnames';\n\n// This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\nimport componentDoc from './component.json';\n\n// ## Children\nimport ExpandableSection from '../expandable-section';\n\n// ## Constants\nimport {\n\tAPP_LAUNCHER_EXPANDABLE_SECTION,\n\tAPP_LAUNCHER_TILE,\n} from '../../utilities/constants';\n\n/**\n * App Launcher Sections allow users to categorize App Tiles & Links as well as toggle their display. It is a superset of components/expandable-section with content formatting.\n * All Expandable Section props are compatible with props passed to this component.\n */\nclass AppLauncherExpandableSection extends React.Component {\n\t// ### Display Name\n\t// Always use the canonical component name as the React display name.\n\tstatic displayName = APP_LAUNCHER_EXPANDABLE_SECTION;\n\n\t// ### Prop Types\n\tstatic propTypes = {\n\t\t/**\n\t\t * **Assistive text for accessibility.**\n\t\t * * `toggleSection`: Label for the icon that expands / collapses the section\n\t\t */\n\t\tassistiveText: PropTypes.shape({\n\t\t\ttoggleSection: PropTypes.string,\n\t\t}),\n\t\t/**\n\t\t * Contents of the section\n\t\t */\n\t\tchildren: PropTypes.node,\n\t\t/**\n\t\t * Class names to be added to the `slds-section` classed node\n\t\t */\n\t\tclassName: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.string,\n\t\t]),\n\t\t/**\n\t\t * Unique identifier for the expandable section. The id is automatically generated if not provided\n\t\t */\n\t\tid: PropTypes.string,\n\t\t/**\n\t\t * Specifies whether the section is expanded or collapsed. If not provided, component will use its own state to manage this itself\n\t\t */\n\t\tisOpen: PropTypes.bool,\n\t\t/**\n\t\t * Specifies whether the section can be expanded or collapsed. Defaults to `false`\n\t\t */\n\t\tnonCollapsible: PropTypes.bool,\n\t\t/**\n\t\t * Callback for when the section is expanded or collapsed. Passes event object and data object with `isOpen` bool.\n\t\t */\n\t\tonToggleOpen: PropTypes.func,\n\t\t/**\n\t\t * The title for the section\n\t\t */\n\t\ttitle: PropTypes.string.isRequired,\n\t};\n\n\tstate = {\n\t\tisOpen: true,\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tcheckProps(APP_LAUNCHER_EXPANDABLE_SECTION, props, componentDoc);\n\t}\n\n\ttoggleOpen = (event, data) => {\n\t\tif (this.props.onToggleOpen) {\n\t\t\tthis.props.onToggleOpen(event, data);\n\t\t} else {\n\t\t\tthis.setState((prevState) => ({\n\t\t\t\tisOpen: !prevState.isOpen,\n\t\t\t}));\n\t\t}\n\t};\n\n\trender() {\n\t\tconst expandableSectionProps = {\n\t\t\t...this.props,\n\t\t\t...{\n\t\t\t\tisOpen:\n\t\t\t\t\tthis.props.isOpen !== undefined\n\t\t\t\t\t\t? this.props.isOpen\n\t\t\t\t\t\t: this.state.isOpen,\n\t\t\t\tonToggleOpen: this.toggleOpen,\n\t\t\t},\n\t\t};\n\t\tlet ulChildrenType = 'tiles';\n\n\t\tconst ulContent = React.Children.map(this.props.children, (child) => {\n\t\t\tlet liClasses =\n\t\t\t\t'slds-p-horizontal_small slds-size_1-of-1 slds-medium-size_1-of-3';\n\n\t\t\tif (\n\t\t\t\t(child && child.type && child.type.displayName !== APP_LAUNCHER_TILE) ||\n\t\t\t\t(child && !child.type)\n\t\t\t) {\n\t\t\t\tulChildrenType = 'links';\n\t\t\t}\n\n\t\t\tif (ulChildrenType === 'links') {\n\t\t\t\tliClasses = 'slds-col_padded slds-p-vertical_xx-small slds-size_1-of-5';\n\t\t\t}\n\n\t\t\treturn <li className={liClasses}>{child}</li>;\n\t\t});\n\n\t\treturn (\n\t\t\t<ExpandableSection {...expandableSectionProps}>\n\t\t\t\t<ul\n\t\t\t\t\tclassName={classNames('slds-grid slds-wrap', {\n\t\t\t\t\t\t'slds-grid_pull-padded': ulChildrenType === 'tiles',\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t{ulContent}\n\t\t\t\t</ul>\n\t\t\t</ExpandableSection>\n\t\t);\n\t}\n}\n\nexport default AppLauncherExpandableSection;\n"],"file":"expandable-section.js"}