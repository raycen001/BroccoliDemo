{"version":3,"sources":["../../../.tmp-es/components/app-launcher/section.jsx"],"names":["React","PropTypes","isFunction","classNames","checkProps","componentDoc","Button","APP_LAUNCHER_SECTION","defaultProps","assistiveText","collapseSection","AppLauncherSection","props","isOpen","event","setState","state","onToggleClick","undefined","iconIsOpenClass","sectionIsOpenClass","toggleable","icon","collapseSectionAssistiveText","toggleOpen","title","Children","map","children","child","size","Component","shape","string","isRequired","bool","node","func"],"mappings":"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","sourcesContent":["/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/no-access-state-in-setstate */\n/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # App Launcher Section Component\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\n// ### isFunction\nimport isFunction from 'lodash.isfunction';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// A simple javascript utility for conditionally joining classNames together.\nimport classNames from 'classnames';\n\n// This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\nimport componentDoc from './component.json';\n\n// ## Children\nimport Button from '../button';\n\n// ## Constants\nimport { APP_LAUNCHER_SECTION } from '../../utilities/constants';\n\nconst defaultProps = {\n\tassistiveText: {\n\t\tcollapseSection: 'Toggle visibility of section',\n\t},\n};\n\n/**\n * App Launcher Sections allow users to categorize App Tiles as well as toggle their display\n */\n\nclass AppLauncherSection extends React.Component {\n\t// ### Display Name\n\t// Always use the canonical component name as the React display name.\n\tstatic displayName = APP_LAUNCHER_SECTION;\n\n\t// ### Prop Types\n\tstatic propTypes = {\n\t\t/**\n\t\t * **Assistive text for accessibility.**\n\t\t * This object is merged with the default props object on every render.\n\t\t * * `collapseSection`: The assistive text for the section collapse icons.\n\t\t */\n\n\t\tassistiveText: PropTypes.shape({\n\t\t\tcollapseSection: PropTypes.string,\n\t\t}),\n\t\t/**\n\t\t * The title for this section of apps\n\t\t */\n\n\t\ttitle: PropTypes.string.isRequired,\n\t\t/**\n\t\t * Allows the user to show/hide the section\n\t\t */\n\n\t\ttoggleable: PropTypes.bool,\n\t\t/**\n\t\t * An array of applications to display\n\t\t */\n\n\t\tchildren: PropTypes.node.isRequired,\n\t\t/**\n\t\t * Controls the open/closed state of the section\n\t\t */\n\n\t\tisOpen: PropTypes.bool,\n\t\t/**\n\t\t * Callback for when section is toggled. Passes \"isOpen\" bool. Forces `toggleable` to true\n\t\t */\n\n\t\tonToggleClick: PropTypes.func,\n\t};\n\n\tstatic defaultProps = defaultProps;\n\n\tstate = {\n\t\tisOpen: true,\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tcheckProps(APP_LAUNCHER_SECTION, props, componentDoc);\n\t}\n\n\ttoggleOpen = (event) => {\n\t\tthis.setState({ isOpen: !this.state.isOpen });\n\n\t\tif (isFunction(this.props.onToggleClick)) {\n\t\t\tthis.props.onToggleClick(event, {});\n\t\t}\n\t};\n\n\trender() {\n\t\tconst isOpen =\n\t\t\tthis.props.isOpen !== undefined ? this.props.isOpen : this.state.isOpen;\n\t\tconst iconIsOpenClass = isOpen ? 'slds-is-open' : 'slds-is-close';\n\t\tconst sectionIsOpenClass = isOpen\n\t\t\t? 'slds-is-expanded'\n\t\t\t: 'slds-is-collapsed';\n\t\tconst assistiveText = {\n\t\t\t...defaultProps.assistiveText,\n\t\t\t...this.props.assistiveText,\n\t\t};\n\n\t\treturn (\n\t\t\t<div className={classNames('slds-section', iconIsOpenClass)}>\n\t\t\t\t<div className=\"slds-section__title\">\n\t\t\t\t\t{this.props.toggleable || this.props.onToggleClick ? (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\t\t\ticon:\n\t\t\t\t\t\t\t\t\tthis.props.collapseSectionAssistiveText ||\n\t\t\t\t\t\t\t\t\tassistiveText.collapseSection,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\t\t\ticonName=\"switch\"\n\t\t\t\t\t\t\tonClick={this.toggleOpen}\n\t\t\t\t\t\t\tclassName={classNames({\n\t\t\t\t\t\t\t\t'slds-button__icon  slds-m-right_medium': true,\n\t\t\t\t\t\t\t\t'slds-button__icon_left': isOpen,\n\t\t\t\t\t\t\t\t'slds-accordion__summary-action-icon': !isOpen,\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<h3>{this.props.title}</h3>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"slds-section__content\">\n\t\t\t\t\t<ul\n\t\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\t'slds-grid slds-grid_pull-padded slds-wrap',\n\t\t\t\t\t\t\tsectionIsOpenClass\n\t\t\t\t\t\t)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{React.Children.map(this.props.children, (child) => (\n\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\t\t\t'slds-col_padded slds-grow-none',\n\t\t\t\t\t\t\t\t\tchild.props.size === 'small'\n\t\t\t\t\t\t\t\t\t\t? 'slds-size_xx-small'\n\t\t\t\t\t\t\t\t\t\t: 'slds-size_1-of-1 slds-medium-size_1-of-3'\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{child}\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default AppLauncherSection;\n"],"file":"section.js"}