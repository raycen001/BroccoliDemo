{"version":3,"sources":["../../../../.tmp-es/components/radio-group/__tests__/radio-group.browser-test.jsx"],"names":["React","PropTypes","chai","expect","chaiEnzyme","mount","createMountNode","destroyMountNode","RadioGroup","Radio","use","RadioGroupExample","props","state","checked","values","labels","event","setState","target","value","disabled","required","map","label","Component","propTypes","shape","error","string","bool","defaultProps","describe","mountNode","wrapper","beforeEach","context","afterEach","it","attachTo","radios","find","to","have","lengthOf","forEach","radioWrapper","index","radio","get","equal","legend","text","be","true","abbr","prop","simulate"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport chai, { expect } from 'chai';\nimport chaiEnzyme from 'chai-enzyme';\nimport { mount } from 'enzyme';\n\n/* Enzyme Helpers that can mount and unmount React component instances to\n * the DOM and set `this.wrapper` and `this.dom` within Mocha's `this`\n * context [full source here](tests/enzyme-helpers.js). `this` can\n * only be referenced if inside `function () {}`.\n */\nimport {\n\tcreateMountNode,\n\tdestroyMountNode,\n} from '../../../tests/enzyme-helpers';\n\nimport RadioGroup from '../../radio-group';\nimport Radio from '../../radio-group/radio';\n\nchai.use(chaiEnzyme());\n\n/* Re-usable demo component.\n */\nclass RadioGroupExample extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { checked: 'Radio Label One' };\n\t}\n\n\trender() {\n\t\tconst values = ['Radio Label One', 'Radio Label Two'];\n\t\treturn (\n\t\t\t<RadioGroup\n\t\t\t\tlabels={this.props.labels}\n\t\t\t\tonChange={(event) => this.setState({ checked: event.target.value })}\n\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\trequired={this.props.required}\n\t\t\t>\n\t\t\t\t{values.map((value) => (\n\t\t\t\t\t<Radio\n\t\t\t\t\t\tkey={value}\n\t\t\t\t\t\tlabels={{ label: value }}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tchecked={this.state.checked === value}\n\t\t\t\t\t\tvariant=\"base\"\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</RadioGroup>\n\t\t);\n\t}\n}\n\nRadioGroupExample.propTypes = {\n\tlabels: PropTypes.shape({\n\t\terror: PropTypes.string,\n\t\tlabel: PropTypes.string,\n\t}),\n\tdisabled: PropTypes.bool,\n\trequired: PropTypes.bool,\n};\n\nRadioGroupExample.defaultProps = {\n\tlabels: { label: 'Radio Group Label' },\n};\n\n/* RadioGroup rendering tests\n */\ndescribe('RadioGroup', function() {\n\tlet mountNode;\n\tlet wrapper;\n\n\tbeforeEach(() => {\n\t\tmountNode = createMountNode({ context: this });\n\t});\n\n\tafterEach(() => {\n\t\tdestroyMountNode({ wrapper, mountNode });\n\t});\n\n\tit('renders a radio group', () => {\n\t\twrapper = mount(<RadioGroupExample />, { attachTo: mountNode });\n\t\tconst radios = wrapper.find(Radio);\n\t\texpect(radios).to.have.lengthOf(2, 'there are 2 radio inputs');\n\t\tradios.forEach((radioWrapper, index) => {\n\t\t\tconst radio = radios.get(index);\n\t\t\texpect(radio.props.checked).to.equal(\n\t\t\t\tradio.props.labels.label === 'Radio Label One',\n\t\t\t\t'the second radio input is checked'\n\t\t\t);\n\t\t});\n\n\t\tconst legend = wrapper.find('legend');\n\t\texpect(legend.text()).to.equal('Radio Group Label', 'there is a label');\n\t});\n\n\tit('renders a disabled state', () => {\n\t\twrapper = mount(<RadioGroupExample disabled />, { attachTo: mountNode });\n\t\tconst radios = wrapper.find(Radio);\n\t\tradios.forEach((radioWrapper, index) => {\n\t\t\tconst radio = radios.get(index);\n\t\t\texpect(radio.props.disabled, 'all radio inputs are disabled').to.be.true;\n\t\t});\n\t});\n\n\tit('renders a required indicator', () => {\n\t\twrapper = mount(<RadioGroupExample required />, { attachTo: mountNode });\n\t\tconst abbr = wrapper.find('abbr');\n\t\texpect(abbr.text()).to.equal('*Required ', 'there is a required indicator');\n\t});\n\n\tit('triggers a change callback', () => {\n\t\twrapper = mount(<RadioGroupExample />, { attachTo: mountNode });\n\t\tlet radio = wrapper.find({ value: 'Radio Label Two' }).find('input');\n\t\texpect(radio).to.have.prop('checked', false);\n\t\tradio.simulate('change', { event: { target: 'Radio Label Two' } });\n\t\tradio = wrapper.find({ value: 'Radio Label Two' }).find('input');\n\t\texpect(radio).to.have.prop('checked', true);\n\t});\n});\n"],"file":"radio-group.browser-test.js"}