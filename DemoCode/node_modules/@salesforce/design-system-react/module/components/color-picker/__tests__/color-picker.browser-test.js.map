{"version":3,"sources":["../../../../.tmp-es/components/color-picker/__tests__/color-picker.browser-test.jsx"],"names":["React","chai","expect","chaiEnzyme","mount","createMountNode","destroyMountNode","ColorPicker","KEYS","UNSAFE_DirectionSettings","makeRtl","component","use","selectors","cancel","customError","customHex","customRed","gridPoint","hueSlider","popover","summaryInput","submit","svGrid","swatch","toggle","describe","describeFunction","mountNode","wrapper","beforeEach","context","afterEach","it","onChange","event","color","isValid","to","equal","be","true","attachTo","input","find","first","simulate","target","value","false","customValidator","sinon","spy","onValidateColor","hex","calledWithExactly","instance","describeFunction2","onRequestOpenSpy","onOpenSpy","button","exists","calledOnce","onCloseSpy","clickSubmit","el","describeFunction3","done","onWorkingColorChange","keyCode","RIGHT","which","LEFT","props","onRequestCloseSpy","fail","match","any","trigger","describeFunction4","describeFunction5","hsv","hue","point","UP","DOWN","saturation","shiftKey","errors","hexInput","spyCustomColorValidator","customColorValidator","onValidateWorkingColor","calledWith","red","redInput","rgb","eql"],"mappings":"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","sourcesContent":["/* eslint-disable max-lines */\nimport React from 'react';\nimport chai, { expect } from 'chai';\nimport chaiEnzyme from 'chai-enzyme';\nimport { mount } from 'enzyme';\n\n/* Enzyme Helpers that can mount and unmount React component instances to\n * the DOM and set `this.wrapper` and `this.dom` within Mocha's `this`\n * context [full source here](tests/enzyme-helpers.js). `this` can\n * only be referenced if inside `function () {}`.\n */\nimport {\n\tcreateMountNode,\n\tdestroyMountNode,\n} from '../../../tests/enzyme-helpers';\n\n// Import your internal dependencies (for example):\nimport ColorPicker from '../index';\nimport KEYS from '../../../utilities/key-code';\n\n// eslint-disable-next-line camelcase\nimport UNSAFE_DirectionSettings from '../../utilities/UNSAFE_direction';\n\nconst makeRtl = (component) => (\n\t// eslint-disable-next-line\n\t<UNSAFE_DirectionSettings.Provider value=\"rtl\">\n\t\t<div dir=\"rtl\">{component}</div>\n\t</UNSAFE_DirectionSettings.Provider>\n);\n\nchai.use(chaiEnzyme());\n\nconst selectors = {\n\tcancel: '.slds-color-picker__selector-cancel',\n\tcustomError: '.slds-color-picker__input-custom-error',\n\tcustomHex: '.slds-color-picker__input-custom-hex',\n\tcustomRed: '.slds-color-picker__input-custom-r',\n\tgridPoint: '.slds-color-picker__range-indicator',\n\thueSlider: '.slds-color-picker__hue-slider',\n\tpopover: '.slds-color-picker__selector',\n\tsummaryInput: '.slds-color-picker__summary-input input',\n\tsubmit: '.slds-color-picker__selector-submit',\n\tsvGrid: '.slds-color-picker__custom-range',\n\tswatch: '.slds-color-picker__swatch-trigger',\n\ttoggle: '.slds-color-picker__summary-button',\n};\n\ndescribe('SLDSColorPicker', function describeFunction() {\n\tlet mountNode;\n\tlet wrapper;\n\n\tbeforeEach(() => {\n\t\tmountNode = createMountNode({ context: this });\n\t});\n\n\tafterEach(() => {\n\t\tdestroyMountNode({ wrapper, mountNode });\n\t});\n\n\tdescribe('Summary input', () => {\n\t\tit('fires onChange with value and isValid set to true when valid', function() {\n\t\t\twrapper = mount(\n\t\t\t\t<ColorPicker\n\t\t\t\t\tevents={{\n\t\t\t\t\t\tonChange: (event, { color, isValid }) => {\n\t\t\t\t\t\t\texpect(color).to.equal('#ff0000');\n\t\t\t\t\t\t\texpect(isValid).to.be.true;\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>,\n\t\t\t\t{ attachTo: mountNode }\n\t\t\t);\n\n\t\t\tconst input = wrapper.find(selectors.summaryInput).first();\n\n\t\t\tinput.simulate('change', {\n\t\t\t\ttarget: {\n\t\t\t\t\tvalue: '#ff0000',\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\n\t\tit('fires onChange with named value and isValid set to true when valid', function() {\n\t\t\twrapper = mount(\n\t\t\t\t<ColorPicker\n\t\t\t\t\tevents={{\n\t\t\t\t\t\tonChange: (event, { color, isValid }) => {\n\t\t\t\t\t\t\texpect(color).to.equal('red');\n\t\t\t\t\t\t\texpect(isValid).to.be.true;\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>,\n\t\t\t\t{ attachTo: mountNode }\n\t\t\t);\n\n\t\t\tconst input = wrapper.find(selectors.summaryInput).first();\n\n\t\t\tinput.simulate('change', {\n\t\t\t\ttarget: {\n\t\t\t\t\tvalue: 'red',\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\n\t\tit('fires onChange with value and isValid set to false when invalid', function() {\n\t\t\twrapper = mount(\n\t\t\t\t<ColorPicker\n\t\t\t\t\tevents={{\n\t\t\t\t\t\tonChange: (event, { color, isValid }) => {\n\t\t\t\t\t\t\texpect(color).to.equal('invalid');\n\t\t\t\t\t\t\texpect(isValid).to.be.false;\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>,\n\t\t\t\t{ attachTo: mountNode }\n\t\t\t);\n\n\t\t\tconst input = wrapper.find(selectors.summaryInput).first();\n\n\t\t\tinput.simulate('change', {\n\t\t\t\ttarget: {\n\t\t\t\t\tvalue: 'invalid',\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\n\t\tit('fires onValidateColor when input changes', function() {\n\t\t\tconst customValidator = sinon.spy();\n\n\t\t\twrapper = mount(\n\t\t\t\t<ColorPicker\n\t\t\t\t\tevents={{\n\t\t\t\t\t\tonValidateColor: (hex) => {\n\t\t\t\t\t\t\tcustomValidator(hex);\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>,\n\t\t\t\t{ attachTo: mountNode }\n\t\t\t);\n\n\t\t\tconst input = wrapper.find(selectors.summaryInput).first();\n\n\t\t\tinput.simulate('change', {\n\t\t\t\ttarget: {\n\t\t\t\t\tvalue: '#FFFFFF',\n\t\t\t\t},\n\t\t\t});\n\n\t\t\texpect(customValidator.calledWithExactly('#FFFFFF')).to.be.true;\n\t\t});\n\n\t\tit('value prop is set in input', () => {\n\t\t\twrapper = mount(<ColorPicker value=\"#FFFFFF\" />, { attachTo: mountNode });\n\n\t\t\tconst input = wrapper.find(selectors.summaryInput).first();\n\t\t\texpect(input.instance().value).to.equal('#FFFFFF');\n\t\t});\n\t});\n\n\tdescribe('Swatch toggle button', () => {\n\t\tit('opens popover when clicked and expects onRequestOpen and onOpen to be fired once', function describeFunction2() {\n\t\t\tconst onRequestOpenSpy = sinon.spy();\n\t\t\tconst onOpenSpy = sinon.spy();\n\n\t\t\twrapper = mount(\n\t\t\t\t<ColorPicker onRequestOpen={onRequestOpenSpy} onOpen={onOpenSpy} />,\n\t\t\t\t{ attachTo: mountNode }\n\t\t\t);\n\n\t\t\tconst button = wrapper.find(selectors.toggle).first();\n\t\t\tbutton.simulate('click');\n\n\t\t\texpect(wrapper.find(selectors.popover).exists()).to.be.true;\n\t\t\texpect(onRequestOpenSpy.calledOnce).to.be.true;\n\t\t\texpect(onOpenSpy.calledOnce).to.be.true;\n\t\t});\n\n\t\tit('closes popover when clicked and popover is open', function() {\n\t\t\tconst onCloseSpy = sinon.spy();\n\t\t\twrapper = mount(<ColorPicker isOpen onClose={onCloseSpy} />, {\n\t\t\t\tattachTo: mountNode,\n\t\t\t});\n\n\t\t\tconst button = wrapper.find(selectors.toggle).first();\n\t\t\tbutton.simulate('click');\n\t\t\texpect(onCloseSpy.calledOnce).to.be.true;\n\t\t});\n\t});\n\n\tdescribe('Popover', function describeFunction2() {\n\t\tconst clickSubmit = (el) => {\n\t\t\tel\n\t\t\t\t.find(selectors.submit)\n\t\t\t\t.first()\n\t\t\t\t.simulate('click');\n\t\t};\n\n\t\tdescribe('Swatch tab', function describeFunction3() {\n\t\t\tit('clicking a swatch sets that working color', function(done) {\n\t\t\t\twrapper = mount(\n\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\tisOpen\n\t\t\t\t\t\tvalue=\"#000000\"\n\t\t\t\t\t\tswatchColors={['#ff0000']}\n\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\tonWorkingColorChange: (event, { color }) => {\n\t\t\t\t\t\t\t\texpect(color.hex).to.equal('#ff0000');\n\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>,\n\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t);\n\n\t\t\t\tconst swatch = wrapper.find(selectors.swatch).first();\n\t\t\t\tswatch.simulate('click');\n\t\t\t});\n\t\t});\n\n\t\tdescribe('Swatch keyboard navigation', function describeFunction3() {\n\t\t\tit('pressing right will move the color to the next one', function(done) {\n\t\t\t\twrapper = mount(\n\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\tisOpen\n\t\t\t\t\t\tvalue=\"#ff0000\"\n\t\t\t\t\t\tswatchColors={['#ff0000', '#0000ff']}\n\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\tonWorkingColorChange: (event, { color }) => {\n\t\t\t\t\t\t\t\texpect(color.hex).to.equal('#0000ff');\n\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>,\n\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t);\n\n\t\t\t\tconst swatch = wrapper.find(selectors.swatch).first();\n\t\t\t\tswatch.simulate('keyDown', {\n\t\t\t\t\tkeyCode: KEYS.RIGHT,\n\t\t\t\t\twhich: KEYS.RIGHT,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tit('pressing left will move the color to the previous one', function(done) {\n\t\t\t\twrapper = mount(\n\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\tisOpen\n\t\t\t\t\t\tvalue=\"#0000ff\"\n\t\t\t\t\t\tswatchColors={['#ff0000', '#0000ff']}\n\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\tonWorkingColorChange: (event, { color }) => {\n\t\t\t\t\t\t\t\texpect(color.hex).to.equal('#ff0000');\n\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>,\n\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t);\n\n\t\t\t\tconst swatch = wrapper.find(selectors.swatch).first();\n\t\t\t\tswatch.simulate('keyDown', {\n\t\t\t\t\tkeyCode: KEYS.LEFT,\n\t\t\t\t\twhich: KEYS.LEFT,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tit('pressing right in RTL will move the color to the previous one', function(done) {\n\t\t\t\twrapper = mount(\n\t\t\t\t\tmakeRtl(\n\t\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\t\tisOpen\n\t\t\t\t\t\t\tvalue=\"#0000ff\"\n\t\t\t\t\t\t\tswatchColors={['#ff0000', '#0000ff']}\n\t\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\t\tonWorkingColorChange: (event, { color }) => {\n\t\t\t\t\t\t\t\t\texpect(color.hex).to.equal('#ff0000');\n\t\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t);\n\n\t\t\t\tconst swatch = wrapper.find(selectors.swatch).first();\n\t\t\t\tswatch.simulate('keyDown', {\n\t\t\t\t\tkeyCode: KEYS.RIGHT,\n\t\t\t\t\twhich: KEYS.RIGHT,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tit('pressing left in RTL will move the color to the next one', function(done) {\n\t\t\t\twrapper = mount(\n\t\t\t\t\tmakeRtl(\n\t\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\t\tisOpen\n\t\t\t\t\t\t\tvalue=\"#ff0000\"\n\t\t\t\t\t\t\tswatchColors={['#ff0000', '#0000ff']}\n\t\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\t\tonWorkingColorChange: (event, { color }) => {\n\t\t\t\t\t\t\t\t\texpect(color.hex).to.equal('#0000ff');\n\t\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t);\n\n\t\t\t\tconst swatch = wrapper.find(selectors.swatch).first();\n\t\t\t\tswatch.simulate('keyDown', {\n\t\t\t\t\tkeyCode: KEYS.LEFT,\n\t\t\t\t\twhich: KEYS.LEFT,\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tdescribe('Submit button', function describeFunction3() {\n\t\t\tit('sets the input color', function() {\n\t\t\t\twrapper = mount(\n\t\t\t\t\t<ColorPicker isOpen value=\"#000000\" swatchColors={['#ff0000']} />,\n\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t);\n\n\t\t\t\tconst swatch = wrapper.find(selectors.swatch).first();\n\t\t\t\tswatch.simulate('click');\n\t\t\t\tclickSubmit(wrapper);\n\n\t\t\t\tconst input = wrapper.find(selectors.summaryInput).first();\n\t\t\t\texpect(input.props().value).to.equal('#ff0000');\n\t\t\t});\n\n\t\t\tit('triggers onChange with value and isValid set to true', function(done) {\n\t\t\t\twrapper = mount(\n\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\tisOpen\n\t\t\t\t\t\tvalue=\"#000000\"\n\t\t\t\t\t\tswatchColors={['#ff0000']}\n\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\tonChange: (event, { color, isValid }) => {\n\t\t\t\t\t\t\t\texpect(color).to.equal('#ff0000');\n\t\t\t\t\t\t\t\texpect(isValid).to.be.true;\n\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>,\n\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t);\n\n\t\t\t\tconst swatch = wrapper.find(selectors.swatch).first();\n\t\t\t\tswatch.simulate('click');\n\t\t\t\tclickSubmit(wrapper);\n\t\t\t});\n\t\t});\n\n\t\tdescribe('Cancel button', function describeFunction3() {\n\t\t\tit('does not trigger onChange but triggers onRequestClose', function() {\n\t\t\t\tconst onRequestCloseSpy = sinon.spy();\n\t\t\t\twrapper = mount(\n\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\tisOpen\n\t\t\t\t\t\tvalue=\"#000000\"\n\t\t\t\t\t\tswatchColors={['#ff0000']}\n\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\tonChange: () => {\n\t\t\t\t\t\t\t\texpect().fail();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonRequestClose={onRequestCloseSpy}\n\t\t\t\t\t/>,\n\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t);\n\n\t\t\t\tconst swatch = wrapper.find(selectors.swatch).first();\n\t\t\t\tswatch.simulate('click');\n\n\t\t\t\tconst cancel = wrapper.find(selectors.cancel).first();\n\t\t\t\tcancel.simulate('click');\n\n\t\t\t\texpect(\n\t\t\t\t\tonRequestCloseSpy.calledWithExactly(sinon.match.any, {\n\t\t\t\t\t\ttrigger: 'cancel',\n\t\t\t\t\t})\n\t\t\t\t).to.be.true;\n\t\t\t});\n\t\t});\n\n\t\tdescribe('Custom tab', function describeFunction3() {\n\t\t\tdescribe('HSV', function describeFunction4() {\n\t\t\t\tdescribe('hue slider', function describeFunction5() {\n\t\t\t\t\tit('change causes color hue to update', function(done) {\n\t\t\t\t\t\twrapper = mount(\n\t\t\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\t\t\tisOpen\n\t\t\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\t\t\tonWorkingColorChange: (event, { color }) => {\n\t\t\t\t\t\t\t\t\t\texpect(color.hsv.hue).to.equal(50);\n\t\t\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst hue = wrapper.find(selectors.hueSlider).first();\n\t\t\t\t\t\thue.simulate('change', {\n\t\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\t\tvalue: 50,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tdescribe('saturation-value grid', function describeFunction5() {\n\t\t\t\t\t// it('click sets color using coordinates', function() {\n\t\t\t\t\t// \tthis.skip('too dependent on browser calculations');\n\t\t\t\t\t// });\n\n\t\t\t\t\tit('up key causes color value to go up', function(done) {\n\t\t\t\t\t\twrapper = mount(\n\t\t\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\t\t\tvalue=\"#000000\"\n\t\t\t\t\t\t\t\tisOpen\n\t\t\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\t\t\tonWorkingColorChange: (event, { color }) => {\n\t\t\t\t\t\t\t\t\t\texpect(color.hsv.value).to.equal(1);\n\t\t\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst point = wrapper.find(selectors.gridPoint).first();\n\t\t\t\t\t\tpoint.simulate('keyDown', {\n\t\t\t\t\t\t\tkeyCode: KEYS.UP,\n\t\t\t\t\t\t\twhich: KEYS.UP,\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tit('down key causes color value to go down', function(done) {\n\t\t\t\t\t\twrapper = mount(\n\t\t\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\t\t\tvalue=\"#ffffff\"\n\t\t\t\t\t\t\t\tisOpen\n\t\t\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\t\t\tonWorkingColorChange: (event, { color }) => {\n\t\t\t\t\t\t\t\t\t\texpect(color.hsv.value).to.equal(99);\n\t\t\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst point = wrapper.find(selectors.gridPoint).first();\n\t\t\t\t\t\tpoint.simulate('keyDown', {\n\t\t\t\t\t\t\tkeyCode: KEYS.DOWN,\n\t\t\t\t\t\t\twhich: KEYS.DOWN,\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tit('left key causes color sat. to go down 1', function(done) {\n\t\t\t\t\t\twrapper = mount(\n\t\t\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\t\t\tvalue=\"#ff0000\"\n\t\t\t\t\t\t\t\tisOpen\n\t\t\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\t\t\tonWorkingColorChange: (event, { color }) => {\n\t\t\t\t\t\t\t\t\t\texpect(color.hsv.saturation).to.equal(99);\n\t\t\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst point = wrapper.find(selectors.gridPoint).first();\n\t\t\t\t\t\tpoint.simulate('keyDown', {\n\t\t\t\t\t\t\tkeyCode: KEYS.LEFT,\n\t\t\t\t\t\t\twhich: KEYS.LEFT,\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tit('right key causes color sat. to go up 1', function(done) {\n\t\t\t\t\t\twrapper = mount(\n\t\t\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\t\t\tvalue=\"#000000\"\n\t\t\t\t\t\t\t\tisOpen\n\t\t\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\t\t\tonWorkingColorChange: (event, { color }) => {\n\t\t\t\t\t\t\t\t\t\texpect(color.hsv.saturation).to.equal(1);\n\t\t\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst point = wrapper.find(selectors.gridPoint).first();\n\t\t\t\t\t\tpoint.simulate('keyDown', {\n\t\t\t\t\t\t\tkeyCode: KEYS.RIGHT,\n\t\t\t\t\t\t\twhich: KEYS.RIGHT,\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tit('shift-up causes color value to go up 10', function(done) {\n\t\t\t\t\t\twrapper = mount(\n\t\t\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\t\t\tvalue=\"#000000\"\n\t\t\t\t\t\t\t\tisOpen\n\t\t\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\t\t\tonWorkingColorChange: (event, { color }) => {\n\t\t\t\t\t\t\t\t\t\texpect(color.hsv.value).to.equal(10);\n\t\t\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst point = wrapper.find(selectors.gridPoint).first();\n\t\t\t\t\t\tpoint.simulate('keyDown', {\n\t\t\t\t\t\t\tshiftKey: true,\n\t\t\t\t\t\t\tkeyCode: KEYS.UP,\n\t\t\t\t\t\t\twhich: KEYS.UP,\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tit('up key at value 100 causes no change', function(done) {\n\t\t\t\t\t\twrapper = mount(\n\t\t\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\t\t\tvalue=\"#ffffff\"\n\t\t\t\t\t\t\t\tisOpen\n\t\t\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\t\t\tonWorkingColorChange: (event, { color }) => {\n\t\t\t\t\t\t\t\t\t\texpect(color.hsv.value).to.equal(100);\n\t\t\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst point = wrapper.find(selectors.gridPoint).first();\n\t\t\t\t\t\tpoint.simulate('keyDown', {\n\t\t\t\t\t\t\tkeyCode: KEYS.UP,\n\t\t\t\t\t\t\twhich: KEYS.UP,\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tit('shift-up at value > 90 causes value to be 100', function(done) {\n\t\t\t\t\t\twrapper = mount(\n\t\t\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\t\t\tvalue=\"#EBEBEB\"\n\t\t\t\t\t\t\t\tisOpen\n\t\t\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\t\t\tonWorkingColorChange: (event, { color }) => {\n\t\t\t\t\t\t\t\t\t\texpect(color.hsv.value).to.equal(100);\n\t\t\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tconst point = wrapper.find(selectors.gridPoint).first();\n\t\t\t\t\t\tpoint.simulate('keyDown', {\n\t\t\t\t\t\t\tshiftKey: true,\n\t\t\t\t\t\t\tkeyCode: KEYS.UP,\n\t\t\t\t\t\t\twhich: KEYS.UP,\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tdescribe('Hex input', function describeFunction4() {\n\t\t\t\tit('invalid value sets error message', function(done) {\n\t\t\t\t\twrapper = mount(\n\t\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\t\tisOpen\n\t\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\t\tonWorkingColorChange: (event, { color }) => {\n\t\t\t\t\t\t\t\t\texpect(color.errors.hex).to.be.true;\n\t\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>,\n\t\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t\t);\n\n\t\t\t\t\tconst hexInput = wrapper.find(selectors.customHex).first();\n\t\t\t\t\thexInput.find('input').simulate('change', {\n\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\tvalue: 'invalid',\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tit('valid value updates color', function(done) {\n\t\t\t\t\twrapper = mount(\n\t\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\t\tisOpen\n\t\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\t\tonWorkingColorChange: (event, { color }) => {\n\t\t\t\t\t\t\t\t\texpect(color.hex).to.equal('#00ff00');\n\t\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>,\n\t\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t\t);\n\n\t\t\t\t\tconst hexInput = wrapper.find(selectors.customHex).first();\n\t\t\t\t\thexInput.find('input').simulate('change', {\n\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\tvalue: '#00ff00',\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tit('fires onValidateWorkingColor when set', () => {\n\t\t\t\t\tconst spyCustomColorValidator = sinon.spy();\n\t\t\t\t\tconst customColorValidator = (hex) => {\n\t\t\t\t\t\tspyCustomColorValidator(hex);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t};\n\n\t\t\t\t\twrapper = mount(\n\t\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\t\tisOpen\n\t\t\t\t\t\t\tevents={{ onValidateWorkingColor: customColorValidator }}\n\t\t\t\t\t\t/>,\n\t\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t\t);\n\n\t\t\t\t\tconst hexInput = wrapper.find(selectors.customHex).first();\n\t\t\t\t\thexInput.find('input').simulate('change', {\n\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\tvalue: '#00ff00',\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\texpect(spyCustomColorValidator.calledWith('#00ff00')).to.be.true;\n\t\t\t\t});\n\n\t\t\t\tit('valueWorking is set in custom tab inner input', () => {\n\t\t\t\t\twrapper = mount(<ColorPicker isOpen valueWorking=\"#00ff00\" />, {\n\t\t\t\t\t\tattachTo: mountNode,\n\t\t\t\t\t});\n\n\t\t\t\t\tconst hexInput = wrapper.find(selectors.customHex).first();\n\t\t\t\t\texpect(hexInput.find('input').instance().value).to.equal('#00ff00');\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tdescribe('RGB input', function describeFunction4() {\n\t\t\t\tit('non-number causes error message', function(done) {\n\t\t\t\t\twrapper = mount(\n\t\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\t\tisOpen\n\t\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\t\tonWorkingColorChange: (event, { color }) => {\n\t\t\t\t\t\t\t\t\texpect(color.errors.red).to.be.true;\n\t\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>,\n\t\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t\t);\n\n\t\t\t\t\tconst redInput = wrapper.find(selectors.customRed).first();\n\t\t\t\t\tredInput.find('input').simulate('change', {\n\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\tvalue: 'abc',\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tit('non-integer number causes error message', function(done) {\n\t\t\t\t\twrapper = mount(\n\t\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\t\tisOpen\n\t\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\t\tonWorkingColorChange: (event, { color }) => {\n\t\t\t\t\t\t\t\t\texpect(color.errors.red).to.be.true;\n\t\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>,\n\t\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t\t);\n\n\t\t\t\t\tconst redInput = wrapper.find(selectors.customRed).first();\n\t\t\t\t\tredInput.find('input').simulate('change', {\n\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\tvalue: 123.45,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tit('number greater than 255 causes error message', function(done) {\n\t\t\t\t\twrapper = mount(\n\t\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\t\tisOpen\n\t\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\t\tonWorkingColorChange: (event, { color }) => {\n\t\t\t\t\t\t\t\t\texpect(color.errors.red).to.be.true;\n\t\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>,\n\t\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t\t);\n\n\t\t\t\t\tconst redInput = wrapper.find(selectors.customRed).first();\n\t\t\t\t\tredInput.find('input').simulate('change', {\n\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\tvalue: 500,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tit('negative number causes error message', function(done) {\n\t\t\t\t\twrapper = mount(\n\t\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\t\tisOpen\n\t\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\t\tonWorkingColorChange: (event, { color }) => {\n\t\t\t\t\t\t\t\t\texpect(color.errors.red).to.be.true;\n\t\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>,\n\t\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t\t);\n\n\t\t\t\t\tconst redInput = wrapper.find(selectors.customRed).first();\n\t\t\t\t\tredInput.find('input').simulate('change', {\n\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\tvalue: -123,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tit('valid number updates color', function(done) {\n\t\t\t\t\twrapper = mount(\n\t\t\t\t\t\t<ColorPicker\n\t\t\t\t\t\t\tisOpen\n\t\t\t\t\t\t\tevents={{\n\t\t\t\t\t\t\t\tonWorkingColorChange: (event, { color }) => {\n\t\t\t\t\t\t\t\t\texpect(color.rgb.red).to.eql(123);\n\t\t\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>,\n\t\t\t\t\t\t{ attachTo: mountNode }\n\t\t\t\t\t);\n\n\t\t\t\t\tconst redInput = wrapper.find(selectors.customRed).first();\n\t\t\t\t\tredInput.find('input').simulate('change', {\n\t\t\t\t\t\ttarget: {\n\t\t\t\t\t\t\tvalue: 123,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n});\n"],"file":"color-picker.browser-test.js"}