{"version":3,"sources":["../../../../.tmp-es/components/tree/private/item.jsx"],"names":["React","PropTypes","classNames","findIndex","isFunction","Button","Highlighter","EventUtil","KEYS","mapKeyEventCallbacks","TREE_ITEM","handleSelect","event","props","fromFocus","trap","onSelect","data","node","select","selected","treeIndex","findNextNode","flattenedNodes","nodes","map","flattenedNode","index","id","length","findPreviousNode","handleKeyDownDown","focusedNodeIndex","clearSelectedNodes","handleKeyDownUp","handleKeyDownLeft","parent","onExpand","expand","expanded","handleKeyDownEnter","handleKeyDown","callbacks","DOWN","callback","evt","UP","LEFT","ENTER","handleFocus","treeHasFocus","target","currentTarget","getTabIndex","initialFocus","selectedNodeIndexes","Item","isSelected","isFocused","treeId","level","onNodeBlur","component","focus","icon","searchTerm","label","displayName","propTypes","htmlId","string","isRequired","oneOfType","number","object","func","arrayOf","bool","defaultProps"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Tree Item Component\n\n// Implements the [Tree design pattern](https://www.lightningdesignsystem.com/components/tree/) in React.\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport findIndex from 'lodash.findindex';\nimport isFunction from 'lodash.isfunction';\n\nimport Button from '../../button';\nimport Highlighter from '../../utilities/highlighter';\n\nimport EventUtil from '../../../utilities/event';\nimport KEYS from '../../../utilities/key-code';\nimport mapKeyEventCallbacks from '../../../utilities/key-callbacks';\nimport { TREE_ITEM } from '../../../utilities/constants';\n\nconst handleSelect = ({ event, props, fromFocus }) => {\n\tEventUtil.trap(event);\n\tif (isFunction(props.onSelect)) {\n\t\tprops.onSelect({\n\t\t\tevent,\n\t\t\tdata: {\n\t\t\t\tnode: props.node,\n\t\t\t\tselect: !props.node.selected,\n\t\t\t\ttreeIndex: props.treeIndex,\n\t\t\t},\n\t\t\tfromFocus,\n\t\t});\n\t}\n};\n\nconst findNextNode = (flattenedNodes, node) => {\n\tconst nodes = flattenedNodes.map((flattenedNode) => flattenedNode.node);\n\tconst index = findIndex(nodes, { id: node.id });\n\treturn flattenedNodes[(index + 1) % flattenedNodes.length];\n};\n\nconst findPreviousNode = (flattenedNodes, node) => {\n\tconst nodes = flattenedNodes.map((flattenedNode) => flattenedNode.node);\n\tlet index = findIndex(nodes, { id: node.id }) - 1;\n\tif (index < 0) {\n\t\tindex += flattenedNodes.length;\n\t}\n\treturn flattenedNodes[index];\n};\n\nconst handleKeyDownDown = (event, props) => {\n\tif (props.focusedNodeIndex === props.treeIndex) {\n\t\t// Select the next visible node\n\t\tconst flattenedNode = findNextNode(props.flattenedNodes, props.node);\n\t\tprops.onSelect({\n\t\t\tevent,\n\t\t\tdata: {\n\t\t\t\tnode: flattenedNode.node,\n\t\t\t\tselect: true,\n\t\t\t\ttreeIndex: flattenedNode.treeIndex,\n\t\t\t},\n\t\t\tclearSelectedNodes: true,\n\t\t});\n\t}\n};\n\nconst handleKeyDownUp = (event, props) => {\n\tif (props.focusedNodeIndex === props.treeIndex) {\n\t\t// Go to the previous visible node\n\t\tconst flattenedNode = findPreviousNode(props.flattenedNodes, props.node);\n\t\tprops.onSelect({\n\t\t\tevent,\n\t\t\tdata: {\n\t\t\t\tnode: flattenedNode.node,\n\t\t\t\tselect: true,\n\t\t\t\ttreeIndex: flattenedNode.treeIndex,\n\t\t\t},\n\t\t\tclearSelectedNodes: true,\n\t\t});\n\t}\n};\n\nconst handleKeyDownLeft = (event, props) => {\n\tconst nodes = props.flattenedNodes.map((flattenedNode) => flattenedNode.node);\n\tconst index = findIndex(nodes, { id: props.parent.id });\n\tif (index !== -1) {\n\t\tprops.onExpand({\n\t\t\tevent,\n\t\t\tdata: {\n\t\t\t\tnode: props.parent,\n\t\t\t\tselect: true,\n\t\t\t\texpand: !props.parent.expanded,\n\t\t\t\ttreeIndex: props.flattenedNodes[index].treeIndex,\n\t\t\t},\n\t\t});\n\t}\n};\n\nconst handleKeyDownEnter = (event, props) => {\n\thandleSelect({ event, props });\n};\n\nconst handleKeyDown = (event, props) => {\n\tmapKeyEventCallbacks(event, {\n\t\tcallbacks: {\n\t\t\t[KEYS.DOWN]: { callback: (evt) => handleKeyDownDown(evt, props) },\n\t\t\t[KEYS.UP]: { callback: (evt) => handleKeyDownUp(evt, props) },\n\t\t\t[KEYS.LEFT]: { callback: (evt) => handleKeyDownLeft(evt, props) },\n\t\t\t[KEYS.ENTER]: { callback: (evt) => handleKeyDownEnter(evt, props) },\n\t\t},\n\t});\n};\n\nconst handleFocus = (event, props) => {\n\tif (\n\t\t!props.treeHasFocus &&\n\t\t!props.focusedNodeIndex &&\n\t\tevent.target === event.currentTarget\n\t) {\n\t\thandleSelect({ event, props });\n\t}\n};\n\nconst getTabIndex = (props) => {\n\tconst initialFocus =\n\t\tprops.selectedNodeIndexes.length === 0 &&\n\t\tprops.treeIndex === props.flattenedNodes[0].treeIndex;\n\treturn props.treeIndex === props.focusedNodeIndex || initialFocus ? 0 : -1;\n};\n\n/**\n * A Tree Item is a non-branching node in a hierarchical list.\n */\nconst Item = (props) => {\n\tconst isSelected = props.node.selected;\n\tconst isFocused = props.treeIndex === props.focusedNodeIndex;\n\n\treturn (\n\t\t<li\n\t\t\tid={`${props.treeId}-${props.node.id}`}\n\t\t\trole=\"treeitem\"\n\t\t\taria-level={props.level}\n\t\t\taria-selected={isSelected ? 'true' : 'false'}\n\t\t\ttabIndex={getTabIndex(props)}\n\t\t\tonKeyDown={(event) => handleKeyDown(event, props)}\n\t\t\tonFocus={(event) => handleFocus(event, props)}\n\t\t\tonBlur={props.onNodeBlur}\n\t\t\tref={(component) => {\n\t\t\t\tif (props.treeHasFocus && component && isFocused) {\n\t\t\t\t\tcomponent.focus();\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t{/* eslint-disable jsx-a11y/no-static-element-interactions */}\n\t\t\t<div\n\t\t\t\tclassName={classNames('slds-tree__item', {\n\t\t\t\t\t'slds-is-selected': isSelected,\n\t\t\t\t})}\n\t\t\t\tonClick={(event) => {\n\t\t\t\t\thandleSelect({ event, props });\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{/* eslint-enable jsx-a11y/no-static-element-interactions */}\n\t\t\t\t<Button\n\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\taria-hidden\n\t\t\t\t\tassistiveText={{ icon: '' }}\n\t\t\t\t\trole=\"presentation\"\n\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\ticonName=\"chevronright\"\n\t\t\t\t\ticonSize=\"small\"\n\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\tclassName=\"slds-m-right_small slds-is-disabled\"\n\t\t\t\t\tdisabled\n\t\t\t\t/>\n\t\t\t\t{/* eslint-disable no-script-url */}\n\t\t\t\t<span className=\"slds-size_1-of-1\">\n\t\t\t\t\t{/* eslint-enable no-script-url */}\n\t\t\t\t\t<Highlighter\n\t\t\t\t\t\tsearch={props.searchTerm}\n\t\t\t\t\t\tclassName=\"slds-tree__item-label slds-truncate\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{props.label}\n\t\t\t\t\t</Highlighter>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</li>\n\t);\n};\n\n// ### Display Name\n// Always use the canonical component name as the React display name.\nItem.displayName = TREE_ITEM;\n\n// ### Prop Types\nItem.propTypes = {\n\t/**\n\t * HTML `id` of the wrapping container element joined with the `id` of the node. This will recursively increase as the tree depth increases.\n\t */\n\thtmlId: PropTypes.string.isRequired,\n\t/**\n\t * The text of the tree item.\n\t */\n\tlabel: PropTypes.oneOfType([PropTypes.node, PropTypes.string]).isRequired,\n\t/**\n\t * The number of nestings. Determines the ARIA level and style alignment.\n\t */\n\tlevel: PropTypes.number.isRequired,\n\t/**\n\t * The current node that is being rendered.\n\t */\n\tnode: PropTypes.object.isRequired,\n\t/**\n\t * This function triggers when the expand or collapse icon is clicked or due to keyboard navigation.\n\t */\n\tonExpand: PropTypes.func.isRequired,\n\t/**\n\t * Function that will run whenever an item or branch is selected (click or keyboard).\n\t */\n\tonSelect: PropTypes.func,\n\t/**\n\t * Highlights term if found in node label\n\t */\n\tsearchTerm: PropTypes.string,\n\t/**\n\t * Unique id used for a prefix of all tree nodes\n\t */\n\ttreeId: PropTypes.string,\n\t/**\n\t * Location of node (zero index). First node is `0`. It's first child is `0-0`. This can be used to modify your nodes without searching for the node. This index is only valid if the `nodes` prop is the same as at the time of the event.\n\t */\n\ttreeIndex: PropTypes.string,\n\t/**\n\t * Flattened tree structure.\n\t */\n\tflattenedNodes: PropTypes.arrayOf(PropTypes.object),\n\t/**\n\t * Tree indexes of nodes that are currently selected.\n\t */\n\tselectedNodeIndexes: PropTypes.arrayOf(PropTypes.string),\n\t/**\n\t * Tree index of the node that is currently focused.\n\t */\n\tfocusedNodeIndex: PropTypes.string,\n\t/**\n\t * Callback for when a node is blurred.\n\t */\n\tonNodeBlur: PropTypes.func,\n\t/**\n\t * Sets focus on render.\n\t */\n\ttreeHasFocus: PropTypes.bool,\n\t/**\n\t * This node's parent.\n\t */\n\tparent: PropTypes.object,\n};\n\nItem.defaultProps = {\n\tselected: false,\n\tselectedNodeIndexes: [],\n};\n\nexport default Item;\n"],"file":"item.js"}