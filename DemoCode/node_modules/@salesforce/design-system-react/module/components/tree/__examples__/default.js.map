{"version":3,"sources":["../../../../.tmp-es/components/tree/__examples__/default.jsx"],"names":["React","IconSettings","Tree","log","Search","sampleNodes","id","nodes","label","type","_iconClass","assistiveText","Example","props","searchTerm","searchable","undefined","node","map","state","event","data","action","customLog","eventName","selected","select","setState","prevState","expanded","expand","multipleSelection","noBranchSelection","selectedNode","target","value","handleSearchChange","className","getNodes","noHeading","heading","listStyle","listClassName","onExpandClick","handleExpandClick","onClick","handleClick","onScroll","handleScroll","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport IconSettings from '~/components/icon-settings';\nimport Tree from '~/components/tree';\nimport log from '~/utilities/log';\nimport Search from '../../forms/input/search';\n\nconst sampleNodes = {\n\t0: {\n\t\tid: 0,\n\t\tnodes: [1, 2, 3, 7],\n\t},\n\t1: {\n\t\tlabel: 'Grains',\n\t\ttype: 'item',\n\t\tid: 1,\n\t},\n\t2: {\n\t\tlabel: 'Fruits',\n\t\ttype: 'branch',\n\t\tid: 2,\n\t\tnodes: [4, 5],\n\t},\n\t3: {\n\t\tlabel: 'Nuts',\n\t\ttype: 'branch',\n\t\t_iconClass: 'glyphicon-file',\n\t\tid: 3,\n\t\tnodes: [8, 9, 10, 11],\n\t},\n\t4: {\n\t\tassistiveText: 'Ground Fruits',\n\t\tlabel: 'Ground Fruits',\n\t\ttype: 'branch',\n\t\tid: 4,\n\t\tnodes: [12, 13, 14],\n\t},\n\t5: {\n\t\tlabel: 'Tree Fruits',\n\t\ttype: 'branch',\n\t\tid: 5,\n\t\tnodes: [15, 16, 17, 18, 19, 6],\n\t},\n\t6: {\n\t\tlabel: 'Raspberries',\n\t\ttype: 'item',\n\t\tid: 6,\n\t},\n\t7: {\n\t\tlabel: 'Empty folder',\n\t\ttype: 'branch',\n\t\tid: 7,\n\t},\n\t8: {\n\t\tlabel: 'Almonds',\n\t\ttype: 'item',\n\t\tid: 8,\n\t},\n\t9: {\n\t\tlabel: 'Cashews',\n\t\ttype: 'item',\n\t\tid: 9,\n\t},\n\t10: {\n\t\tlabel: 'Pecans',\n\t\ttype: 'item',\n\t\tid: 10,\n\t},\n\t11: {\n\t\tlabel: 'Walnuts',\n\t\ttype: 'item',\n\t\tid: 11,\n\t},\n\t12: {\n\t\tlabel: 'Watermelon',\n\t\ttype: 'item',\n\t\tid: 12,\n\t},\n\t13: {\n\t\tlabel: 'Canteloupe',\n\t\ttype: 'item',\n\t\t_iconClass: 'glyphicon-file',\n\t\tid: 13,\n\t},\n\t14: {\n\t\tlabel: 'Strawberries',\n\t\ttype: 'item',\n\t\tid: 14,\n\t},\n\t15: {\n\t\tlabel: 'Peaches',\n\t\ttype: 'item',\n\t\tid: 15,\n\t},\n\t16: {\n\t\tlabel: 'Pears',\n\t\ttype: 'item',\n\t\t_iconClass: 'glyphicon-file',\n\t\tid: 16,\n\t},\n\t17: {\n\t\tlabel: 'Citrus',\n\t\ttype: 'branch',\n\t\tid: 17,\n\t\tnodes: [20, 21, 22, 23],\n\t},\n\t18: {\n\t\tlabel: 'Apples',\n\t\ttype: 'branch',\n\t\tid: 18,\n\t\tnodes: [24, 25, 26, 27],\n\t},\n\t19: {\n\t\tlabel: 'Cherries',\n\t\ttype: 'branch',\n\t\tid: 19,\n\t\tnodes: [28, 29, 30, 31, 32, 33],\n\t},\n\t20: {\n\t\tlabel: 'Orange',\n\t\ttype: 'item',\n\t\tid: 20,\n\t},\n\t21: {\n\t\tlabel: 'Grapefruit',\n\t\ttype: 'item',\n\t\tid: 21,\n\t},\n\t22: {\n\t\tlabel: 'Lemon',\n\t\ttype: 'item',\n\t\tid: 22,\n\t},\n\t23: {\n\t\tlabel: 'Lime',\n\t\ttype: 'item',\n\t\tid: 23,\n\t},\n\t24: {\n\t\tlabel: 'Granny Smith',\n\t\ttype: 'item',\n\t\tid: 24,\n\t},\n\t25: {\n\t\tlabel: 'Pinklady',\n\t\ttype: 'item',\n\t\t_iconClass: 'glyphicon-file',\n\t\tid: 25,\n\t},\n\t26: {\n\t\tlabel: 'Rotten',\n\t\ttype: 'item',\n\t\tid: 26,\n\t},\n\t27: {\n\t\tlabel: 'Jonathan',\n\t\ttype: 'item',\n\t\tid: 27,\n\t},\n\t28: {\n\t\tlabel: 'Balaton',\n\t\ttype: 'item',\n\t\tid: 28,\n\t},\n\t29: {\n\t\tlabel: 'Erdi Botermo',\n\t\ttype: 'item',\n\t\tid: 29,\n\t},\n\t30: {\n\t\tlabel: 'Montmorency',\n\t\ttype: 'item',\n\t\tid: 30,\n\t},\n\t31: {\n\t\tlabel: 'Queen Ann',\n\t\ttype: 'item',\n\t\tid: 31,\n\t},\n\t32: {\n\t\tlabel: 'Ulster',\n\t\ttype: 'item',\n\t\tid: 32,\n\t},\n\t33: {\n\t\tlabel: 'Viva',\n\t\ttype: 'item',\n\t\tid: 33,\n\t},\n};\n\n/*\nSample of normalized hash table created\n{\n\t \"0\":{\n\t\t\t\"id\":0,\n\t\t\t\"nodes\":[\n\t\t\t\t 1,\n\t\t\t\t 2,\n\t\t\t\t 3,\n\t\t\t\t 7\n\t\t\t]\n\t },\n\t \"1\":{\n\t\t\t\"label\":\"Grains\",\n\t\t\t\"type\":\"item\",\n\t\t\t\"id\":1\n\t },\n\t \"2\":{\n\t\t\t\"label\":\"Fruits\",\n\t\t\t\"type\":\"branch\",\n\t\t\t\"id\":2,\n\t\t\t\"nodes\":[\n\t\t\t\t 4,\n\t\t\t\t 5\n\t\t\t]\n\t },\n\t \"3\":{\n\t\t\t\"label\":\"Nuts\",\n\t\t\t\"type\":\"branch\",\n\t\t\t\"_iconClass\":\"glyphicon-file\",\n\t\t\t\"id\":3,\n\t\t\t\"nodes\":[\n\t\t\t\t 8,\n\t\t\t\t 9,\n\t\t\t\t 10,\n\t\t\t\t 11\n\t\t\t]\n\t },\n\t \"4\":{\n\t\t\t\"assistiveText\":\"Ground Fruits\",\n\t\t\t\"label\":{\n\t\t\t\t \"type\":\"span\",\n\t\t\t\t \"key\":null,\n\t\t\t\t \"ref\":null,\n\t\t\t\t \"props\":{\n\t\t\t\t\t\t\"children\":\"Ground Fruits\"\n\t\t\t\t },\n\t\t\t\t \"_owner\":null,\n\t\t\t\t \"_store\":{\n\n\t\t\t\t }\n\t\t\t},\n\t\t\t\"type\":\"branch\",\n\t\t\t\"id\":4,\n\t\t\t\"nodes\":[\n\t\t\t\t 12,\n\t\t\t\t 13,\n\t\t\t\t 14\n\t\t\t]\n\t }\n}\n */\n\nclass Example extends React.Component {\n\tstatic displayName = 'DemoTree';\n\n\tstatic defaultProps = {\n\t\theading: 'Miscellaneous Foods',\n\t\tid: 'example-tree',\n\t};\n\n\tstate = {\n\t\tnodes: this.props.nodes || sampleNodes,\n\t\tsearchTerm: this.props.searchable ? 'fruit' : undefined,\n\t};\n\n\tgetNodes = (node) =>\n\t\tnode.nodes ? node.nodes.map((id) => this.state.nodes[id]) : [];\n\n\t// By default Tree can have multiple selected nodes and folders/branches can be selected. To disable either of these, you can use the following logic. However, `props` are immutable. The node passed in shouldn't be modified. Object and arrays are reference variables.\n\thandleExpandClick = (event, data) => {\n\t\tlog({\n\t\t\taction: this.props.action,\n\t\t\tcustomLog: this.props.log,\n\t\t\tevent,\n\t\t\teventName: 'Expand Branch',\n\t\t\tdata,\n\t\t});\n\t\tconst selected = data.select ? true : data.node.selected;\n\t\tthis.setState((prevState) => ({\n\t\t\t...prevState,\n\t\t\tnodes: {\n\t\t\t\t...prevState.nodes,\n\t\t\t\t...{\n\t\t\t\t\t[data.node.id]: {\n\t\t\t\t\t\t...data.node,\n\t\t\t\t\t\texpanded: data.expand,\n\t\t\t\t\t\tselected,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t}));\n\t};\n\n\thandleClick = (event, data) => {\n\t\tlog({\n\t\t\taction: this.props.action,\n\t\t\tcustomLog: this.props.log,\n\t\t\tevent,\n\t\t\teventName: 'Node Selected',\n\t\t\tdata,\n\t\t});\n\t\tif (this.props.multipleSelection) {\n\t\t\tif (\n\t\t\t\t!this.props.noBranchSelection ||\n\t\t\t\t(this.props.noBranchSelection && data.node.type !== 'branch')\n\t\t\t) {\n\t\t\t\t// Take the previous state, expand it, overwrite the `nodes` key with the previous state's `nodes` key expanded with the id of the node just clicked selected\n\t\t\t\tthis.setState((prevState) => ({\n\t\t\t\t\t...prevState,\n\t\t\t\t\tnodes: {\n\t\t\t\t\t\t...prevState.nodes,\n\t\t\t\t\t\t...{\n\t\t\t\t\t\t\t[data.node.id]: { ...data.node, selected: data.select },\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t}));\n\t\t\t}\n\t\t} else if (this.props.noBranchSelection && data.node.type === 'branch') {\n\t\t\t// OPEN BRANCH/FOLDER WHEN CLICKED\n\t\t\t// Although not codified in SLDS, this takes the click callback and turns it into the expand callback, and should be used for item only selection.\n\t\t\tthis.setState((prevState) => ({\n\t\t\t\t...prevState,\n\t\t\t\tnodes: {\n\t\t\t\t\t...prevState.nodes,\n\t\t\t\t\t...{\n\t\t\t\t\t\t[data.node.id]: { ...data.node, expanded: !data.node.expanded },\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}));\n\t\t} else {\n\t\t\t// SINGLE SELECTION\n\t\t\t// Take the previous state, expand it, overwrite the `nodes` key with the previous state's `nodes` key expanded with the id of the node just clicked selected and the previously selected node unselected.\n\t\t\tthis.setState((prevState) => {\n\t\t\t\t// Gaurd against no selection with the following. `selectedNode`\n\t\t\t\t// is the previously selected \"current state\" that is about to\n\t\t\t\t// be updated\n\t\t\t\tconst selectedNode = prevState.selectedNode\n\t\t\t\t\t? {\n\t\t\t\t\t\t\t[prevState.selectedNode.id]: {\n\t\t\t\t\t\t\t\t...prevState.nodes[prevState.selectedNode.id],\n\t\t\t\t\t\t\t\tselected: false,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}\n\t\t\t\t\t: {};\n\t\t\t\treturn {\n\t\t\t\t\t...prevState,\n\t\t\t\t\tnodes: {\n\t\t\t\t\t\t...prevState.nodes,\n\t\t\t\t\t\t...{\n\t\t\t\t\t\t\t[data.node.id]: { ...data.node, selected: data.select },\n\t\t\t\t\t\t\t...selectedNode,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tselectedNode: data.node,\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t};\n\n\thandleScroll = (event, data) => {\n\t\tlog({\n\t\t\taction: this.props.action,\n\t\t\tevent,\n\t\t\teventName: 'Tree scrolled',\n\t\t\tdata,\n\t\t});\n\t};\n\n\thandleSearchChange = (event) => {\n\t\tthis.setState({ searchTerm: event.target.value });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t\t<div>\n\t\t\t\t\t{this.props.searchable ? (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Search\n\t\t\t\t\t\t\t\tassistiveText={{ label: 'Search Tree' }}\n\t\t\t\t\t\t\t\tid=\"example-search\"\n\t\t\t\t\t\t\t\tvalue={this.state.searchTerm}\n\t\t\t\t\t\t\t\tonChange={this.handleSearchChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<Tree\n\t\t\t\t\t\tassistiveText={this.props.assistiveText}\n\t\t\t\t\t\tclassName={this.props.className}\n\t\t\t\t\t\tgetNodes={this.props.getNodes || this.getNodes}\n\t\t\t\t\t\theading={!this.props.noHeading && this.props.heading}\n\t\t\t\t\t\tid={this.props.id}\n\t\t\t\t\t\tlistStyle={this.props.listStyle}\n\t\t\t\t\t\tlistClassName={this.props.listClassName}\n\t\t\t\t\t\tnodes={this.state.nodes['0'].nodes}\n\t\t\t\t\t\tonExpandClick={this.props.onExpandClick || this.handleExpandClick}\n\t\t\t\t\t\tonClick={this.props.onClick || this.handleClick}\n\t\t\t\t\t\tonScroll={this.props.onScroll || this.handleScroll}\n\t\t\t\t\t\tsearchTerm={this.props.searchTerm || this.state.searchTerm}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</IconSettings>\n\t\t);\n\t}\n}\n\nexport default Example; // export is replaced with `ReactDOM.render(<Example />, mountNode);` at runtime\n"],"file":"default.js"}