{"version":3,"sources":["../../../../.tmp-es/components/accordion/__tests__/accordion.browser-test.jsx"],"names":["React","chai","expect","chaiEnzyme","mount","createMountNode","destroyMountNode","Accordion","IconSettings","Panel","Dropdown","use","propTypes","defaultProps","AccordionExample","props","state","expandedPanels","items","id","summary","details","selectedItem","icon","option","label","setState","filter","item","console","log","event","value","map","menuDropdown","togglePanel","Component","displayName","AccordionWithOnePanelExample","describe","describeFunction","mountNode","wrapper","beforeEach","context","afterEach","it","attachTo","accordion","find","to","be","present","panelContentActions","exist","accordionButtons","at","simulate","key","keyCode","which","getDOMNode","document","activeElement","equal","lastAccordionButton","length","panel","first","have","prop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport chai, { expect } from 'chai';\nimport chaiEnzyme from 'chai-enzyme';\nimport { mount } from 'enzyme';\n\n/* Enzyme Helpers that can mount and unmount React component instances to\n * the DOM and set `this.wrapper` and `this.dom` within Mocha's `this`\n * context [full source here](tests/enzyme-helpers.js). `this` can\n * only be referenced if inside `function () {}`.\n */\n\nimport {\n\tcreateMountNode,\n\tdestroyMountNode,\n} from '../../../tests/enzyme-helpers';\n\nimport Accordion from '../../accordion';\nimport IconSettings from '../../icon-settings';\nimport Panel from '../../accordion/panel';\nimport Dropdown from '../../menu-dropdown';\n\n/* Set Chai to use chaiEnzyme for enzyme compatible assertions:\n * https://github.com/producthunt/chai-enzyme\n */\n\nchai.use(chaiEnzyme());\n\n/* Re-usable demo component.\n */\n\nconst propTypes = {};\n\nconst defaultProps = {};\n\nclass AccordionExample extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\texpandedPanels: {},\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tid: '1',\n\t\t\t\t\tsummary: 'Accordion Summary',\n\t\t\t\t\tdetails: 'Accordion details - A',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: '2',\n\t\t\t\t\tsummary: 'Accordion Summary',\n\t\t\t\t\tdetails: 'Accordion details - B',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: '3',\n\t\t\t\t\tsummary: 'Accordion Summary',\n\t\t\t\t\tdetails: 'Accordion details - C',\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t}\n\n\tmenuDropdown(selectedItem) {\n\t\treturn (\n\t\t\t<Dropdown\n\t\t\t\talign=\"right\"\n\t\t\t\tid=\"ButtonGroupExampleDropdown\"\n\t\t\t\tassistiveText={{ icon: 'More Options' }}\n\t\t\t\tbuttonVariant=\"icon\"\n\t\t\t\tbuttonClassName=\"slds-shrink-none\"\n\t\t\t\ticonCategory=\"utility\"\n\t\t\t\ticonName=\"down\"\n\t\t\t\ticonVariant=\"border-filled\"\n\t\t\t\tonSelect={(option) => {\n\t\t\t\t\tif (option.label === 'delete') {\n\t\t\t\t\t\tthis.setState((state) => ({\n\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\titems: state.items.filter((item) => item.id !== selectedItem.id),\n\t\t\t\t\t\t}));\n\t\t\t\t\t} else if (console) {\n\t\t\t\t\t\tconsole.log('onSelect', event, option);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\toptions={[\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'delete',\n\t\t\t\t\t\tvalue: 'A0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'redo',\n\t\t\t\t\t\tvalue: 'B0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'activate',\n\t\t\t\t\t\tvalue: 'C0',\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t\ticonSize=\"x-small\"\n\t\t\t/>\n\t\t);\n\t}\n\n\ttogglePanel(id) {\n\t\tthis.setState((state) => ({\n\t\t\t...state,\n\t\t\texpandedPanels: {\n\t\t\t\t...state.expandedPanels,\n\t\t\t\t[id]: !state.expandedPanels[id],\n\t\t\t},\n\t\t}));\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t\t<Accordion id=\"base-example-accordion\">\n\t\t\t\t\t{this.state.items.map((item) => (\n\t\t\t\t\t\t<Panel\n\t\t\t\t\t\t\texpanded={!!this.state.expandedPanels[item.id]}\n\t\t\t\t\t\t\tid={item.id}\n\t\t\t\t\t\t\tpanelContentActions={this.menuDropdown(item)}\n\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\tonTogglePanel={() => this.togglePanel(item.id)}\n\t\t\t\t\t\t\tsummary={item.summary}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{item.details}\n\t\t\t\t\t\t</Panel>\n\t\t\t\t\t))}\n\t\t\t\t</Accordion>\n\t\t\t</IconSettings>\n\t\t);\n\t}\n}\n\nAccordionExample.displayName = 'AccordionExampleComponent';\nAccordionExample.propTypes = propTypes;\nAccordionExample.defaultProps = defaultProps;\n\nclass AccordionWithOnePanelExample extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\texpandedPanels: {},\n\t\t\titem: {\n\t\t\t\tid: '1',\n\t\t\t\tsummary: 'Accordion Summary',\n\t\t\t\tdetails: 'Accordion Details',\n\t\t\t},\n\t\t};\n\t}\n\n\ttogglePanel(id) {\n\t\tthis.setState((state) => ({\n\t\t\t...state,\n\t\t\texpandedPanels: {\n\t\t\t\t...state.expandedPanels,\n\t\t\t\t[id]: !state.expandedPanels[id],\n\t\t\t},\n\t\t}));\n\t}\n\n\trender() {\n\t\tconst { item } = this.state;\n\n\t\treturn (\n\t\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t\t<Accordion id=\"base-example-accordion\">\n\t\t\t\t\t<Panel\n\t\t\t\t\t\texpanded={!!this.state.expandedPanels[item.id]}\n\t\t\t\t\t\tid={item.id}\n\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\tonTogglePanel={() => this.togglePanel(item.id)}\n\t\t\t\t\t\tsummary={item.summary}\n\t\t\t\t\t>\n\t\t\t\t\t\t{item.details}\n\t\t\t\t\t</Panel>\n\t\t\t\t</Accordion>\n\t\t\t</IconSettings>\n\t\t);\n\t}\n}\n\nAccordionWithOnePanelExample.displayName =\n\t'AccordionWithOnePanelExampleComponent';\nAccordionWithOnePanelExample.propTypes = propTypes;\nAccordionWithOnePanelExample.defaultProps = defaultProps;\n\n/* Accordion rendering tests\n */\n\ndescribe('Accordion', function describeFunction() {\n\tdescribe('Renders Accordion', () => {\n\t\tlet mountNode;\n\t\tlet wrapper;\n\n\t\tbeforeEach(() => {\n\t\t\tmountNode = createMountNode({ context: this });\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tdestroyMountNode({ wrapper, mountNode });\n\t\t});\n\n\t\tit('renders an accordion', () => {\n\t\t\twrapper = mount(<AccordionExample />, { attachTo: mountNode });\n\t\t\tconst accordion = wrapper.find(Accordion);\n\t\t\texpect(accordion).to.be.present;\n\t\t});\n\n\t\tit('renders `panelContentActions` component, if passed', () => {\n\t\t\twrapper = mount(<AccordionExample />, {\n\t\t\t\tattachTo: mountNode,\n\t\t\t});\n\t\t\tconst panelContentActions = wrapper.find('div .slds-dropdown-trigger');\n\t\t\texpect(panelContentActions, 'panel dropdown component exists').to.exist;\n\t\t});\n\n\t\tit('renders accordion with only one panel', () => {\n\t\t\twrapper = mount(<AccordionWithOnePanelExample />, {\n\t\t\t\tattachTo: mountNode,\n\t\t\t});\n\t\t\tconst accordion = wrapper.find(Accordion);\n\t\t\texpect(accordion).to.be.present;\n\t\t});\n\t});\n\n\tdescribe('Interactions keyboard', () => {\n\t\tlet mountNode;\n\t\tlet wrapper;\n\n\t\tbeforeEach(() => {\n\t\t\tmountNode = createMountNode({ context: this });\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tdestroyMountNode({ wrapper, mountNode });\n\t\t});\n\n\t\tit('focuses the next accordion button on arrow down', () => {\n\t\t\twrapper = mount(<AccordionExample />, { attachTo: mountNode });\n\t\t\tconst accordionButtons = wrapper.find(\n\t\t\t\t'button.slds-accordion__summary-action'\n\t\t\t);\n\n\t\t\taccordionButtons.at(0).simulate('keyDown', {\n\t\t\t\tkey: 'ArrowDown',\n\t\t\t\tkeyCode: 40,\n\t\t\t\twhich: 40,\n\t\t\t});\n\n\t\t\texpect(\n\t\t\t\taccordionButtons.at(1).getDOMNode() === document.activeElement\n\t\t\t).to.equal(true);\n\t\t});\n\n\t\tit('focuses the previous accordion button on arrow up', () => {\n\t\t\twrapper = mount(<AccordionExample />, { attachTo: mountNode });\n\t\t\tconst accordionButtons = wrapper.find(\n\t\t\t\t'button.slds-accordion__summary-action'\n\t\t\t);\n\n\t\t\taccordionButtons.at(0).simulate('keyDown', {\n\t\t\t\tkey: 'ArrowUp',\n\t\t\t\tkeyCode: 38,\n\t\t\t\twhich: 38,\n\t\t\t});\n\n\t\t\tconst lastAccordionButton = accordionButtons.at(\n\t\t\t\taccordionButtons.length - 1\n\t\t\t);\n\t\t\texpect(\n\t\t\t\tlastAccordionButton.getDOMNode() === document.activeElement\n\t\t\t).to.equal(true);\n\t\t});\n\t});\n\n\tdescribe('Open panel', () => {\n\t\tlet mountNode;\n\t\tlet wrapper;\n\t\tbeforeEach(() => {\n\t\t\tmountNode = createMountNode({ context: this });\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tdestroyMountNode({ wrapper, mountNode });\n\t\t});\n\n\t\tit('triggers a change callback on panel select', () => {\n\t\t\twrapper = mount(<AccordionExample />, { attachTo: mountNode });\n\t\t\tconst panel = () => wrapper.find('SLDSAccordionPanel').first();\n\t\t\texpect(panel()).to.have.prop('expanded', false);\n\t\t\tpanel()\n\t\t\t\t.find('button.slds-accordion__summary-action')\n\t\t\t\t.simulate('click');\n\t\t\texpect(panel()).to.have.prop('expanded', true);\n\t\t});\n\n\t\tit('`aria-expanded` set to true on panel select', () => {\n\t\t\twrapper = mount(<AccordionExample />, { attachTo: mountNode });\n\t\t\tconst panel = () => wrapper.find('SLDSAccordionPanel').first();\n\t\t\tpanel()\n\t\t\t\t.find('button.slds-accordion__summary-action')\n\t\t\t\t.simulate('click');\n\t\t\texpect(\n\t\t\t\tpanel().find('button.slds-accordion__summary-action')\n\t\t\t).to.have.prop('aria-expanded', true);\n\t\t});\n\t});\n});\n"],"file":"accordion.browser-test.js"}