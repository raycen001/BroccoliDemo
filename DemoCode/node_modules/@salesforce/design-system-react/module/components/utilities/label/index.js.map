{"version":3,"sources":["../../../../.tmp-es/components/utilities/label/index.jsx"],"names":["React","PropTypes","classNames","propTypes","assistiveText","object","className","oneOfType","array","string","htmlFor","label","required","bool","variant","oneOf","defaultProps","Label","props","labelText","subRenders","base","static","displayName"],"mappings":"AAAA;;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,IAAMC,SAAS,GAAG;AACjB;;;AAGAC,EAAAA,aAAa,EAAEH,SAAS,CAACI,MAJR;;AAKjB;;;AAGAC,EAAAA,SAAS,EAAEL,SAAS,CAACM,SAAV,CAAoB,CAC9BN,SAAS,CAACO,KADoB,EAE9BP,SAAS,CAACI,MAFoB,EAG9BJ,SAAS,CAACQ,MAHoB,CAApB,CARM;;AAajB;;;AAGAC,EAAAA,OAAO,EAAET,SAAS,CAACQ,MAhBF;;AAiBjB;;;AAGAE,EAAAA,KAAK,EAAEV,SAAS,CAACQ,MApBA;;AAqBjB;;;AAGAG,EAAAA,QAAQ,EAAEX,SAAS,CAACY,IAxBH;;AAyBjB;;;AAGAC,EAAAA,OAAO,EAAEb,SAAS,CAACc,KAAV,CAAgB,CAAC,MAAD,EAAS,QAAT,CAAhB;AA5BQ,CAAlB;AA+BA,IAAMC,YAAY,GAAG;AACpBF,EAAAA,OAAO,EAAE;AADW,CAArB;AAIA;;;;AAGA,IAAMG,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACxB,MAAMC,SAAS,GACdD,KAAK,CAACP,KAAN,IAAgBO,KAAK,CAACd,aAAN,IAAuBc,KAAK,CAACd,aAAN,CAAoBO,KAD5D,CADwB,CAE4C;;AAEpE,MAAMS,UAAU,GAAG;AAClBC,IAAAA,IAAI;AAAA;AACH;AACC,MAAA,SAAS,EAAEnB,UAAU,CACpB,0BADoB,EAEpB;AACC,+BAAuBgB,KAAK,CAACd,aAAN,IAAuB,CAACc,KAAK,CAACP;AADtD,OAFoB,EAKpBO,KAAK,CAACZ,SALc,CADtB;AAQC,MAAA,OAAO,EAAEY,KAAK,CAACR;AARhB,OAUEQ,KAAK,CAACN,QAAN;AAAA;AACA;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAgC,MAAA,KAAK,EAAC;AAAtC,OACE,GADF,CAXF,EAeEO,SAfF,CAFiB;AAoBlBG,IAAAA,MAAM;AAAA;AACL;AAAM,MAAA,SAAS,EAAEpB,UAAU,CAAC,0BAAD,EAA6BgB,KAAK,CAACZ,SAAnC;AAA3B,OACEa,SADF;AArBiB,GAAnB;AA2BA,SAAOA,SAAS,GAAGC,UAAU,CAACF,KAAK,CAACJ,OAAP,CAAb,GAA+B,IAA/C;AACA,CAhCD;;AAkCAG,KAAK,CAACM,WAAN,GAAoB,OAApB;AACAN,KAAK,CAACd,SAAN,GAAkBA,SAAlB;AACAc,KAAK,CAACD,YAAN,GAAqBA,YAArB;AAEA,eAAeC,KAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst propTypes = {\n\t/*\n\t * Assistive Text to use instead of a visible label\n\t */\n\tassistiveText: PropTypes.object,\n\t/**\n\t * Class names to be added to the label\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/*\n\t * Id of the input associated with this label\n\t */\n\thtmlFor: PropTypes.string,\n\t/*\n\t * Input Label\n\t */\n\tlabel: PropTypes.string,\n\t/*\n\t * Applies label styling for a required form element\n\t */\n\trequired: PropTypes.bool,\n\t/**\n\t * Changes markup of label.\n\t */\n\tvariant: PropTypes.oneOf(['base', 'static']),\n};\n\nconst defaultProps = {\n\tvariant: 'base',\n};\n\n/*\n * Form label. This returns null if there is no label text (hidden or shown)\n */\nconst Label = (props) => {\n\tconst labelText =\n\t\tprops.label || (props.assistiveText && props.assistiveText.label); // One of these is required to pass accessibility tests\n\n\tconst subRenders = {\n\t\tbase: (\n\t\t\t<label\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-form-element__label',\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-assistive-text': props.assistiveText && !props.label,\n\t\t\t\t\t},\n\t\t\t\t\tprops.className\n\t\t\t\t)}\n\t\t\t\thtmlFor={props.htmlFor}\n\t\t\t>\n\t\t\t\t{props.required && (\n\t\t\t\t\t<abbr className=\"slds-required\" title=\"required\">\n\t\t\t\t\t\t{'*'}\n\t\t\t\t\t</abbr>\n\t\t\t\t)}\n\t\t\t\t{labelText}\n\t\t\t</label>\n\t\t),\n\t\tstatic: (\n\t\t\t<span className={classNames('slds-form-element__label', props.className)}>\n\t\t\t\t{labelText}\n\t\t\t</span>\n\t\t),\n\t};\n\n\treturn labelText ? subRenders[props.variant] : null;\n};\n\nLabel.displayName = 'Label';\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\n\nexport default Label;\n"],"file":"index.js"}