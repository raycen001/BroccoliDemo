{"version":3,"sources":["../../../../.tmp-es/components/utilities/menu-list/index.jsx"],"names":["React","PropTypes","classNames","ListItem","LIST","List","lengthClassName","list","props","length","triggerId","className","options","map","option","index","id","getListItemId","isSingleSelected","selectedIndex","isMultipleSelected","selectedIndices","indexOf","disabled","checkmark","value","itemRenderer","onSelect","listItem","itemRefs","tooltipMenuItem","__html","Component","bool","string","func","oneOf","array","number","node"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # List Component\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\n// ### classNames\nimport classNames from 'classnames';\n\n// ## Children\nimport ListItem from './item';\n\n// ## Constants\nimport { LIST } from '../../../utilities/constants';\n\n/**\n * Component description.\n */\nclass List extends React.Component {\n\tstatic displayName = LIST;\n\n\tstatic propTypes = {\n\t\t/**\n\t\t * Determines whether or not to show a checkmark for selected items.\n\t\t */\n\t\tcheckmark: PropTypes.bool,\n\t\t/**\n\t\t * CSS classes to be added to `<ul />`.\n\t\t */\n\t\tclassName: PropTypes.string,\n\t\t/**\n\t\t * Used internally to determine the id that will be used for list items.\n\t\t */\n\t\tgetListItemId: PropTypes.func,\n\t\t/**\n\t\t * Used internally to pass references to the individual menu items back up for focusing / scrolling.\n\t\t */\n\t\titemRefs: PropTypes.func,\n\t\t/**\n\t\t * If provided, this function will be used to render the contents of each menu item.\n\t\t */\n\t\titemRenderer: PropTypes.func,\n\t\t/**\n\t\t * Sets the height of the list based on the numeber of items.\n\t\t */\n\t\tlength: PropTypes.oneOf([null, '5', '7', '10', 5, 7, 10]),\n\t\t/**\n\t\t * Triggered when a list item is selected (via mouse or keyboard).\n\t\t */\n\t\tonSelect: PropTypes.func,\n\t\t/**\n\t\t * An array of items to render in the list.\n\t\t */\n\t\toptions: PropTypes.array,\n\t\t/**\n\t\t * The index of the currently selected item in the list.\n\t\t */\n\t\tselectedIndex: PropTypes.number,\n\t\t/**\n\t\t * Accepts a `Tooltip` component to be used as the template for menu item tooltips that appear via the `tooltipContent` options object attribute\n\t\t */\n\t\ttooltipMenuItem: PropTypes.node,\n\t\t/**\n\t\t * The id of the element which triggered this list (in a menu context).\n\t\t */\n\t\ttriggerId: PropTypes.string,\n\t};\n\n\tstatic defaultProps = {\n\t\tlength: '5',\n\t\toptions: [],\n\t\tselectedIndex: -1,\n\t};\n\n\trender() {\n\t\tlet lengthClassName;\n\t\tlet list;\n\n\t\tif (this.props.length) {\n\t\t\tlengthClassName = `slds-dropdown_length-${this.props.length}`;\n\t\t}\n\n\t\tlist = (\n\t\t\t<ul\n\t\t\t\taria-labelledby={this.props.triggerId}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'dropdown__list',\n\t\t\t\t\tlengthClassName,\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t\trole=\"menu\"\n\t\t\t>\n\t\t\t\t{this.props.options.map((option, index) => {\n\t\t\t\t\tconst id = this.props.getListItemId(index);\n\t\t\t\t\tconst isSingleSelected = index === this.props.selectedIndex;\n\t\t\t\t\tconst isMultipleSelected =\n\t\t\t\t\t\t!!this.props.selectedIndices &&\n\t\t\t\t\t\tthis.props.selectedIndices.indexOf(index) !== -1;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t{...option}\n\t\t\t\t\t\t\taria-disabled={option.disabled}\n\t\t\t\t\t\t\tcheckmark={\n\t\t\t\t\t\t\t\tthis.props.checkmark && (isSingleSelected || isMultipleSelected)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdata={option}\n\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\tisSelected={isSingleSelected || isMultipleSelected}\n\t\t\t\t\t\t\tkey={`${id}-${option.value}`}\n\t\t\t\t\t\t\tlabelRenderer={this.props.itemRenderer}\n\t\t\t\t\t\t\tonSelect={this.props.onSelect}\n\t\t\t\t\t\t\tref={(listItem) => this.props.itemRefs(listItem, index)}\n\t\t\t\t\t\t\ttooltipTemplate={this.props.tooltipMenuItem}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t);\n\n\t\tif (this.props.tooltipMenuItem) {\n\t\t\t/* eslint-disable react/no-danger */\n\t\t\tlist = (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<style\n\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t__html: `.slds-dropdown__item > .slds-tooltip-trigger > a {\n\tposition: relative;\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n\t-ms-flex-pack: justify;\n\tjustify-content: space-between;\n\t-ms-flex-align: center;\n\talign-items: center;\n\tpadding: 0.5rem 0.75rem;\n\tcolor: #080707;\n\twhite-space: nowrap;\n\tcursor: pointer;\n}\n\n.slds-dropdown__item > .slds-tooltip-trigger > a:active {\n    text-decoration: none;\n    background-color: #ecebea;\n}\n\n.slds-dropdown__item > .slds-tooltip-trigger > a:hover,\n.slds-dropdown__item > .slds-tooltip-trigger > a:focus {\n    outline: 0;\n    text-decoration: none;\n    background-color: #f3f2f2;\n}\n`,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t{list}\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t\t/* eslint-enable react/no-danger */\n\t\t}\n\n\t\treturn list;\n\t}\n}\n\nexport default List;\n"],"file":"index.js"}