{"version":3,"sources":["../../../.tmp-es/components/global-header/dropdown.jsx"],"names":["React","PropTypes","MenuDropdown","GlobalHeaderTrigger","checkProps","GLOBAL_HEADER_DROPDOWN","GLOBAL_HEADER_TOOL","GlobalHeaderDropdown","props","globalAction","iconVariant","rest","iconVariantOverride","displayName","propTypes","align","oneOf","className","string","buttonClassName","oneOfType","array","object","iconName","id","bool","nubbinPosition","offset","onSelect","func","options","isRequired","defaultProps","buttonVariant"],"mappings":";;;;;;AAAA;;AACA;AAEA;AACA;AAEA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,mBAAP,MAAgC,4BAAhC,C,CAEA;AACA;;AACA,OAAOC,UAAP,MAAuB,eAAvB,C,CAEA;;AACA,SACCC,sBADD,EAECC,kBAFD,QAGO,2BAHP;AAKA;;;;AAGA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD,EAAW;AACvCJ,EAAAA,UAAU,CAACC,sBAAD,EAAyBG,KAAzB,CAAV;;AADuC,MAG/BC,YAH+B,GAGQD,KAHR,CAG/BC,YAH+B;AAAA,MAGjBC,WAHiB,GAGQF,KAHR,CAGjBE,WAHiB;AAAA,MAGDC,IAHC,4BAGQH,KAHR;;AAIvC,MAAII,mBAAJ;;AAEA,MAAIH,YAAJ,EAAkB;AACjBG,IAAAA,mBAAmB,GAAG,WAAtB;AACA;;AAED;AAAA;AACC,wBAAC,YAAD;AAAc,MAAA,cAAc,EAAC;AAA7B,OAA6CD,IAA7C;AAAA;AACC,wBAAC,mBAAD;AACC,MAAA,YAAY,EAAEF,YADf;AAEC,MAAA,QAAQ,EAAEA,YAAY,IAAI,OAF3B;AAGC,MAAA,WAAW,EAAEG,mBAAmB,IAAIF;AAHrC,MADD;AADD;AASA,CAnBD,C,CAqBA;AACA;AACA;;;AACAH,oBAAoB,CAACM,WAArB,GAAmCP,kBAAnC,C,CAEA;;AACAC,oBAAoB,CAACO,SAArB,GAAiC;AAChC;;;AAGAC,EAAAA,KAAK,EAAEd,SAAS,CAACe,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB,CAJyB;;AAKhC;;;AAGAC,EAAAA,SAAS,EAAEhB,SAAS,CAACiB,MARW;;AAShC;;;AAGAC,EAAAA,eAAe,EAAElB,SAAS,CAACmB,SAAV,CAAoB,CACpCnB,SAAS,CAACoB,KAD0B,EAEpCpB,SAAS,CAACqB,MAF0B,EAGpCrB,SAAS,CAACiB,MAH0B,CAApB,CAZe;;AAiBhC;;;AAGAK,EAAAA,QAAQ,EAAEtB,SAAS,CAACiB,MApBY;;AAqBhC;;;AAGAR,EAAAA,WAAW,EAAET,SAAS,CAACe,KAAV,CAAgB,CAC5B,MAD4B,EAE5B,WAF4B,EAG5B,QAH4B,EAI5B,eAJ4B,EAK5B,MAL4B,EAM5B,eAN4B,CAAhB,CAxBmB;;AAgChC;;;AAGAQ,EAAAA,EAAE,EAAEvB,SAAS,CAACiB,MAnCkB;;AAoChC;;;AAGAT,EAAAA,YAAY,EAAER,SAAS,CAACwB,IAvCQ;;AAwChC;;;AAGAC,EAAAA,cAAc,EAAEzB,SAAS,CAACe,KAAV,CAAgB,CAC/B,UAD+B,EAE/B,KAF+B,EAG/B,WAH+B,EAI/B,aAJ+B,EAK/B,QAL+B,EAM/B,cAN+B,CAAhB,CA3CgB;;AAmDhC;;;AAGAW,EAAAA,MAAM,EAAE1B,SAAS,CAACiB,MAtDc;;AAuDhC;;;AAGAU,EAAAA,QAAQ,EAAE3B,SAAS,CAAC4B,IA1DY;;AA2DhC;;;AAGAC,EAAAA,OAAO,EAAE7B,SAAS,CAACoB,KAAV,CAAgBU;AA9DO,CAAjC,C,CAiEA;;AACAxB,oBAAoB,CAACyB,YAArB,GAAoC;AACnCjB,EAAAA,KAAK,EAAE,OAD4B;AAEnCkB,EAAAA,aAAa,EAAE,MAFoB;AAGnCvB,EAAAA,WAAW,EAAE,eAHsB;AAInCgB,EAAAA,cAAc,EAAE;AAJmB,CAApC;AAOA,eAAenB,oBAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Global Header Dropdown Component\n// NOTE: THIS COMPONENT HAS BEEN DEPRECATED AND WILL BE REMOVED IN FUTURE MAJOR RELEASES\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### Dropdown\nimport MenuDropdown from '../menu-dropdown';\nimport GlobalHeaderTrigger from './private/dropdown-trigger';\n\n// This component's `checkProps` which issues warnings to developers about properties\n// when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\n\n// ## Constants\nimport {\n\tGLOBAL_HEADER_DROPDOWN,\n\tGLOBAL_HEADER_TOOL,\n} from '../../utilities/constants';\n\n/**\n * This component is an implementation of `MenuDropdown` with a custom trigger. All the properties listed below are provided to the `MenuDropdown` component. Any additional properties are provided to the Custom Trigger (that is the `Button` or `li` tag).\n */\nconst GlobalHeaderDropdown = (props) => {\n\tcheckProps(GLOBAL_HEADER_DROPDOWN, props);\n\n\tconst { globalAction, iconVariant, ...rest } = props;\n\tlet iconVariantOverride;\n\n\tif (globalAction) {\n\t\ticonVariantOverride = 'container';\n\t}\n\n\treturn (\n\t\t<MenuDropdown nubbinPosition=\"top right\" {...rest}>\n\t\t\t<GlobalHeaderTrigger\n\t\t\t\tglobalAction={globalAction}\n\t\t\t\ticonSize={globalAction && 'small'}\n\t\t\t\ticonVariant={iconVariantOverride || iconVariant}\n\t\t\t/>\n\t\t</MenuDropdown>\n\t);\n};\n\n// ### Display Name\n// Always use the canonical component name (set in the core) as the React\n// display name.\nGlobalHeaderDropdown.displayName = GLOBAL_HEADER_TOOL;\n\n// ### Prop Types\nGlobalHeaderDropdown.propTypes = {\n\t/**\n\t * Aligns the right or left side of the menu with the respective side of the trigger. This is not intended for use with `nubbinPosition`.\n\t */\n\talign: PropTypes.oneOf(['left', 'right']),\n\t/**\n\t * Extra classnames to apply to the dropdown menu.\n\t */\n\tclassName: PropTypes.string,\n\t/**\n\t * CSS classes to be added to `li` element.\n\t */\n\tbuttonClassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Name of the icon. Visit <a href=\"http://www.lightningdesignsystem.com/resources/icons\">Lightning Design System Icons</a> to reference icon names.\n\t */\n\ticonName: PropTypes.string,\n\t/**\n\t * For icon variants, please reference <a href=\"http://www.lightningdesignsystem.com/components/buttons/#icon\">Lightning Design System Icons</a>.\n\t */\n\ticonVariant: PropTypes.oneOf([\n\t\t'bare',\n\t\t'container',\n\t\t'border',\n\t\t'border-filled',\n\t\t'more',\n\t\t'global-header',\n\t]),\n\t/**\n\t * A unique ID is needed in order to support keyboard navigation, ARIA support, and connect the dropdown to the triggering button.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * Adds custom styling such as inverse fill and special sizing/spacing\n\t */\n\tglobalAction: PropTypes.bool,\n\t/**\n\t * Positions dropdown menu with a nubbin--that is the arrow notch. The placement options correspond to the placement of the nubbin. This is implemeted with CSS classes and is best used with a `Button` with \"icon container\" styling. Dropdown menus will still be contained to the closest scrolling parent.\n\t */\n\tnubbinPosition: PropTypes.oneOf([\n\t\t'top left',\n\t\t'top',\n\t\t'top right',\n\t\t'bottom left',\n\t\t'bottom',\n\t\t'bottom right',\n\t]),\n\t/**\n\t *  Offset adds pixels to the absolutely positioned dropdown menu in the format: ([vertical]px [horizontal]px).\n\t */\n\toffset: PropTypes.string,\n\t/**\n\t * Triggered when an item in the menu is clicked.\n\t */\n\tonSelect: PropTypes.func,\n\t/**\n\t * An array of menu item.\n\t */\n\toptions: PropTypes.array.isRequired,\n};\n\n// ### Default Props\nGlobalHeaderDropdown.defaultProps = {\n\talign: 'right',\n\tbuttonVariant: 'icon',\n\ticonVariant: 'global-header',\n\tnubbinPosition: 'top right',\n};\n\nexport default GlobalHeaderDropdown;\n"],"file":"dropdown.js"}