{"version":3,"sources":["../../../../.tmp-es/components/combobox/__examples__/readonly-single-selection-custom-menu-item.jsx"],"names":["React","Combobox","Icon","IconSettings","accounts","id","label","subTitle","type","accountsWithIcon","map","elem","icon","CustomMenuItem","props","option","selected","assistiveText","optionSelectedInMenu","displayName","Example","state","inputValue","selection","onSelect","event","data","action","Object","keys","key","console","log","setState","placeholderReadOnly","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AAEA,IAAMC,QAAQ,GAAG,CAChB;AACCC,EAAAA,EAAE,EAAE,GADL;AAECC,EAAAA,KAAK,EAAE,MAFR;AAGCC,EAAAA,QAAQ,EAAE,yBAHX;AAICC,EAAAA,IAAI,EAAE;AAJP,CADgB,EAOhB;AACCH,EAAAA,EAAE,EAAE,GADL;AAECC,EAAAA,KAAK,EAAE,sBAFR;AAGCC,EAAAA,QAAQ,EAAE,yBAHX;AAICC,EAAAA,IAAI,EAAE;AAJP,CAPgB,EAahB;AACCH,EAAAA,EAAE,EAAE,GADL;AAECC,EAAAA,KAAK,EAAE,aAFR;AAGCC,EAAAA,QAAQ,EAAE,sBAHX;AAICC,EAAAA,IAAI,EAAE;AAJP,CAbgB,EAmBhB;AACCH,EAAAA,EAAE,EAAE,GADL;AAECC,EAAAA,KAAK,EAAE,aAFR;AAGCC,EAAAA,QAAQ,EAAE,6BAHX;AAICC,EAAAA,IAAI,EAAE;AAJP,CAnBgB,EAyBhB;AACCH,EAAAA,EAAE,EAAE,GADL;AAECC,EAAAA,KAAK,EAAE,wBAFR;AAGCC,EAAAA,QAAQ,EAAE,sBAHX;AAICC,EAAAA,IAAI,EAAE;AAJP,CAzBgB,EA+BhB;AACCH,EAAAA,EAAE,EAAE,GADL;AAECC,EAAAA,KAAK,EAAE,sBAFR;AAGCC,EAAAA,QAAQ,EAAE,uBAHX;AAICC,EAAAA,IAAI,EAAE;AAJP,CA/BgB,EAqChB;AAAEH,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,KAAK,EAAE,kBAAlB;AAAsCE,EAAAA,IAAI,EAAE;AAA5C,CArCgB,EAsChB;AACCH,EAAAA,EAAE,EAAE,GADL;AAECC,EAAAA,KAAK,EAAE,mBAFR;AAGCC,EAAAA,QAAQ,EAAE,4BAHX;AAICC,EAAAA,IAAI,EAAE;AAJP,CAtCgB,CAAjB;AA8CA,IAAMC,gBAAgB,GAAGL,QAAQ,CAACM,GAAT,CAAa,UAACC,IAAD;AAAA,2BAClCA,IADkC,EAElC;AACFC,IAAAA,IAAI;AAAA;AACH,wBAAC,IAAD;AACC,MAAA,aAAa,EAAE;AAAEN,QAAAA,KAAK,EAAE;AAAT,OADhB;AAEC,MAAA,QAAQ,EAAC,UAFV;AAGC,MAAA,IAAI,EAAC,SAHN;AAIC,MAAA,IAAI,EAAEK,IAAI,CAACH;AAJZ;AAFC,GAFkC;AAAA,CAAb,CAAzB;;AAcA,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD;AAAA;AAAA;AACtB;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AACC;AAAM,MAAA,SAAS,EAAC;AAAhB,OACEA,KAAK,CAACC,MAAN,CAAaH,IADf,CADD;AAAA;AAIC;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AACC;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAgC,MAAA,KAAK,EAAEE,KAAK,CAACC,MAAN,CAAaT;AAApD,OACEQ,KAAK,CAACE,QAAN;AAAA;AACA;AAAM,MAAA,SAAS,EAAC;AAAhB,OACEF,KAAK,CAACG,aAAN,CAAoBC,oBADtB,CADA,GAIG,IALL,EAKW,GALX,EAMEJ,KAAK,CAACC,MAAN,CAAaT,KANf,CADD,CAJD;AADsB;AAAA,CAAvB;;AAiBAO,cAAc,CAACM,WAAf,GAA6B,gBAA7B;;IAEMC,O;;;;;AACL,mBAAYN,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,iFAAMA,KAAN;AAEA,UAAKO,KAAL,GAAa;AACZC,MAAAA,UAAU,EAAE,EADA;AAEZC,MAAAA,SAAS,EAAE;AAFC,KAAb;AAHkB;AAOlB;;;;6BAEQ;AAAA;;AACR;AAAA;AACC,4BAAC,YAAD;AAAc,UAAA,QAAQ,EAAC;AAAvB;AAAA;AACC,4BAAC,QAAD;AACC,UAAA,EAAE,EAAC,sCADJ;AAEC,UAAA,MAAM,EAAE;AACPC,YAAAA,QAAQ,EAAE,kBAACC,KAAD,EAAQC,IAAR,EAAiB;AAC1B,kBAAI,MAAI,CAACZ,KAAL,CAAWa,MAAf,EAAuB;AACtB,gBAAA,MAAI,CAACb,KAAL,CAAWa,MAAX,CAAkB,UAAlB,iBACCF,KADD,4BAEIG,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBhB,GAAlB,CAAsB,UAACoB,GAAD;AAAA,yBAASJ,IAAI,CAACI,GAAD,CAAb;AAAA,iBAAtB,CAFJ;AAIA,eALD,MAKO,IAAIC,OAAJ,EAAa;AACnBA,gBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBP,KAAxB,EAA+BC,IAA/B;AACA;;AACD,cAAA,MAAI,CAACO,QAAL,CAAc;AACbX,gBAAAA,UAAU,EAAE,EADC;AAEbC,gBAAAA,SAAS,EAAEG,IAAI,CAACH;AAFH,eAAd;AAIA;AAdM,WAFT;AAkBC,UAAA,MAAM,EAAE;AACPjB,YAAAA,KAAK,EAAE,QADA;AAEP4B,YAAAA,mBAAmB,EAAE;AAFd,WAlBT;AAsBC,UAAA,gBAAgB,EAAErB,cAtBnB;AAuBC,UAAA,OAAO,EAAEJ,gBAvBV;AAwBC,UAAA,SAAS,EAAE,KAAKY,KAAL,CAAWE,SAxBvB;AAyBC,UAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,UAzBnB;AA0BC,UAAA,OAAO,EAAC;AA1BT,WA2BK,KAAKR,KA3BV,EADD;AADD;AAiCA;;;;EA5CoBd,KAAK,CAACmC,S;;AA+C5Bf,OAAO,CAACD,WAAR,GAAsB,iBAAtB;AACA,eAAeC,OAAf,C,CAAwB","sourcesContent":["/* eslint-disable no-console, react/prop-types */\nimport React from 'react';\nimport Combobox from '~/components/combobox';\nimport Icon from '~/components/icon';\nimport IconSettings from '~/components/icon-settings';\n\nconst accounts = [\n\t{\n\t\tid: '1',\n\t\tlabel: 'Acme',\n\t\tsubTitle: 'Account • San Francisco',\n\t\ttype: 'account',\n\t},\n\t{\n\t\tid: '2',\n\t\tlabel: 'Salesforce.com, Inc.',\n\t\tsubTitle: 'Account • San Francisco',\n\t\ttype: 'account',\n\t},\n\t{\n\t\tid: '3',\n\t\tlabel: \"Paddy's Pub\",\n\t\tsubTitle: 'Account • Boston, MA',\n\t\ttype: 'account',\n\t},\n\t{\n\t\tid: '4',\n\t\tlabel: 'Tyrell Corp',\n\t\tsubTitle: 'Account • San Francisco, CA',\n\t\ttype: 'account',\n\t},\n\t{\n\t\tid: '5',\n\t\tlabel: 'Paper St. Soap Company',\n\t\tsubTitle: 'Account • Beloit, WI',\n\t\ttype: 'account',\n\t},\n\t{\n\t\tid: '6',\n\t\tlabel: 'Nakatomi Investments',\n\t\tsubTitle: 'Account • Chicago, IL',\n\t\ttype: 'account',\n\t},\n\t{ id: '7', label: 'Acme Landscaping', type: 'account' },\n\t{\n\t\tid: '8',\n\t\tlabel: 'Acme Construction',\n\t\tsubTitle: 'Account • Grand Marais, MN',\n\t\ttype: 'account',\n\t},\n];\n\nconst accountsWithIcon = accounts.map((elem) => ({\n\t...elem,\n\t...{\n\t\ticon: (\n\t\t\t<Icon\n\t\t\t\tassistiveText={{ label: 'Account' }}\n\t\t\t\tcategory=\"standard\"\n\t\t\t\tsize=\"x-small\"\n\t\t\t\tname={elem.type}\n\t\t\t/>\n\t\t),\n\t},\n}));\n\nconst CustomMenuItem = (props) => (\n\t<span className=\"slds-media\">\n\t\t<span className=\"slds-m-left_x-small slds-m-right_x-small\">\n\t\t\t{props.option.icon}\n\t\t</span>\n\t\t<span className=\"slds-media__body\">\n\t\t\t<span className=\"slds-truncate\" title={props.option.label}>\n\t\t\t\t{props.selected ? (\n\t\t\t\t\t<span className=\"slds-assistive-text\">\n\t\t\t\t\t\t{props.assistiveText.optionSelectedInMenu}\n\t\t\t\t\t</span>\n\t\t\t\t) : null}{' '}\n\t\t\t\t{props.option.label}\n\t\t\t</span>\n\t\t</span>\n\t</span>\n);\nCustomMenuItem.displayName = 'CustomMenuItem';\n\nclass Example extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tinputValue: '',\n\t\t\tselection: [],\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t\t<Combobox\n\t\t\t\t\tid=\"combobox-readonly-single-custom-item\"\n\t\t\t\t\tevents={{\n\t\t\t\t\t\tonSelect: (event, data) => {\n\t\t\t\t\t\t\tif (this.props.action) {\n\t\t\t\t\t\t\t\tthis.props.action('onSelect')(\n\t\t\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\t\t\t...Object.keys(data).map((key) => data[key])\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if (console) {\n\t\t\t\t\t\t\t\tconsole.log('onSelect', event, data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tinputValue: '',\n\t\t\t\t\t\t\t\tselection: data.selection,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\tlabels={{\n\t\t\t\t\t\tlabel: 'Search',\n\t\t\t\t\t\tplaceholderReadOnly: 'Select company',\n\t\t\t\t\t}}\n\t\t\t\t\tonRenderMenuItem={CustomMenuItem}\n\t\t\t\t\toptions={accountsWithIcon}\n\t\t\t\t\tselection={this.state.selection}\n\t\t\t\t\tvalue={this.state.inputValue}\n\t\t\t\t\tvariant=\"readonly\"\n\t\t\t\t\t{...this.props}\n\t\t\t\t/>\n\t\t\t</IconSettings>\n\t\t);\n\t}\n}\n\nExample.displayName = 'ComboboxExample';\nexport default Example; // export is replaced with `ReactDOM.render(<Example />, mountNode);` at runtime\n"],"file":"readonly-single-selection-custom-menu-item.js"}