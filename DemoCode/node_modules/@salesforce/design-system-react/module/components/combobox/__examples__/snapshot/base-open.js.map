{"version":3,"sources":["../../../../../.tmp-es/components/combobox/__examples__/snapshot/base-open.jsx"],"names":["React","Combobox","Icon","IconSettings","accounts","id","label","subTitle","type","accountsWithIcon","map","elem","icon","Example","props","state","inputValue","selection","placeholder","event","value","console","log","setState","data","selectedOption","Component","displayName"],"mappings":"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","sourcesContent":["/* eslint-disable no-console, react/prop-types */\nimport React from 'react';\nimport Combobox from '~/components/combobox';\nimport Icon from '~/components/icon';\nimport IconSettings from '~/components/icon-settings';\n\nconst accounts = [\n\t{\n\t\tid: '1',\n\t\tlabel: 'Acme',\n\t\tsubTitle: 'Account • San Francisco',\n\t\ttype: 'account',\n\t},\n\t{\n\t\tid: '2',\n\t\tlabel: 'Salesforce.com, Inc.',\n\t\tsubTitle: 'Account • San Francisco',\n\t\ttype: 'account',\n\t},\n];\n\nconst accountsWithIcon = accounts.map((elem) => ({\n\t...elem,\n\t...{\n\t\ticon: (\n\t\t\t<Icon\n\t\t\t\tassistiveText={{ label: 'Account' }}\n\t\t\t\tcategory=\"standard\"\n\t\t\t\tname={elem.type}\n\t\t\t/>\n\t\t),\n\t},\n}));\n\nclass Example extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tinputValue: '',\n\t\t\tselection: [],\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t\t<Combobox\n\t\t\t\t\tid=\"combobox-unique-id\"\n\t\t\t\t\tisOpen\n\t\t\t\t\tlabels={{\n\t\t\t\t\t\tlabel: 'Search',\n\t\t\t\t\t\tplaceholder: 'Search Salesforce',\n\t\t\t\t\t}}\n\t\t\t\t\tmenuPosition=\"relative\"\n\t\t\t\t\tonChange={(event, { value }) => {\n\t\t\t\t\t\tconsole.log('onChange', value);\n\t\t\t\t\t\tthis.setState({ inputValue: value });\n\t\t\t\t\t}}\n\t\t\t\t\tonRequestRemoveSelectedOption={(event, data) => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tinputValue: '',\n\t\t\t\t\t\t\tselection: [],\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t\tonSubmit={(event, { value }) => {\n\t\t\t\t\t\tconsole.log('onSubmit', value);\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tselection: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: value,\n\t\t\t\t\t\t\t\t\ticon: (\n\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\tassistiveText={{ label: 'Account' }}\n\t\t\t\t\t\t\t\t\t\t\tcategory=\"standard\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"account\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t\tonSelect={(event, data) => {\n\t\t\t\t\t\tconsole.log('onSelect', data);\n\t\t\t\t\t\tthis.setState({ selection: data.selection });\n\t\t\t\t\t}}\n\t\t\t\t\toptions={accountsWithIcon}\n\t\t\t\t\tselection={this.state.selection}\n\t\t\t\t\tvalue={\n\t\t\t\t\t\tthis.state.selectedOption\n\t\t\t\t\t\t\t? this.state.selectedOption.label\n\t\t\t\t\t\t\t: this.state.inputValue\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</IconSettings>\n\t\t);\n\t}\n}\n\nExample.displayName = 'ComboboxExample';\nexport default Example; // export is replaced with `ReactDOM.render(<Example />, mountNode);` at runtime\n"],"file":"base-open.js"}