{"version":3,"sources":["../../../../../.tmp-es/components/combobox/__examples__/snapshot/inline-multiple-open-loading.jsx"],"names":["React","Combobox","Icon","comboboxFilterAndLimit","IconSettings","accounts","id","label","subTitle","type","accountsWithIcon","map","elem","icon","Example","props","setTimeout","setState","isLoadingMenuItems","state","inputValue","selection","onChange","event","value","action","delayOptionsLoad","onRequestRemoveSelectedOption","data","onSubmit","console","log","onSelect","placeholder","options","slice","Component","displayName"],"mappings":"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","sourcesContent":["/* eslint-disable no-console, react/prop-types */\nimport React from 'react';\nimport Combobox from '~/components/combobox';\nimport Icon from '~/components/icon';\nimport comboboxFilterAndLimit from '~/components/combobox/filter';\nimport IconSettings from '~/components/icon-settings';\n\nconst accounts = [\n\t{\n\t\tid: '1',\n\t\tlabel: 'Acme',\n\t\tsubTitle: 'Account • San Francisco',\n\t\ttype: 'account',\n\t},\n\t{\n\t\tid: '2',\n\t\tlabel: 'Salesforce.com, Inc.',\n\t\tsubTitle: 'Account • San Francisco',\n\t\ttype: 'account',\n\t},\n\t{\n\t\tid: '3',\n\t\tlabel: \"Paddy's Pub\",\n\t\tsubTitle: 'Account • Boston, MA',\n\t\ttype: 'account',\n\t},\n\t{\n\t\tid: '4',\n\t\tlabel: 'Tyrell Corp',\n\t\tsubTitle: 'Account • San Francisco, CA',\n\t\ttype: 'account',\n\t},\n\t{\n\t\tid: '5',\n\t\tlabel: 'Paper St. Soap Company',\n\t\tsubTitle: 'Account • Beloit, WI',\n\t\ttype: 'account',\n\t},\n];\n\nconst accountsWithIcon = accounts.map((elem) => ({\n\t...elem,\n\t...{\n\t\ticon: (\n\t\t\t<Icon\n\t\t\t\tassistiveText={{ label: 'Account' }}\n\t\t\t\tcategory=\"standard\"\n\t\t\t\tname={elem.type}\n\t\t\t/>\n\t\t),\n\t},\n}));\n\nclass Example extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tinputValue: '',\n\t\t\tisLoadingMenuItems: false,\n\t\t\tselection: [],\n\t\t};\n\t}\n\n\tdelayOptionsLoad = () => {\n\t\t// A promise should be used here for asynchronous callbacks\n\t\tsetTimeout(() => {\n\t\t\tthis.setState({ isLoadingMenuItems: false });\n\t\t}, 1000);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t\t<Combobox\n\t\t\t\t\tisOpen\n\t\t\t\t\tid=\"combobox-unique-id\"\n\t\t\t\t\tevents={{\n\t\t\t\t\t\tonChange: (event, { value }) => {\n\t\t\t\t\t\t\tthis.props.action('onChange')(event, value);\n\t\t\t\t\t\t\tthis.setState({ inputValue: value, isLoadingMenuItems: true });\n\t\t\t\t\t\t\tthis.delayOptionsLoad();\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonRequestRemoveSelectedOption: (event, data) => {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tinputValue: '',\n\t\t\t\t\t\t\t\tselection: data.selection,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonSubmit: (event, { value }) => {\n\t\t\t\t\t\t\tconsole.log('onChange', event, value);\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tinputValue: '',\n\t\t\t\t\t\t\t\tselection: [\n\t\t\t\t\t\t\t\t\t...this.state.selection,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlabel: value,\n\t\t\t\t\t\t\t\t\t\ticon: (\n\t\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\t\tassistiveText=\"Account\"\n\t\t\t\t\t\t\t\t\t\t\t\tcategory=\"standard\"\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"account\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonSelect: (event, data) => {\n\t\t\t\t\t\t\tconsole.log('onSelect', event, data);\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tinputValue: '',\n\t\t\t\t\t\t\t\tselection: data.selection,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\tlabels={{\n\t\t\t\t\t\tlabel: 'Search',\n\t\t\t\t\t\tplaceholder: 'Search Salesforce',\n\t\t\t\t\t}}\n\t\t\t\t\tmultiple\n\t\t\t\t\toptions={\n\t\t\t\t\t\tthis.state.isLoadingMenuItems\n\t\t\t\t\t\t\t? comboboxFilterAndLimit({\n\t\t\t\t\t\t\t\t\tinputValue: this.state.inputValue,\n\t\t\t\t\t\t\t\t\toptions: accountsWithIcon.slice(0, 3),\n\t\t\t\t\t\t\t\t\tselection: this.state.selection,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t: comboboxFilterAndLimit({\n\t\t\t\t\t\t\t\t\tinputValue: this.state.inputValue,\n\t\t\t\t\t\t\t\t\toptions: accountsWithIcon,\n\t\t\t\t\t\t\t\t\tselection: this.state.selection,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tselection={this.state.selection}\n\t\t\t\t\tvalue={this.state.inputValue}\n\t\t\t\t\tvariant=\"inline-listbox\"\n\t\t\t\t\thasMenuSpinner\n\t\t\t\t/>\n\t\t\t</IconSettings>\n\t\t);\n\t}\n}\n\nExample.displayName = 'ComboboxExample';\nexport default Example; // export is replaced with `ReactDOM.render(<Example />, mountNode);` at runtime\n"],"file":"inline-multiple-open-loading.js"}