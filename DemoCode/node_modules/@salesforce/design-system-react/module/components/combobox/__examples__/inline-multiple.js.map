{"version":3,"sources":["../../../../.tmp-es/components/combobox/__examples__/inline-multiple.jsx"],"names":["React","Combobox","Icon","comboboxFilterAndLimit","IconSettings","accounts","id","label","subTitle","type","accountsWithIcon","map","elem","icon","Example","props","state","inputValue","selection","onChange","event","value","action","setState","onRequestRemoveSelectedOption","data","onSubmit","console","log","onSelect","Object","keys","key","placeholder","options","Component","displayName"],"mappings":"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","sourcesContent":["/* eslint-disable no-console, react/prop-types */\nimport React from 'react';\nimport Combobox from '~/components/combobox';\nimport Icon from '~/components/icon';\nimport comboboxFilterAndLimit from '~/components/combobox/filter';\nimport IconSettings from '~/components/icon-settings';\n\nconst accounts = [\n\t{\n\t\tid: '1',\n\t\tlabel: 'Acme',\n\t\tsubTitle: 'Account • San Francisco',\n\t\ttype: 'account',\n\t},\n\t{\n\t\tid: '2',\n\t\tlabel: 'Salesforce.com, Inc.',\n\t\tsubTitle: 'Account • San Francisco',\n\t\ttype: 'account',\n\t},\n\t{\n\t\tid: '3',\n\t\tlabel: \"Paddy's Pub\",\n\t\tsubTitle: 'Account • Boston, MA',\n\t\ttype: 'account',\n\t},\n\t{\n\t\tid: '4',\n\t\tlabel: 'Tyrell Corp',\n\t\tsubTitle: 'Account • San Francisco, CA',\n\t\ttype: 'account',\n\t},\n\t{\n\t\tid: '5',\n\t\tlabel: 'Paper St. Soap Company',\n\t\tsubTitle: 'Account • Beloit, WI',\n\t\ttype: 'account',\n\t},\n\t{\n\t\tid: '6',\n\t\tlabel: 'Nakatomi Investments',\n\t\tsubTitle: 'Account • Chicago, IL',\n\t\ttype: 'account',\n\t},\n\t{ id: '7', label: 'Acme Landscaping', type: 'account' },\n\t{\n\t\tid: '8',\n\t\tlabel: 'Acme Construction',\n\t\tsubTitle: 'Account • Grand Marais, MN',\n\t\ttype: 'account',\n\t},\n];\n\nconst accountsWithIcon = accounts.map((elem) => ({\n\t...elem,\n\t...{\n\t\ticon: (\n\t\t\t<Icon\n\t\t\t\tassistiveText={{ label: 'Account' }}\n\t\t\t\tcategory=\"standard\"\n\t\t\t\tname={elem.type}\n\t\t\t/>\n\t\t),\n\t},\n}));\n\nclass Example extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tinputValue: '',\n\t\t\tselection: [accountsWithIcon[0], accountsWithIcon[1]],\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t\t<Combobox\n\t\t\t\t\tid=\"combobox-inline-multiple\"\n\t\t\t\t\tevents={{\n\t\t\t\t\t\tonChange: (event, { value }) => {\n\t\t\t\t\t\t\tthis.props.action('onChange')(event, value);\n\t\t\t\t\t\t\tthis.setState({ inputValue: value });\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonRequestRemoveSelectedOption: (event, data) => {\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tinputValue: '',\n\t\t\t\t\t\t\t\tselection: data.selection,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonSubmit: (event, { value }) => {\n\t\t\t\t\t\t\tif (this.props.action) {\n\t\t\t\t\t\t\t\tthis.props.action('onChange')(event, value);\n\t\t\t\t\t\t\t} else if (console) {\n\t\t\t\t\t\t\t\tconsole.log('onChange', event, value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tinputValue: '',\n\t\t\t\t\t\t\t\tselection: [\n\t\t\t\t\t\t\t\t\t...this.state.selection,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tlabel: value,\n\t\t\t\t\t\t\t\t\t\ticon: (\n\t\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\t\tassistiveText={{ label: 'Account' }}\n\t\t\t\t\t\t\t\t\t\t\t\tcategory=\"standard\"\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"account\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonSelect: (event, data) => {\n\t\t\t\t\t\t\tif (this.props.action) {\n\t\t\t\t\t\t\t\tthis.props.action('onSelect')(\n\t\t\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\t\t\t...Object.keys(data).map((key) => data[key])\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else if (console) {\n\t\t\t\t\t\t\t\tconsole.log('onSelect', event, data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tinputValue: '',\n\t\t\t\t\t\t\t\tselection: data.selection,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t\tlabels={{\n\t\t\t\t\t\tlabel: 'Search',\n\t\t\t\t\t\tplaceholder: 'Search Salesforce',\n\t\t\t\t\t}}\n\t\t\t\t\tmultiple\n\t\t\t\t\toptions={comboboxFilterAndLimit({\n\t\t\t\t\t\tinputValue: this.state.inputValue,\n\t\t\t\t\t\toptions: accountsWithIcon,\n\t\t\t\t\t\tselection: this.state.selection,\n\t\t\t\t\t})}\n\t\t\t\t\tselection={this.state.selection}\n\t\t\t\t\tvalue={this.state.inputValue}\n\t\t\t\t\tvariant=\"inline-listbox\"\n\t\t\t\t/>\n\t\t\t</IconSettings>\n\t\t);\n\t}\n}\n\nExample.displayName = 'ComboboxExample';\nexport default Example; // export is replaced with `ReactDOM.render(<Example />, mountNode);` at runtime\n"],"file":"inline-multiple.js"}