{"version":3,"sources":["../../../../.tmp-es/components/tooltip/__tests__/tooltip.browser-test.jsx"],"names":["React","ReactDOM","expect","TestUtils","SLDSTooltip","SLDSButton","Simulate","findRenderedDOMComponentWithTag","describe","body","defaultTrigger","defaultTextContent","defaultProps","content","width","hasStaticAlignment","id","afterEach","Array","prototype","forEach","call","document","querySelectorAll","component","removeChild","e","createBody","target","createElement","textContent","style","height","appendChild","renderTooltip","inst","render","createTooltip","props","kids","generateTooltip","getTip","dom","querySelector","rootNode","beforeEach","align","it","to","equal","tip","trigger","done","mouseEnter","setTimeout","tooltipOffset","tipBounds","getBoundingClientRect","triggerBounds","top","be","within","className","include","mouseLeave","null","isOpen","contentRendered","tooltipContentRendered","not"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-render-return-value */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { expect } from 'chai';\nimport TestUtils from 'react-dom/test-utils';\n\nimport SLDSTooltip from '../../tooltip';\nimport SLDSButton from '../../button';\n\nconst { Simulate, findRenderedDOMComponentWithTag } = TestUtils;\n\ndescribe('SLDSTooltip: ', function() {\n\tlet body;\n\n\tconst defaultTrigger = <SLDSButton label=\"Hover me for tooltip\" />;\n\tconst defaultTextContent = 'This is more info. blah blah.';\n\tconst defaultProps = {\n\t\tcontent: (\n\t\t\t<span className=\"tooltip-content\" style={{ width: 30 }}>\n\t\t\t\t{defaultTextContent}\n\t\t\t</span>\n\t\t),\n\t\thasStaticAlignment: true,\n\t\tid: 'myTooltip123',\n\t};\n\n\tafterEach(() => {\n\t\ttry {\n\t\t\tArray.prototype.forEach.call(\n\t\t\t\tdocument.body.querySelectorAll('.drop'),\n\t\t\t\t(component) => document.body.removeChild(component)\n\t\t\t);\n\t\t\tif (body) {\n\t\t\t\tdocument.body.removeChild(body);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t/* empty */\n\t\t}\n\t});\n\n\tconst createBody = () => {\n\t\tconst target = document.createElement('h1');\n\t\ttarget.textContent = 'Tooltip Tip Target';\n\t\tbody = document.createElement('div');\n\t\tbody.style.height = '300px';\n\t\tbody.style.width = '300px';\n\t\tbody.appendChild(target);\n\t\tdocument.body.appendChild(body);\n\t};\n\n\tconst renderTooltip = (inst) => ReactDOM.render(inst, body); // deepscan-disable-line REACT_ASYNC_RENDER_RETURN_VALUE\n\n\tconst createTooltip = (props, kids) =>\n\t\tReact.createElement(SLDSTooltip, props, kids);\n\n\tconst generateTooltip = (props, kids) =>\n\t\trenderTooltip(createTooltip(props, kids));\n\n\tconst getTip = (dom) => dom.querySelector('.slds-popover_tooltip');\n\n\tdescribe('component basic props render', () => {\n\t\tlet rootNode;\n\n\t\tbeforeEach(() => {\n\t\t\tcreateBody();\n\t\t\trootNode = generateTooltip(\n\t\t\t\t{\n\t\t\t\t\t...defaultProps,\n\t\t\t\t\talign: 'top',\n\t\t\t\t},\n\t\t\t\tdefaultTrigger\n\t\t\t);\n\t\t});\n\n\t\tit('is not open', () => {\n\t\t\texpect(getTip(document.body)).to.equal(null);\n\t\t});\n\n\t\tdescribe('expanded', () => {\n\t\t\tlet tip;\n\t\t\tlet trigger;\n\n\t\t\tbeforeEach((done) => {\n\t\t\t\ttrigger = findRenderedDOMComponentWithTag(rootNode, 'button');\n\t\t\t\tSimulate.mouseEnter(trigger, {});\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\ttip = getTip(document.body);\n\t\t\t\t\tdone();\n\t\t\t\t}, 0);\n\t\t\t});\n\n\t\t\tit('places bottom aligned tooltip at the trigger if no target', (done) => {\n\t\t\t\t// \"Magic Number\" in pixels, based on size of trigger, CSS, and DropJS offset\n\t\t\t\tconst tooltipOffset = 46;\n\t\t\t\tconst tipBounds = tip.getBoundingClientRect();\n\t\t\t\tconst triggerBounds = trigger.getBoundingClientRect();\n\t\t\t\texpect(tipBounds.top).to.be.within(\n\t\t\t\t\ttriggerBounds.top - tooltipOffset,\n\t\t\t\t\ttriggerBounds.top\n\t\t\t\t);\n\t\t\t\tdone();\n\t\t\t});\n\n\t\t\tit('adds nubbin', () => {\n\t\t\t\texpect(tip.className).to.include('slds-nubbin_bottom');\n\t\t\t});\n\n\t\t\tit('closes', (done) => {\n\t\t\t\tSimulate.mouseLeave(trigger, {});\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\texpect(getTip(document.body)).to.be.null;\n\t\t\t\t\tdone();\n\t\t\t\t}, 60);\n\t\t\t});\n\t\t});\n\t});\n\n\tdescribe('Custom props work as expected', () => {\n\t\tit('isOpen is false', (done) => {\n\t\t\tconst rootNode = generateTooltip(\n\t\t\t\t{\n\t\t\t\t\t...defaultProps,\n\t\t\t\t\tisOpen: false,\n\t\t\t\t},\n\t\t\t\tdefaultTrigger\n\t\t\t);\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst trigger = findRenderedDOMComponentWithTag(rootNode, 'button');\n\t\t\t\tSimulate.mouseEnter(trigger, {});\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\texpect(getTip(document.body)).to.be.null;\n\t\t\t\t\tdone();\n\t\t\t\t}, 0);\n\t\t\t}, 0);\n\t\t});\n\n\t\tit('isOpen is true', (done) => {\n\t\t\tlet contentRendered;\n\n\t\t\tconst tooltipContentRendered = (component) => {\n\t\t\t\tthis.tip = getTip(document.body);\n\t\t\t\tif (!contentRendered) {\n\t\t\t\t\texpect(component).to.not.be.null;\n\t\t\t\t\tcontentRendered = true;\n\t\t\t\t\tdone();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tgenerateTooltip(\n\t\t\t\t{\n\t\t\t\t\t...defaultProps,\n\t\t\t\t\t// overwrite default content\n\t\t\t\t\tcontent: (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tref={tooltipContentRendered}\n\t\t\t\t\t\t\tclassName=\"tooltip-content\"\n\t\t\t\t\t\t\tstyle={{ width: 30 }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{defaultTextContent}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t),\n\t\t\t\t\tisOpen: true,\n\t\t\t\t},\n\t\t\t\tdefaultTrigger\n\t\t\t);\n\t\t});\n\t});\n\n\t/*\n\t// Commented out until fully understood.\n\tdescribe('using target', () => {\n\t\tlet rootNode, trigger;\n\n\t\tbeforeEach(() => {\n\t\t\tconst content = (<span style={{width: 30}}>This is more info. blah blah.</span>);\n\t\t\tcreateBody();\n\t\t\trootNode = generateTooltip({\n\t\t\t\talign: 'bottom',\n\t\t\t\tcontent: content,\n\t\t\t\ttarget: body.firstChild\n\t\t\t}, React.createElement(SLDSButton, {}), ['Hover me for tooltip']);\n\t\t\ttrigger = document.body.querySelector('[role=tooltip]').firstChild;\n\t\t})\n\n\t\tdescribe('expanded', () => {\n\t\t\tlet tip;\n\n\t\t\tbeforeEach((done) => {\n\t\t\t\texpect(getTip(document.body)).to.equal(null);\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tSimulate.mouseEnter(trigger, {})\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\ttip = getTip(document.body);\n\t\t\t\t\t\tdone();\n\t\t\t\t\t}, 200);\n\t\t\t\t}, 200);\n\t\t\t});\n\n\t\t\tit('sets the tooltip close to the target, not the trigger', () => {\n\t\t\t\t// \"Magic Number\" in pixels, based on size of trigger and CSS\n\t\t\t\tconst tooltipOffset = 40;\n\t\t\t\tconst tipBounds = tip.getBoundingClientRect();\n\t\t\t\tconst targetBounds = body.firstChild.getBoundingClientRect();\n\t\t\t\tconsole.log(tipBounds);\n\t\t\t\tconsole.log(targetBounds);\n\t\t\t\texpect(tipBounds.bottom).to.be.within(targetBounds.bottom, targetBounds.bottom + tooltipOffset);\n\t\t\t})\n\t\t})\n\t})\n\t*/\n});\n"],"file":"tooltip.browser-test.js"}