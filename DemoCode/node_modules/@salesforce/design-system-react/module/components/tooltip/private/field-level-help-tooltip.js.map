{"version":3,"sources":["../../../../.tmp-es/components/tooltip/private/field-level-help-tooltip.jsx"],"names":["React","PropTypes","Tooltip","objectHelpers","propTypes","assistiveText","shape","triggerLearnMoreIcon","string","fieldLevelHelpTooltip","node","isRequired","defaultProps","triggerClassName","triggerStyle","position","variant","FieldLevelHelpTooltip","props","removeUndefined","displayName"],"mappings":";;;;AAAA;;;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AAEA,IAAMC,SAAS,GAAG;AACjB;;;AAGAC,EAAAA,aAAa,EAAEJ,SAAS,CAACK,KAAV,CAAgB;AAC9BC,IAAAA,oBAAoB,EAAEN,SAAS,CAACO;AADF,GAAhB,CAJE;;AAOjB;;;AAGAC,EAAAA,qBAAqB,EAAER,SAAS,CAACS,IAAV,CAAeC;AAVrB,CAAlB;AAaA,IAAMC,YAAY,GAAG;AACpBC,EAAAA,gBAAgB,EAAE,yBADE;AAEpB;AACA;AACAC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAJM;AAKpBC,EAAAA,OAAO,EAAE;AALW,CAArB;;AAQA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,MAAGR,qBAAH,QAAGA,qBAAH;AAAA,gCAA0BJ,aAA1B;AAAA,MAA0BA,aAA1B,mCAA0C,EAA1C;AAAA,SAC7BI,qBAAqB;AAAA;AACpB,sBAAC,OAAD,oBAGKG,YAHL,EAKKH,qBAAqB,CAACS,KAL3B;AAME;AACA;AACA;AACA;AACA;AACAb,IAAAA,aAAa,oBACTI,qBAAqB,CAACS,KAAtB,CAA4Bb,aADnB,EAETF,aAAa,CAACgB,eAAd,CAA8Bd,aAA9B,CAFS;AAXf,KADoB,GAkBjB,IAnByB;AAAA,CAA9B;;AAqBAY,qBAAqB,CAACb,SAAtB,GAAkCA,SAAlC;AACAa,qBAAqB,CAACG,WAAtB,GAAoC,uBAApC;AAEA,eAAeH,qBAAf","sourcesContent":["/*\n * Field Level Help Tooltip for input labels\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Tooltip from '../index';\nimport objectHelpers from '../../../utilities/object';\n\nconst propTypes = {\n\t/*\n\t * Assistive Text object from parent component such as Input, Combobox, etc.\n\t */\n\tassistiveText: PropTypes.shape({\n\t\ttriggerLearnMoreIcon: PropTypes.string,\n\t}),\n\t/*\n\t * Tooltip from external prop\n\t */\n\tfieldLevelHelpTooltip: PropTypes.node.isRequired,\n};\n\nconst defaultProps = {\n\ttriggerClassName: 'slds-form-element__icon',\n\t// This allows `position: absolute` Tooltips to align properly.\n\t// If not present, tooltip will always be below the info icon // instead of above it.\n\ttriggerStyle: { position: 'static' },\n\tvariant: 'learnMore',\n};\n\nconst FieldLevelHelpTooltip = ({ fieldLevelHelpTooltip, assistiveText = {} }) =>\n\tfieldLevelHelpTooltip ? (\n\t\t<Tooltip\n\t\t\t{...{\n\t\t\t\t// internal default props\n\t\t\t\t...defaultProps,\n\t\t\t\t// props from external developer\n\t\t\t\t...fieldLevelHelpTooltip.props,\n\t\t\t\t// allow backwards compatibility with Input's\n\t\t\t\t// assistiveText.fieldLevelHelpButton\n\t\t\t\t// `Input` used to have an `assistiveText.fieldLevelHelpButton`\n\t\t\t\t// prop and that prop needs to override the default Tooltip\n\t\t\t\t// \"Help\" string.\n\t\t\t\tassistiveText: {\n\t\t\t\t\t...fieldLevelHelpTooltip.props.assistiveText,\n\t\t\t\t\t...objectHelpers.removeUndefined(assistiveText),\n\t\t\t\t},\n\t\t\t}}\n\t\t/>\n\t) : null;\n\nFieldLevelHelpTooltip.propTypes = propTypes;\nFieldLevelHelpTooltip.displayName = 'FieldLevelHelpTooltip';\n\nexport default FieldLevelHelpTooltip;\n"],"file":"field-level-help-tooltip.js"}