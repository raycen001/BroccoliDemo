{"version":3,"sources":["../../../.tmp-es/components/spinner/index.jsx"],"names":["React","PropTypes","classNames","checkProps","SPINNER","componentDoc","propTypes","assistiveText","shape","label","string","containerClassName","containerStyle","object","hasContainer","bool","id","isDelayed","isInput","isInline","size","oneOf","variant","defaultProps","Spinner","props","spinnerClassName","spinner","displayName"],"mappings":";;;;AAAA;;AACA;AAEA;AAEA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,UAAP,MAAuB,eAAvB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,2BAAxB;AAEA,OAAOC,YAAP,MAAyB,kBAAzB,C,CAEA;;AACA,IAAMC,SAAS,GAAG;AACjB;;;;;AAKAC,EAAAA,aAAa,EAAEN,SAAS,CAACO,KAAV,CAAgB;AAC9BC,IAAAA,KAAK,EAAER,SAAS,CAACS;AADa,GAAhB,CANE;;AASjB;;;AAGAC,EAAAA,kBAAkB,EAAEV,SAAS,CAACS,MAZb;;AAajB;;;AAGAE,EAAAA,cAAc,EAAEX,SAAS,CAACY,MAhBT;;AAiBjB;;;AAGAC,EAAAA,YAAY,EAAEb,SAAS,CAACc,IApBP;;AAqBjB;;;AAGAC,EAAAA,EAAE,EAAEf,SAAS,CAACS,MAxBG;;AAyBjB;;;AAGAO,EAAAA,SAAS,EAAEhB,SAAS,CAACc,IA5BJ;;AA6BjB;;;AAGAG,EAAAA,OAAO,EAAEjB,SAAS,CAACc,IAhCF;;AAiCjB;;;AAGAI,EAAAA,QAAQ,EAAElB,SAAS,CAACc,IApCH;;AAqCjB;;;AAGAK,EAAAA,IAAI,EAAEnB,SAAS,CAACoB,KAAV,CAAgB,CAAC,UAAD,EAAa,SAAb,EAAwB,OAAxB,EAAiC,QAAjC,EAA2C,OAA3C,CAAhB,CAxCW;;AAyCjB;;;AAGAC,EAAAA,OAAO,EAAErB,SAAS,CAACoB,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,SAAlB,CAAhB;AA5CQ,CAAlB;AA+CA,IAAME,YAAY,GAAG;AACpBhB,EAAAA,aAAa,EAAE;AAAEE,IAAAA,KAAK,EAAE;AAAT,GADK;AAEpBQ,EAAAA,SAAS,EAAE,KAFS;AAGpBE,EAAAA,QAAQ,EAAE,KAHU;AAIpBD,EAAAA,OAAO,EAAE,KAJW;AAKpBJ,EAAAA,YAAY,EAAE,IALM;AAMpBM,EAAAA,IAAI,EAAE,QANc;AAOpBE,EAAAA,OAAO,EAAE;AAPW,CAArB;AAUA;;;;AAGA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAC1BtB,EAAAA,UAAU,CAACC,OAAD,EAAUqB,KAAV,EAAiBpB,YAAjB,CAAV;AAD0B,MAGzBM,kBAHyB,GAYtBc,KAZsB,CAGzBd,kBAHyB;AAAA,MAIzBC,cAJyB,GAYtBa,KAZsB,CAIzBb,cAJyB;AAAA,MAKzBI,EALyB,GAYtBS,KAZsB,CAKzBT,EALyB;AAAA,MAMzBC,SANyB,GAYtBQ,KAZsB,CAMzBR,SANyB;AAAA,MAOzBE,QAPyB,GAYtBM,KAZsB,CAOzBN,QAPyB;AAAA,MAQzBD,OARyB,GAYtBO,KAZsB,CAQzBP,OARyB;AAAA,MASzBJ,YATyB,GAYtBW,KAZsB,CASzBX,YATyB;AAAA,MAUzBM,IAVyB,GAYtBK,KAZsB,CAUzBL,IAVyB;AAAA,MAWzBE,OAXyB,GAYtBG,KAZsB,CAWzBH,OAXyB;AAa1B,MAAMf,aAAa,GAClB,OAAOkB,KAAK,CAAClB,aAAb,KAA+B,QAA/B,GACGkB,KAAK,CAAClB,aADT,GAEG,kBACGgB,YAAY,CAAChB,aADhB,EAEGkB,KAAK,CAAClB,aAFT,EAGCE,KANL;AAQA,MAAMiB,gBAAgB,GAAGxB,UAAU,CAAC,cAAD;AAClC,2BAAuBiB,QADW;AAElC,2BAAuBD,OAFW;AAGlC,0BAAsBI,OAAO,KAAK,OAHA;AAIlC,4BAAwBA,OAAO,KAAK,SAJF;AAKlC,4BAAwBL;AALU,4BAMjBG,IANiB,GAMRA,IANQ,EAAnC;AASA,MAAMO,OAAO;AAAA;AACZ;AAAK,mBAAY,OAAjB;AAAyB,IAAA,SAAS,EAAED,gBAApC;AAAsD,IAAA,EAAE,EAAEV,EAA1D;AAA8D,IAAA,IAAI,EAAC;AAAnE,KACET,aAAa;AAAA;AACb;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAuCA,aAAvC,CAFF;AAAA;AAIC;AAAK,IAAA,SAAS,EAAC;AAAf,IAJD;AAAA;AAKC;AAAK,IAAA,SAAS,EAAC;AAAf,IALD,CADD;AAUA,SAAOO,YAAY;AAAA;AAClB;AACC,IAAA,SAAS,EAAEZ,UAAU,CAACS,kBAAD,EAAqB,wBAArB,CADtB;AAEC,IAAA,KAAK,EAAEC;AAFR,KAIEe,OAJF,CADkB,GAQlBA,OARD;AAUA,CAlDD;;AAoDAH,OAAO,CAACI,WAAR,GAAsBxB,OAAtB;AACAoB,OAAO,CAAClB,SAAR,GAAoBA,SAApB;AACAkB,OAAO,CAACD,YAAR,GAAuBA,YAAvB;AAEA,eAAeC,OAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Spinner Component --- SLDS for React\n\n// Implements the [Spinner design pattern - 2.1.0-beta.3 (204)](https://latest-204.lightningdesignsystem.com/components/spinners) in React.\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\n\nimport checkProps from './check-props';\n\n// ## Constants\nimport { SPINNER } from '../../utilities/constants';\n\nimport componentDoc from './component.json';\n\n// ### Prop Types\nconst propTypes = {\n\t/**\n\t * **Assistive text for accessibility.**\n\t * This object is merged with the default props object on every render.\n\t * * `label`: Assistive text that is read out loud to screen readers.\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tlabel: PropTypes.string,\n\t}),\n\t/**\n\t * Custom css classes applied to Spinner container\n\t */\n\tcontainerClassName: PropTypes.string,\n\t/**\n\t * Custom css properties applied to Spinner container\n\t */\n\tcontainerStyle: PropTypes.object,\n\t/**\n\t * Render the spinner inside of a container.\n\t */\n\thasContainer: PropTypes.bool,\n\t/**\n\t * Unique html id placed on div with role=\"status\".\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * Adds delay of 300ms to the spinner\n\t */\n\tisDelayed: PropTypes.bool,\n\t/**\n\t * Add styling to support a spinner inside an input field.\n\t */\n\tisInput: PropTypes.bool,\n\t/**\n\t * Add styling to support an inline spinner inside of the document flow.\n\t */\n\tisInline: PropTypes.bool,\n\t/**\n\t * Determines the size of the spinner\n\t */\n\tsize: PropTypes.oneOf(['xx-small', 'x-small', 'small', 'medium', 'large']),\n\t/**\n\t * Determines the color of the spinner: `base` is gray, `brand` is blue, and `inverse` is white.\n\t */\n\tvariant: PropTypes.oneOf(['base', 'brand', 'inverse']),\n};\n\nconst defaultProps = {\n\tassistiveText: { label: 'Loading...' },\n\tisDelayed: false,\n\tisInline: false,\n\tisInput: false,\n\thasContainer: true,\n\tsize: 'medium',\n\tvariant: 'base',\n};\n\n/**\n * Spinners are CSS loading indicators that should be shown when retrieving data or performing slow computations. In some cases, the first time a parent component loads, a stencil is preferred to indicate network activity.\n */\nconst Spinner = (props) => {\n\tcheckProps(SPINNER, props, componentDoc);\n\tconst {\n\t\tcontainerClassName,\n\t\tcontainerStyle,\n\t\tid,\n\t\tisDelayed,\n\t\tisInline,\n\t\tisInput,\n\t\thasContainer,\n\t\tsize,\n\t\tvariant,\n\t} = props;\n\tconst assistiveText =\n\t\ttypeof props.assistiveText === 'string'\n\t\t\t? props.assistiveText\n\t\t\t: {\n\t\t\t\t\t...defaultProps.assistiveText,\n\t\t\t\t\t...props.assistiveText,\n\t\t\t\t}.label;\n\n\tconst spinnerClassName = classNames('slds-spinner', {\n\t\t'slds-spinner_inline': isInline,\n\t\t'slds-input__spinner': isInput,\n\t\t'slds-spinner_brand': variant === 'brand',\n\t\t'slds-spinner_inverse': variant === 'inverse',\n\t\t'slds-spinner_delayed': isDelayed,\n\t\t[`slds-spinner_${size}`]: size,\n\t});\n\n\tconst spinner = (\n\t\t<div aria-hidden=\"false\" className={spinnerClassName} id={id} role=\"status\">\n\t\t\t{assistiveText && (\n\t\t\t\t<span className=\"slds-assistive-text\">{assistiveText}</span>\n\t\t\t)}\n\t\t\t<div className=\"slds-spinner__dot-a\" />\n\t\t\t<div className=\"slds-spinner__dot-b\" />\n\t\t</div>\n\t);\n\n\treturn hasContainer ? (\n\t\t<div\n\t\t\tclassName={classNames(containerClassName, 'slds-spinner_container')}\n\t\t\tstyle={containerStyle}\n\t\t>\n\t\t\t{spinner}\n\t\t</div>\n\t) : (\n\t\tspinner\n\t);\n};\n\nSpinner.displayName = SPINNER;\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\n\nexport default Spinner;\n"],"file":"index.js"}