{"version":3,"sources":["../../../../.tmp-es/components/progress-indicator/__examples__/default.jsx"],"names":["React","IconSettings","ProgressIndicator","Example","props","event","data","steps","state","completedSteps","slice","step","id","assistiveText","length","replace","setState","disabledSteps","selectedStep","label","padding","background","variant","undefined","handleStepEvent","Component","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport IconSettings from '~/components/icon-settings';\nimport ProgressIndicator from '~/components/progress-indicator'; // `~` is replaced with design-system-react at runtime\n\n/*\n * This example allows you to select the next step and only the next step. Typically, Progress Indicator should be paired with a modal and form errors should be explained outside of this component.\n */\nclass Example extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tconst steps = [\n\t\t\t{\n\t\t\t\tid: 0,\n\t\t\t\tlabel: <i>tooltip label #1</i>,\n\t\t\t\tassistiveText: 'This is custom text in the assistive text key',\n\t\t\t},\n\t\t\t{ id: 1, label: 'tooltip label #2' },\n\t\t\t{ id: 2, label: <strong>tooltip label #3</strong> },\n\t\t\t{ id: 3, label: 'tooltip label #4' },\n\t\t\t{ id: 4, label: 'tooltip label #5' },\n\t\t];\n\n\t\tthis.state = {\n\t\t\tsteps,\n\t\t\tcompletedSteps: [],\n\t\t\tdisabledSteps: steps.slice(2, steps.length),\n\t\t\tselectedStep: steps[0],\n\t\t};\n\t}\n\n\thandleStepEvent = (event, data) => {\n\t\tconst { steps } = this.state;\n\t\tconst completedSteps = steps.slice(0, data.step.id);\n\n\t\tif (steps[0].assistiveText) {\n\t\t\tif (completedSteps.length > 0) {\n\t\t\t\tsteps[0].assistiveText = `${steps[0].assistiveText} - Completed`;\n\t\t\t} else {\n\t\t\t\tsteps[0].assistiveText = steps[0].assistiveText.replace(\n\t\t\t\t\t' - Completed',\n\t\t\t\t\t''\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({\n\t\t\tcompletedSteps,\n\t\t\tdisabledSteps:\n\t\t\t\tdata.step.id < steps.length\n\t\t\t\t\t? steps.slice(data.step.id + 2, steps.length)\n\t\t\t\t\t: [],\n\t\t\tselectedStep: data.step,\n\t\t\tsteps,\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tpadding: '4rem 1rem 0px',\n\t\t\t\t\t\tbackground:\n\t\t\t\t\t\t\tthis.props.variant === 'modal' ? 'rgb(244, 246, 249)' : undefined,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<ProgressIndicator\n\t\t\t\t\t\tid=\"example-progress-indicator\"\n\t\t\t\t\t\tcompletedSteps={this.state.completedSteps}\n\t\t\t\t\t\tdisabledSteps={this.state.disabledSteps}\n\t\t\t\t\t\tonStepClick={this.handleStepEvent}\n\t\t\t\t\t\tsteps={this.state.steps}\n\t\t\t\t\t\tselectedStep={this.state.selectedStep}\n\t\t\t\t\t\t// tooltipIsOpenSteps={stepsBasic.slice(0, 2)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</IconSettings>\n\t\t);\n\t}\n}\n\nExample.displayName = 'ProgressIndicatorDefault';\n\nexport default Example; // export is replaced with `ReactDOM.render(<Example />, mountNode);` at runtime\n"],"file":"default.js"}