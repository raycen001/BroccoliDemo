{"version":3,"sources":["../../../../.tmp-es/components/progress-indicator/private/progress-bar.jsx"],"names":["React","PropTypes","classNames","propTypes","assistiveText","shape","percentage","string","value","isRequired","ProgressBar","props","orientation","height","width","Component","displayName"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,IAAMC,SAAS,GAAG;AACjB;;;AAGAC,EAAAA,aAAa,EAAEH,SAAS,CAACI,KAAV,CAAgB;AAC9BC,IAAAA,UAAU,EAAEL,SAAS,CAACM;AADQ,GAAhB,CAJE;;AAOjB;;;AAGAC,EAAAA,KAAK,EAAEP,SAAS,CAACM,MAAV,CAAiBE;AAVP,CAAlB;AAYA;;;;IAGMC,W;;;;;;;;;;;;;6BACI;AACR;AAAA;AACC;AACC,UAAA,SAAS,EAAER,UAAU,CAAC,6CAAD,EAAgD;AACpE,0CAA8B,KAAKS,KAAL,CAAWC,WAAX,KAA2B;AADW,WAAhD,CADtB;AAIC,2BAAc,GAJf;AAKC,2BAAc,KALf;AAMC,2BAAe,KAAKD,KAAL,CAAWH,KAN3B;AAOC,UAAA,IAAI,EAAC;AAPN;AAAA;AASC;AACC,UAAA,SAAS,EAAC,0BADX;AAEC,UAAA,KAAK,EACJ,KAAKG,KAAL,CAAWC,WAAX,KAA2B,UAA3B,GACG;AAAEC,YAAAA,MAAM,YAAK,KAAKF,KAAL,CAAWH,KAAhB;AAAR,WADH,GAEG;AAAEM,YAAAA,KAAK,YAAK,KAAKH,KAAL,CAAWH,KAAhB;AAAP;AALL;AAAA;AAQC;AAAM,UAAA,SAAS,EAAC;AAAhB,WACE,KAAKG,KAAL,CAAWP,aAAX,CAAyBE,UAAzB,wBACa,KAAKK,KAAL,CAAWH,KADxB,MADF,CARD,CATD;AADD;AAyBA;;;;EA3BwBR,KAAK,CAACe,S;;AA8BhCL,WAAW,CAACM,WAAZ,GAA0B,aAA1B;AACAN,WAAW,CAACP,SAAZ,GAAwBA,SAAxB;AAEA,eAAeO,WAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst propTypes = {\n\t/**\n\t * Assistive text for percentage\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tpercentage: PropTypes.string,\n\t}),\n\t/**\n\t * Percentage of progress completion, with range of [0, 100]\n\t */\n\tvalue: PropTypes.string.isRequired,\n};\n/**\n * ProgressBar renders the blue/gray progress bar and dynamically updates its completion percentage\n */\nclass ProgressBar extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames('slds-progress-bar slds-progress-bar_x-small', {\n\t\t\t\t\t'slds-progress-bar_vertical': this.props.orientation === 'vertical',\n\t\t\t\t})}\n\t\t\t\taria-valuemin=\"0\"\n\t\t\t\taria-valuemax=\"100\"\n\t\t\t\taria-valuenow={this.props.value}\n\t\t\t\trole=\"progressbar\"\n\t\t\t>\n\t\t\t\t<span\n\t\t\t\t\tclassName=\"slds-progress-bar__value\"\n\t\t\t\t\tstyle={\n\t\t\t\t\t\tthis.props.orientation === 'vertical'\n\t\t\t\t\t\t\t? { height: `${this.props.value}%` }\n\t\t\t\t\t\t\t: { width: `${this.props.value}%` }\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<span className=\"slds-assistive-text\">\n\t\t\t\t\t\t{this.props.assistiveText.percentage ||\n\t\t\t\t\t\t\t`Progress: ${this.props.value}%`}\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nProgressBar.displayName = 'ProgressBar';\nProgressBar.propTypes = propTypes;\n\nexport default ProgressBar;\n"],"file":"progress-bar.js"}