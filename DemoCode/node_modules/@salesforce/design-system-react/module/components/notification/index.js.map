{"version":3,"sources":["../../../.tmp-es/components/notification/index.jsx"],"names":["React","PropTypes","classNames","Button","Icon","checkProps","displayName","propTypes","iconCategory","string","className","content","node","isRequired","dismissible","bool","duration","number","iconName","isOpen","onDismiss","func","texture","theme","oneOf","variant","defaultProps","Notification","props","timeout","clearTimeout","state","returnFocusTo","focus","setTimeout","nextProps","setState","document","activeElement","prevProps","btn","dismissBtnRef","renderIcon","size","icon","dismissBtn","renderClose","renderToastContent","renderAlertContent","classes","styles","width","left","transform","alertStyles","display","getClassName","renderContent","blankContent","Component"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\nimport Button from '../button';\nimport Icon from '../icon';\nimport checkProps from './check-props';\n\nconst displayName = 'Notification';\nconst propTypes = {\n\ticonCategory: PropTypes.string,\n\t/**\n\t * Custom classes applied to Notification element.\n\t */\n\tclassName: PropTypes.string,\n\t/**\n\t * Message for Notification.\n\t */\n\tcontent: PropTypes.node.isRequired,\n\t/**\n\t * If true, close button appears for users to dismiss Notification.\n\t */\n\tdismissible: PropTypes.bool,\n\t/**\n\t * If duration exists, the Notification will disappear after that amount of time.\n\t */\n\tduration: PropTypes.number,\n\t/**\n\t * Name of the icon. Visit <a href='http://www.lightningdesignsystem.com/resources/icons'>Lighning Design System Icons</a> to reference icon names.\n\t */\n\ticonName: PropTypes.string,\n\tisOpen: PropTypes.bool.isRequired,\n\tonDismiss: PropTypes.func,\n\t/**\n\t * Styling for Notification background.\n\t */\n\ttexture: PropTypes.bool,\n\t/**\n\t * Styling for Notification background color. Please reference <a href='http://www.lightningdesignsystem.com/components/utilities/themes/#color'>Lighning Design System Themes > Color</a>.\n\t */\n\ttheme: PropTypes.oneOf(['success', 'warning', 'error', 'offline']),\n\tvariant: PropTypes.oneOf(['alert', 'toast']).isRequired,\n};\n\nconst defaultProps = {\n\ticonCategory: 'utility',\n\tdismissible: true,\n\tisOpen: false,\n\ttexture: false,\n};\n\n/**\n * The Notification component is the Alert and Toast variants of the Lightning Design System Notification component. For prompt notifications, use the <a href='#/modal'>Modal</a> component with <code>prompt={true}</code>.\n * The Notification opens from a state change outside of the component itself (pass this state to the <code>isOpen</code> prop).\n */\nclass Notification extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t\tthis.timeout = null;\n\t}\n\n\tcomponentDidMount() {\n\t\tcheckProps('Notification', this.props);\n\n\t\tif (this.props.duration) {\n\t\t\tthis.timeout = setTimeout(() => {\n\t\t\t\tthis.onDismiss();\n\t\t\t}, this.props.duration);\n\t\t}\n\t}\n\n\t// eslint-disable-next-line camelcase, react/sort-comp\n\tUNSAFE_componentWillReceiveProps(nextProps) {\n\t\tif (nextProps.duration) {\n\t\t\tif (this.timeout) {\n\t\t\t\tclearTimeout(this.timeout);\n\t\t\t}\n\t\t\tif (nextProps.isOpen) {\n\t\t\t\tthis.timeout = setTimeout(() => {\n\t\t\t\t\tthis.onDismiss();\n\t\t\t\t}, this.props.duration);\n\t\t\t}\n\t\t}\n\t\tif (nextProps.isOpen !== this.props.isOpen) {\n\t\t\tthis.setState({ returnFocusTo: document.activeElement });\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.isOpen !== this.props.isOpen) {\n\t\t\tconst btn = this.dismissBtnRef;\n\t\t\tif (btn) btn.focus();\n\t\t}\n\t}\n\n\tonDismiss = () => {\n\t\tif (this.timeout) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\n\t\tif (this.props.onDismiss) this.props.onDismiss();\n\t\tif (this.state.returnFocusTo && this.state.returnFocusTo.focus) {\n\t\t\tthis.state.returnFocusTo.focus();\n\t\t}\n\t};\n\n\tgetClassName() {\n\t\treturn classNames(this.props.className, 'slds-notify', {\n\t\t\t[`slds-notify_${this.props.variant}`]: this.props.variant,\n\t\t\t[`slds-theme_${this.props.theme}`]: this.props.theme,\n\t\t\t'slds-theme_alert-texture': this.props.texture,\n\t\t});\n\t}\n\n\t/*\n\t * The parent container with role='alert' only announces its content if there is a change inside of it.\n\t * Because React renders the entire element to the DOM, we must switch out a blank div for the real content.\n\t * Bummer, I know.\n\t */\n\t// eslint-disable-next-line class-methods-use-this\n\tblankContent() {\n\t\treturn <div />;\n\t}\n\n\trenderAlertContent() {\n\t\treturn (\n\t\t\t<h2 id=\"dialogTitle\">\n\t\t\t\t{this.renderIcon()}\n\t\t\t\t{this.props.content}\n\t\t\t</h2>\n\t\t);\n\t}\n\n\trenderClose() {\n\t\tif (this.props.dismissible) {\n\t\t\tlet size = null;\n\t\t\tif (this.props.variant === 'toast') size = 'large';\n\n\t\t\t// i18n\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tassistiveText={{ icon: 'Dismiss Notification' }}\n\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\ticonName=\"close\"\n\t\t\t\t\ticonSize={size}\n\t\t\t\t\tinverse\n\t\t\t\t\tclassName=\"slds-notify__close\"\n\t\t\t\t\tonClick={this.onDismiss}\n\t\t\t\t\tbuttonRef={(dismissBtn) => {\n\t\t\t\t\t\tthis.dismissBtnRef = dismissBtn;\n\t\t\t\t\t}}\n\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\trenderContent() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<span className=\"slds-assistive-text\">{this.props.theme}</span>\n\t\t\t\t{this.renderClose()}\n\t\t\t\t{this.props.variant === 'toast' ? this.renderToastContent() : null}\n\t\t\t\t{this.props.variant === 'alert' ? this.renderAlertContent() : null}\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderIcon() {\n\t\tif (this.props.iconName) {\n\t\t\tlet classes = '';\n\n\t\t\tif (this.props.variant === 'alert') {\n\t\t\t\tclasses = 'slds-m-right_x-small';\n\t\t\t} else if (this.props.variant === 'toast') {\n\t\t\t\tclasses = 'slds-m-right_small slds-col slds-no-flex';\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<Icon\n\t\t\t\t\tcategory={this.props.iconCategory}\n\t\t\t\t\tclassName={classes}\n\t\t\t\t\tinverse\n\t\t\t\t\tname={this.props.iconName}\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\trenderToastContent() {\n\t\treturn (\n\t\t\t<section className=\"notify__content slds-grid\">\n\t\t\t\t{this.renderIcon()}\n\t\t\t\t<div className=\"slds-col slds-align-middle\">\n\t\t\t\t\t<h2 id=\"dialogTitle\" className=\"slds-text-heading_small\">\n\t\t\t\t\t\t{this.props.content}\n\t\t\t\t\t</h2>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t);\n\t}\n\n\trender() {\n\t\t// TODO: If there are multiple notifications on a page, we must 'hide' the ones that aren't open.\n\t\t// Need to find a better way to do this than using width:0 to override slds-notify-container.\n\t\tlet styles;\n\t\tif (!this.props.isOpen) {\n\t\t\tstyles = { width: '0px' };\n\t\t} else {\n\t\t\tstyles =\n\t\t\t\tthis.props.variant === 'toast'\n\t\t\t\t\t? { width: 'auto', left: '50%', transform: 'translateX(-50%)' }\n\t\t\t\t\t: { width: '100%' };\n\t\t}\n\n\t\tconst alertStyles = !this.props.isOpen ? { display: 'none' } : null;\n\t\treturn (\n\t\t\t<div className=\"slds-notify-container\" style={styles}>\n\t\t\t\t<div\n\t\t\t\t\tclassName={this.getClassName()}\n\t\t\t\t\trole=\"alertdialog\"\n\t\t\t\t\taria-labelledby=\"dialogTitle\"\n\t\t\t\t\tstyle={alertStyles}\n\t\t\t\t>\n\t\t\t\t\t{this.props.isOpen ? this.renderContent() : this.blankContent()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nNotification.displayName = displayName;\nNotification.propTypes = propTypes;\nNotification.defaultProps = defaultProps;\n\nexport default Notification;\n"],"file":"index.js"}