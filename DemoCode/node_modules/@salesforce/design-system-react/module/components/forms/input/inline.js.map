{"version":3,"sources":["../../../../.tmp-es/components/forms/input/inline.jsx"],"names":["React","PropTypes","isFunction","Button","Input","InputIcon","KEYS","checkProps","FORMS_INLINE_EDIT","propTypes","className","oneOfType","array","object","string","name","disabled","bool","id","isRequired","onChange","func","onKeyUp","onEnterEditMode","onLeaveEditMode","type","oneOf","value","defaultProps","assistiveText","InlineEdit","props","option","willSave","clearTimeout","setState","isEditing","undefined","setTimeout","saveEdits","event","target","keyCode","ESCAPE","cancel","ENTER","state","endEditMode","autoFocus","inputNode","focus","select","rest","icon","handleBlur","handleChange","triggerEditMode","handleKeyDown","handleKeyUp","input","Component","displayName"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Inline Edit Component\n\n// Implements an inline edit component based on the [Input design pattern](https://www.lightningdesignsystem.com/components/forms/#input) in React.\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### isFunction\nimport isFunction from 'lodash.isfunction';\n\n// ## Children\nimport Button from '../../button';\nimport Input from '../../input/index';\nimport InputIcon from '../../icon/input-icon';\n\n// ### Event Helpers\nimport KEYS from '../../../utilities/key-code';\n\n// This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\nimport checkProps from './inline-check-props';\n\n// ## Constants\nimport { FORMS_INLINE_EDIT } from '../../../utilities/constants';\n\n// ### Prop Types\nconst propTypes = {\n\t/**\n\t * Class names to be added to the outer container of the input.\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Name of the submitted form parameter.\n\t */\n\tname: PropTypes.string,\n\t/**\n\t * Disables the Inline Edit component and prevents editing the contents.\n\t */\n\tdisabled: PropTypes.bool,\n\t/**\n\t * Every Inline Edit component must have a unique ID in order to support keyboard navigation and ARIA support.\n\t */\n\tid: PropTypes.string.isRequired,\n\t/**\n\t * This event fires when the input changes.\n\t */\n\tonChange: PropTypes.func,\n\t/**\n\t * Function will run when keyup during text edit\n\t */\n\tonKeyUp: PropTypes.func,\n\t/**\n\t * Function will run when we enter edit mode\n\t */\n\tonEnterEditMode: PropTypes.func,\n\t/**\n\t * Function will run when we leave edit mode\n\t */\n\tonLeaveEditMode: PropTypes.func,\n\t/**\n\t * Typically an Inline Edit component will be of the type text, but like the Input element it includes support for all HTML5 types.\n\t */\n\ttype: PropTypes.oneOf([\n\t\t'text',\n\t\t'password',\n\t\t'datetime',\n\t\t'datetime-local',\n\t\t'date',\n\t\t'month',\n\t\t'time',\n\t\t'week',\n\t\t'number',\n\t\t'email',\n\t\t'url',\n\t\t'search',\n\t\t'tel',\n\t\t'color',\n\t]),\n\t/**\n\t * Inline Edit is a controlled component, and will always display this value.\n\t */\n\tvalue: PropTypes.string.isRequired,\n};\n\nconst defaultProps = {\n\tassistiveText: 'Edit text',\n\ttype: 'text',\n};\n\n/**\n * An inline input is rendered as a label by default. When clicked (or tabbed in), it's rendered as an input. When the focus is lost, the current input value is saved and the input is rendered as a label again.\n */\nclass InlineEdit extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisEditing: false,\n\t\t\tvalue: null,\n\t\t};\n\n\t\tcheckProps(FORMS_INLINE_EDIT, props);\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (this.autoFocus) {\n\t\t\tif (this.inputNode) {\n\t\t\t\tthis.inputNode.focus();\n\t\t\t\tthis.inputNode.select();\n\t\t\t}\n\t\t\tthis.autoFocus = false;\n\t\t}\n\t}\n\n\tendEditMode = (option) => {\n\t\tif (this.willSave) {\n\t\t\tclearTimeout(this.willSave);\n\t\t\t// eslint-disable-next-line fp/no-delete\n\t\t\tdelete this.willSave;\n\t\t}\n\n\t\tthis.setState({\n\t\t\tisEditing: false,\n\t\t\tvalue: null,\n\t\t});\n\n\t\tif (this.props.onLeaveEditMode && isFunction(this.props.onLeaveEditMode)) {\n\t\t\tthis.props.onLeaveEditMode(undefined, option);\n\t\t}\n\t};\n\n\thandleBlur = () => {\n\t\tif (!this.willSave) {\n\t\t\tthis.willSave = setTimeout(this.saveEdits, 200);\n\t\t}\n\t\tif (this.props.onLeaveEditMode && isFunction(this.props.onLeaveEditMode)) {\n\t\t\tthis.props.onLeaveEditMode();\n\t\t}\n\t};\n\n\thandleChange = (event) => {\n\t\tthis.setState({\n\t\t\tvalue: event.target.value,\n\t\t});\n\t};\n\n\thandleKeyDown = (event) => {\n\t\tif (event.keyCode) {\n\t\t\tif (event.keyCode === KEYS.ESCAPE) {\n\t\t\t\tthis.saveEdits({ cancel: true });\n\t\t\t} else if (event.keyCode === KEYS.ENTER) {\n\t\t\t\tthis.saveEdits();\n\t\t\t}\n\t\t}\n\t};\n\n\thandleKeyUp = (event) => {\n\t\tif (event.keyCode) {\n\t\t\tif (this.props.onKeyUp && isFunction(this.props.onKeyUp)) {\n\t\t\t\tthis.props.onKeyUp(event, {\n\t\t\t\t\tvalue: this.state.value,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tsaveEdits = (option) => {\n\t\tif (!(option && option.cancel === true)) {\n\t\t\tif (isFunction(this.props.onChange)) {\n\t\t\t\tthis.props.onChange({\n\t\t\t\t\tvalue: this.state.value,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tthis.endEditMode(option);\n\t};\n\n\ttriggerEditMode = () => {\n\t\tif (!this.props.disabled) {\n\t\t\tthis.autoFocus = true;\n\t\t\tthis.setState({\n\t\t\t\tisEditing: true,\n\t\t\t\tvalue: this.props.value,\n\t\t\t});\n\t\t\tif (isFunction(this.props.onEnterEditMode)) {\n\t\t\t\tthis.props.onEnterEditMode();\n\t\t\t}\n\t\t}\n\t};\n\n\t// ### Render\n\trender() {\n\t\tconst {\n\t\t\tassistiveText,\n\t\t\tdisabled,\n\t\t\tvalue,\n\t\t\tname,\n\n\t\t\t// ### Additional properties\n\t\t\t// Using [object destructuring](https://facebook.github.io/react/docs/transferring-props.html#transferring-with-...-in-jsx) to pass on any properties which are not explicitly defined.\n\t\t\t...rest\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<Input\n\t\t\t\t{...rest}\n\t\t\t\ticonRight={\n\t\t\t\t\tthis.state.isEditing ? (\n\t\t\t\t\t\t<InputIcon\n\t\t\t\t\t\t\tcategory=\"utility\"\n\t\t\t\t\t\t\tname=\"close\"\n\t\t\t\t\t\t\tposition=\"right\"\n\t\t\t\t\t\t\tonClick={this.endEditMode}\n\t\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : null\n\t\t\t\t}\n\t\t\t\tdisabled={disabled}\n\t\t\t\tinlineEditTrigger={\n\t\t\t\t\t<Button\n\t\t\t\t\t\tassistiveText={{ icon: assistiveText }}\n\t\t\t\t\t\tclassName=\"slds-m-left_x-small\"\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\t\ticonName=\"edit\"\n\t\t\t\t\t\ticonPosition=\"right\"\n\t\t\t\t\t\ticonSize=\"small\"\n\t\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tonBlur={this.handleBlur}\n\t\t\t\tonChange={this.handleChange}\n\t\t\t\tonClick={!this.state.isEditing ? this.triggerEditMode : null}\n\t\t\t\tonKeyDown={this.handleKeyDown}\n\t\t\t\tonKeyUp={this.handleKeyUp}\n\t\t\t\tisStatic={!this.state.isEditing}\n\t\t\t\tname={name}\n\t\t\t\tvalue={this.state.isEditing ? this.state.value : value}\n\t\t\t\tinputRef={(input) => {\n\t\t\t\t\tthis.inputNode = input;\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nInlineEdit.displayName = FORMS_INLINE_EDIT;\nInlineEdit.propTypes = propTypes;\nInlineEdit.defaultProps = defaultProps;\n\nexport default InlineEdit;\n"],"file":"inline.js"}