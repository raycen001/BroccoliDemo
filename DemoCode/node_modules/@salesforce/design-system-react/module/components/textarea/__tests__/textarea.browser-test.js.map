{"version":3,"sources":["../../../../.tmp-es/components/textarea/__tests__/textarea.browser-test.jsx"],"names":["React","ReactDOM","expect","assign","TestUtils","Textarea","findRenderedDOMComponentWithTag","findRenderedDOMComponentWithClass","describe","defaultProps","placeholder","body","renderTextarea","instance","document","createElement","appendChild","render","removeTextarea","unmountComponentAtNode","removeChild","createTextarea","props","getTextarea","component","wrapper","textarea","label","beforeEach","id","afterEach","it","className","to","include","textContent","equal","getAttribute","be","ok","assistiveText","component1","component2","textarea1","textarea2","inputNodes","querySelectorAll","parentNode","remove","not","error","required","errorText"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-render-return-value */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { expect } from 'chai';\nimport assign from 'lodash.assign';\nimport TestUtils from 'react-dom/test-utils';\n\nimport Textarea from '../';\n\nconst {\n\tfindRenderedDOMComponentWithTag,\n\tfindRenderedDOMComponentWithClass,\n} = TestUtils;\n\ndescribe('SLDS TEXTAREA **************************************************', () => {\n\tconst defaultProps = {\n\t\tplaceholder: 'Placeholder Text',\n\t};\n\n\tlet body;\n\n\tconst renderTextarea = (instance) => {\n\t\tbody = document.createElement('div');\n\t\tdocument.body.appendChild(body);\n\t\treturn ReactDOM.render(instance, body); // deepscan-disable-line REACT_ASYNC_RENDER_RETURN_VALUE\n\t};\n\n\tfunction removeTextarea() {\n\t\tReactDOM.unmountComponentAtNode(body);\n\t\tdocument.body.removeChild(body);\n\t}\n\n\tconst createTextarea = (props) =>\n\t\tReact.createElement(Textarea, assign({}, defaultProps, props));\n\tconst getTextarea = (props) => renderTextarea(createTextarea(props));\n\n\tdescribe('Standard Textarea with Label', () => {\n\t\tlet component;\n\t\tlet wrapper;\n\t\tlet textarea;\n\t\tlet label;\n\n\t\tbeforeEach(() => {\n\t\t\tcomponent = getTextarea({ label: 'Textarea Label', id: 'custom-id' });\n\t\t\twrapper = findRenderedDOMComponentWithClass(\n\t\t\t\tcomponent,\n\t\t\t\t'slds-form-element'\n\t\t\t);\n\t\t\ttextarea = findRenderedDOMComponentWithTag(component, 'textarea');\n\t\t\tlabel = findRenderedDOMComponentWithClass(\n\t\t\t\tcomponent,\n\t\t\t\t'slds-form-element__label'\n\t\t\t);\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tremoveTextarea();\n\t\t});\n\n\t\tit('is wrapped in div with class \"slds-form-element\"', () => {\n\t\t\texpect(wrapper.className).to.include('slds-form-element');\n\t\t});\n\n\t\tit('renders label', () => {\n\t\t\texpect(label.textContent).to.equal('Textarea Label');\n\t\t});\n\n\t\tit('renders textarea element with class \"slds-textarea\"', () => {\n\t\t\texpect(textarea.className).to.include('slds-textarea');\n\t\t});\n\n\t\tit('has an id', () => {\n\t\t\texpect(textarea.getAttribute('id')).to.be.ok;\n\t\t});\n\n\t\tit('can pass custom id', () => {\n\t\t\texpect(textarea.getAttribute('id')).to.equal('custom-id');\n\t\t});\n\n\t\tit('renders placeholder text', () => {\n\t\t\texpect(textarea.getAttribute('placeholder')).to.equal('Placeholder Text');\n\t\t});\n\t});\n\n\tdescribe('Textarea without Label', () => {\n\t\tlet component;\n\t\tlet label;\n\n\t\tbeforeEach(() => {\n\t\t\tcomponent = getTextarea({ assistiveText: { label: 'Assistive Label' } });\n\t\t\tlabel = findRenderedDOMComponentWithClass(\n\t\t\t\tcomponent,\n\t\t\t\t'slds-form-element__label'\n\t\t\t);\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tremoveTextarea();\n\t\t});\n\n\t\tit('renders label (assitive)', () => {\n\t\t\texpect(label.textContent).to.equal('Assistive Label');\n\t\t});\n\n\t\tit('label has class \"slds-assistive-text\"', () => {\n\t\t\texpect(label.className).to.include('slds-assistive-text');\n\t\t});\n\t});\n\n\tdescribe('Multiple Textareas', () => {\n\t\tlet component1;\n\t\tlet component2;\n\t\tlet textarea1;\n\t\tlet textarea2;\n\n\t\tbeforeEach(() => {\n\t\t\tcomponent1 = getTextarea({ label: 'Textarea One' });\n\t\t\tcomponent2 = getTextarea({ label: 'Textarea Two' });\n\t\t\ttextarea1 = findRenderedDOMComponentWithTag(component1, 'textarea');\n\t\t\ttextarea2 = findRenderedDOMComponentWithTag(component2, 'textarea');\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tconst inputNodes = document.querySelectorAll('.slds-form-element');\n\t\t\tinputNodes[0].parentNode.remove(inputNodes[0]);\n\t\t\tinputNodes[1].parentNode.remove(inputNodes[1]);\n\t\t});\n\n\t\tit('each textarea has unique generated id', () => {\n\t\t\texpect(textarea1.getAttribute('id')).to.not.equal(\n\t\t\t\ttextarea2.getAttribute('id')\n\t\t\t);\n\t\t});\n\t});\n\n\tdescribe('Required Textarea in Error State', () => {\n\t\tlet component;\n\t\tlet wrapper;\n\t\tlet error;\n\n\t\tbeforeEach(() => {\n\t\t\tcomponent = getTextarea({\n\t\t\t\tlabel: 'Textarea Label',\n\t\t\t\trequired: true,\n\t\t\t\terrorText: 'Error Message',\n\t\t\t});\n\t\t\twrapper = findRenderedDOMComponentWithClass(\n\t\t\t\tcomponent,\n\t\t\t\t'slds-form-element'\n\t\t\t);\n\t\t\terror = findRenderedDOMComponentWithClass(\n\t\t\t\tcomponent,\n\t\t\t\t'slds-form-element__help'\n\t\t\t);\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tremoveTextarea();\n\t\t});\n\n\t\tit('textarea wrapper contains an <abbr> that has class \"slds-required\"', () => {\n\t\t\texpect(\n\t\t\t\tfindRenderedDOMComponentWithTag(component, 'abbr').className\n\t\t\t).to.include('slds-required');\n\t\t});\n\n\t\tit('textarea wrapper has class \"slds-has-error\"', () => {\n\t\t\texpect(wrapper.className).to.include('slds-has-error');\n\t\t});\n\n\t\tit('renders error message', () => {\n\t\t\texpect(error.textContent).to.equal('Error Message');\n\t\t});\n\t});\n});\n"],"file":"textarea.browser-test.js"}