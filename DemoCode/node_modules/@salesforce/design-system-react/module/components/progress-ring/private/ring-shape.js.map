{"version":3,"sources":["../../../../.tmp-es/components/progress-ring/private/ring-shape.jsx"],"names":["React","PropTypes","classNames","PROGRESS_RING_SHAPE","propTypes","id","string","className","oneOfType","array","object","fillPercentDecimal","number","flowDirection","oneOf","size","defaultProps","getD","isLong","arcX","arcY","calculateD","fillPercent","Math","cos","PI","sin","ProgressRingShape","props","progressStyles","height","transform","children","displayName"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Progress Ring design pattern](https://lightningdesignsystem.com/components/progress-ring/) in React.\n// Based on SLDS v2.4.5\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst PROGRESS_RING_SHAPE = 'SLDSProgressRingShape';\n\nconst propTypes = {\n\t/**\n\t * HTML id for component.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * CSS class names to be added to the container element. `array`, `object`, or `string` are accepted.\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Decimal percentage drain of the ring [0.0 - 1.0]\n\t */\n\tfillPercentDecimal: PropTypes.number,\n\t/**\n\t * Direction that the progress ring \"flows.\" Default is counter-clockwise, or `drain`. For clockwise flow, use `fill`\n\t */\n\tflowDirection: PropTypes.oneOf(['drain', 'fill']),\n\t/**\n\t * Size of the progress ring. Default is 'medium'\n\t */\n\tsize: PropTypes.oneOf(['medium', 'large']),\n};\n\nconst defaultProps = {\n\tfillPercentDecimal: 0,\n};\n\n/**\n * Generates the string for the D value of the SVG path\n * @param isLong {number} a binary flag if the arc should 'take the long path' (used for > 50% fill)\n * @param arcX {decimal} the arc's x position\n * @param arcY {decimal} the arc's y position\n */\nconst getD = (isLong, arcX, arcY) =>\n\t`M 1 0 A 1 1 0 ${isLong} 1 ${arcX} ${arcY} L 0 0`;\n\n/**\n * Calculates the fill part of the ring\n * @param fillPercent {decimal} Decimal percentage that represents the amount of the ring which is filled with color.\n */\nconst calculateD = (fillPercent) => {\n\tconst isLong = fillPercent > 0.5 ? 1 : 0;\n\tconst arcX = Math.cos(2 * Math.PI * fillPercent);\n\tconst arcY = Math.sin(2 * Math.PI * fillPercent);\n\n\treturn getD(isLong, arcX, arcY);\n};\n\n/**\n * Displays the progress ring shape.\n */\nconst ProgressRingShape = (props) => {\n\tconst progressStyles = { height: props.size === 'large' ? '2rem' : '1.5rem' };\n\n\tif (props.flowDirection === 'fill') {\n\t\tprogressStyles.transform = 'scaleX(1) rotate(-90deg)';\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tid={props.id}\n\t\t\tclassName={classNames('slds-progress-ring', props.className)}\n\t\t>\n\t\t\t<div\n\t\t\t\taria-valuemin=\"0\"\n\t\t\t\taria-valuemax=\"100\"\n\t\t\t\taria-valuenow={props.fillPercentDecimal * 100}\n\t\t\t\tclassName=\"slds-progress-ring__progress\"\n\t\t\t\trole=\"progressbar\"\n\t\t\t\tstyle={progressStyles}\n\t\t\t>\n\t\t\t\t<svg viewBox=\"-1 -1 2 2\">\n\t\t\t\t\t<path\n\t\t\t\t\t\tclassName=\"slds-progress-ring__path\"\n\t\t\t\t\t\td={calculateD(props.fillPercentDecimal)}\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t\t<div className=\"slds-progress-ring__content\">{props.children}</div>\n\t\t</div>\n\t);\n};\n\nProgressRingShape.displayName = PROGRESS_RING_SHAPE;\nProgressRingShape.propTypes = propTypes;\nProgressRingShape.defaultProps = defaultProps;\n\nexport default ProgressRingShape;\n"],"file":"ring-shape.js"}