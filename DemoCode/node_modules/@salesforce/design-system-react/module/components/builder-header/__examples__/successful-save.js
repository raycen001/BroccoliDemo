import React from 'react';
import IconSettings from '../../icon-settings';
import Button from '../../button';
import ButtonGroup from '../../button-group';
import Icon from '../../icon';
import BuilderHeader from '..';
import BuilderHeaderNav from '../nav';
import BuilderHeaderNavLink from '../nav-link';
import BuilderHeaderNavDropdown from '../nav-dropdown';
import BuilderHeaderToolbar from '../toolbar';

var Example = function Example(props) {
  return (
    /*#__PURE__*/
    React.createElement(IconSettings, {
      iconPath: "/assets/icons"
    },
    /*#__PURE__*/
    React.createElement(BuilderHeader, {
      assistiveText: {
        backIcon: 'Back',
        helpIcon: 'Help',
        icon: 'Builder'
      },
      labels: {
        back: 'Back',
        help: 'Help',
        pageType: 'Page Type',
        title: 'App Name'
      },
      style: {
        position: 'relative'
      }
    },
    /*#__PURE__*/
    React.createElement(BuilderHeaderNav, null,
    /*#__PURE__*/
    React.createElement(BuilderHeaderNavLink, {
      assistiveText: {
        label: 'Link'
      },
      iconCategory: "utility",
      iconName: "settings",
      label: "Link"
    }),
    /*#__PURE__*/
    React.createElement(BuilderHeaderNavDropdown, {
      assistiveText: {
        icon: 'Dropdown'
      },
      iconCategory: "utility",
      iconName: "page",
      id: "dropdown",
      label: "Dropdown",
      options: [{
        label: 'Menu Item One',
        value: 'A0'
      }, {
        label: 'Menu Item Two',
        value: 'B0'
      }]
    })),
    /*#__PURE__*/
    React.createElement(BuilderHeaderToolbar, {
      assistiveText: {
        actions: 'Document Actions'
      },
      onRenderActions: function onRenderActions() {
        return (
          /*#__PURE__*/
          React.createElement("div", null,
          /*#__PURE__*/
          React.createElement(Icon, {
            category: "utility",
            className: "slds-m-right_x-small",
            name: "check",
            size: "x-small",
            style: {
              fill: '#4BCA81'
            }
          }),
          /*#__PURE__*/
          React.createElement("span", {
            className: "slds-color__text_gray-10 slds-align-middle slds-m-right_small"
          }, "Saved"),
          /*#__PURE__*/
          React.createElement(Button, {
            iconCategory: "utility",
            iconName: "right",
            iconPosition: "left",
            label: "Run"
          }),
          /*#__PURE__*/
          React.createElement(Button, {
            label: "Save As"
          }),
          /*#__PURE__*/
          React.createElement(Button, {
            label: "Save",
            variant: "brand"
          }))
        );
      }
    },
    /*#__PURE__*/
    React.createElement(ButtonGroup, {
      label: "Canvas Actions",
      id: "button-group-canvas-actions"
    },
    /*#__PURE__*/
    React.createElement(Button, {
      assistiveText: {
        icon: 'Undo'
      },
      iconCategory: "utility",
      iconName: "undo",
      iconVariant: "border",
      variant: "icon"
    }),
    /*#__PURE__*/
    React.createElement(Button, {
      assistiveText: {
        icon: 'Redo'
      },
      iconCategory: "utility",
      iconName: "redo",
      iconVariant: "border",
      variant: "icon"
    })),
    /*#__PURE__*/
    React.createElement(ButtonGroup, {
      label: "Edit Actions",
      id: "button-group-edit-actions"
    },
    /*#__PURE__*/
    React.createElement(Button, {
      assistiveText: {
        icon: 'Cut'
      },
      iconCategory: "utility",
      iconName: "cut",
      iconVariant: "border",
      variant: "icon"
    }),
    /*#__PURE__*/
    React.createElement(Button, {
      assistiveText: {
        icon: 'Copy'
      },
      iconCategory: "utility",
      iconName: "copy",
      iconVariant: "border",
      variant: "icon"
    }),
    /*#__PURE__*/
    React.createElement(Button, {
      assistiveText: {
        icon: 'Paste'
      },
      iconCategory: "utility",
      iconName: "paste",
      iconVariant: "border",
      variant: "icon"
    })))))
  );
};

Example.displayName = 'BuilderHeaderSuccessfulSave';
export default Example; // export is replaced with `ReactDOM.render(<Example />, mountNode);` at runtime
//# sourceMappingURL=successful-save.js.map