{"version":3,"sources":["../../../.tmp-es/components/media-object/index.jsx"],"names":["React","PropTypes","classnames","MEDIA_OBJECT","cssClasses","base","figure","body","MediaObject","props","verticalCenter","canTruncate","className","Component","bool","oneOfType","array","object","string","node"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;AACA;AACA;AACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,YAAT,QAA6B,2BAA7B,C,CAEA;;AACA,OAAO,IAAMC,UAAU,GAAG;AACzBC,EAAAA,IAAI,EAAE,YADmB;AAEzBC,EAAAA,MAAM,EAAE,oBAFiB;AAGzBC,EAAAA,IAAI,EAAE;AAHmB,CAAnB;AAMP;;;;IAGMC,W;;;;;;;;;;;;;AACL;AACA;AAGA;6BA4BS;AACR;AAAA;AACC;AACC,UAAA,SAAS,EAAEN,UAAU,CACpBE,UAAU,CAACC,IADS,EAEpB;AACC,iCAAqB,KAAKI,KAAL,CAAWC,cADjC;AAEC,uCAA2B,KAAKD,KAAL,CAAWE;AAFvC,WAFoB,EAMpB,KAAKF,KAAL,CAAWG,SANS;AADtB,WAUE,KAAKH,KAAL,CAAWH,MAAX;AAAA;AACA;AAAK,UAAA,SAAS,EAAEF,UAAU,CAACE;AAA3B,WAAoC,KAAKG,KAAL,CAAWH,MAA/C,MADA,GAEG,IAZL;AAAA;AAaC;AAAK,UAAA,SAAS,EAAEF,UAAU,CAACG;AAA3B,WAAkC,KAAKE,KAAL,CAAWF,IAA7C,CAbD;AADD;AAiBA;;;;EAnDwBP,KAAK,CAACa,S;;gBAA1BL,W,iBAGgBL,Y;;gBAHhBK,W,eAMc;AAClB;;;AAGAG,EAAAA,WAAW,EAAEV,SAAS,CAACa,IAJL;;AAKlB;;;AAGAF,EAAAA,SAAS,EAAEX,SAAS,CAACc,SAAV,CAAoB,CAC9Bd,SAAS,CAACe,KADoB,EAE9Bf,SAAS,CAACgB,MAFoB,EAG9BhB,SAAS,CAACiB,MAHoB,CAApB,CARO;;AAalB;;;AAGAX,EAAAA,IAAI,EAAEN,SAAS,CAACkB,IAhBE;;AAiBlB;;;AAGAb,EAAAA,MAAM,EAAEL,SAAS,CAACkB,IApBA;;AAqBlB;;;AAGAT,EAAAA,cAAc,EAAET,SAAS,CAACa;AAxBR,C;;AAgDpB,eAAeN,WAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// ### React\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\n// ### classNames\n// [github.com/JedWatson/classnames](https://github.com/JedWatson/classnames)\n// This project uses `classnames`, \"a simple javascript utility for conditionally\n// joining classNames together.\"\nimport classnames from 'classnames';\n\nimport { MEDIA_OBJECT } from '../../utilities/constants';\n\n// Allow for predicatable DOM queries with `querySelectorAll(cssClasses.base)`\nexport const cssClasses = {\n\tbase: 'slds-media',\n\tfigure: 'slds-media__figure',\n\tbody: 'slds-media__body',\n};\n\n/**\n * When you need text and a figure next to each other, use a media object.\n */\nclass MediaObject extends React.Component {\n\t// ### Display Name\n\t// Always use the canonical component name as the React display name.\n\tstatic displayName = MEDIA_OBJECT;\n\n\t// ### Prop Types\n\tstatic propTypes = {\n\t\t/**\n\t\t * Often the body may need to be truncated for correct layout. This is only applicable if using the component within a flexbox container.\n\t\t */\n\t\tcanTruncate: PropTypes.bool,\n\t\t/**\n\t\t * Class names to be added to the component's HTML tag with `slds-media` class.\n\t\t */\n\t\tclassName: PropTypes.oneOfType([\n\t\t\tPropTypes.array,\n\t\t\tPropTypes.object,\n\t\t\tPropTypes.string,\n\t\t]),\n\t\t/**\n\t\t * The body is often text such as a heading or paragraph.\n\t\t */\n\t\tbody: PropTypes.node,\n\t\t/**\n\t\t * The figure is the optional visualization of the text within the body.\n\t\t */\n\t\tfigure: PropTypes.node,\n\t\t/**\n\t\t * Vertically centers the body with the middle of the figure.\n\t\t */\n\t\tverticalCenter: PropTypes.bool,\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classnames(\n\t\t\t\t\tcssClasses.base,\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-media_center': this.props.verticalCenter,\n\t\t\t\t\t\t'slds-has-flexi-truncate': this.props.canTruncate,\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{this.props.figure ? (\n\t\t\t\t\t<div className={cssClasses.figure}>{this.props.figure} </div>\n\t\t\t\t) : null}\n\t\t\t\t<div className={cssClasses.body}>{this.props.body}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MediaObject;\n"],"file":"index.js"}