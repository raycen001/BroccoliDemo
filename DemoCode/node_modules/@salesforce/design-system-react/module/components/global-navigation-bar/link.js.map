{"version":3,"sources":["../../../.tmp-es/components/global-navigation-bar/link.jsx"],"names":["React","PropTypes","classNames","isFunction","GLOBAL_NAVIGATION_BAR_LINK","handleClick","event","href","onClick","preventDefault","GlobalNavigationBarLink","props","active","activeBackgroundColor","assistiveText","className","dividerPosition","id","label","onBlur","onFocus","onKeyDown","onKeyPress","onKeyUp","onMouseEnter","onMouseLeave","tabIndex","listItemstyle","backgroundColor","borderBottomColor","activeDescriptor","displayName","propTypes","bool","string","shape","oneOfType","array","object","oneOf","func","defaultProps"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # GlobalNavigationBar Link Component\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// ### classNames\nimport classNames from 'classnames';\n\n// ### isFunction\nimport isFunction from 'lodash.isfunction';\n\n// ## Constants\nimport { GLOBAL_NAVIGATION_BAR_LINK } from '../../utilities/constants';\n\nfunction handleClick(event, href, onClick) {\n\tevent.preventDefault();\n\n\tonClick(event, { href });\n}\n\n/**\n * Wraps a link in the proper markup to support use in the GlobalNavigationBar.\n */\nconst GlobalNavigationBarLink = (props) => {\n\t// Separate props we care about in order to pass others along passively to the `a` tag\n\tconst {\n\t\tactive,\n\t\tactiveBackgroundColor,\n\t\tassistiveText,\n\t\tclassName,\n\t\tdividerPosition,\n\t\thref,\n\t\tid,\n\t\tlabel,\n\t\tonBlur,\n\t\tonClick,\n\t\tonFocus,\n\t\tonKeyDown,\n\t\tonKeyPress,\n\t\tonKeyUp,\n\t\tonMouseEnter,\n\t\tonMouseLeave,\n\t\ttabIndex,\n\t} = props;\n\n\tconst listItemstyle = active\n\t\t? {\n\t\t\t\tbackgroundColor: activeBackgroundColor,\n\t\t\t\tborderBottomColor: activeBackgroundColor,\n\t\t\t}\n\t\t: null;\n\n\treturn (\n\t\t<li\n\t\t\tclassName={classNames('slds-context-bar__item', {\n\t\t\t\t'slds-is-active': active,\n\t\t\t\t[`slds-context-bar__item_divider-${dividerPosition}`]: dividerPosition,\n\t\t\t})}\n\t\t\tid={id}\n\t\t\tstyle={listItemstyle}\n\t\t>\n\t\t\t<a\n\t\t\t\thref={href}\n\t\t\t\tclassName={classNames('slds-context-bar__label-action', className)}\n\t\t\t\tonBlur={onBlur}\n\t\t\t\tonClick={\n\t\t\t\t\tisFunction(onClick)\n\t\t\t\t\t\t? (event) => handleClick(event, href, onClick)\n\t\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t\tonFocus={onFocus}\n\t\t\t\tonKeyDown={onKeyDown}\n\t\t\t\tonKeyPress={onKeyPress}\n\t\t\t\tonKeyUp={onKeyUp}\n\t\t\t\tonMouseEnter={onMouseEnter}\n\t\t\t\tonMouseLeave={onMouseLeave}\n\t\t\t\ttabIndex={tabIndex}\n\t\t\t\ttitle={label}\n\t\t\t>\n\t\t\t\t{active ? (\n\t\t\t\t\t<span className=\"slds-assistive-text\">\n\t\t\t\t\t\t{assistiveText.activeDescriptor}\n\t\t\t\t\t</span>\n\t\t\t\t) : null}\n\t\t\t\t<span className=\"slds-truncate\" title={label}>\n\t\t\t\t\t{label}\n\t\t\t\t</span>\n\t\t\t</a>\n\t\t</li>\n\t);\n};\n\nGlobalNavigationBarLink.displayName = GLOBAL_NAVIGATION_BAR_LINK;\n\n// ### Prop Types\nGlobalNavigationBarLink.propTypes = {\n\t/**\n\t * Whether the item is active or not.\n\t */\n\tactive: PropTypes.bool,\n\t/**\n\t * Allows alignment of active item with active application background color. If application background is dark, text color may need to be `#fff`. This can be done with the style prop.\n\t */\n\tactiveBackgroundColor: PropTypes.string,\n\t/**\n\t * **Assistive text for accessibility.**\n\t * * `activeDescriptor`: The text that appears alongside a link that is currently active.\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tactiveDescriptor: PropTypes.string,\n\t}),\n\t/**\n\t * Class names to be added to the anchor element\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Determines position of separating bar.\n\t */\n\tdividerPosition: PropTypes.oneOf(['left', 'right']),\n\t/**\n\t * The `href` attribute of the link. Please pass in bookmarkable URLs from your routing library. Use `GlobalNavigationBarButton` if a \"real URL\" is not desired. If the `onClick` callback is specified this URL will still be prevented from changing the browser's location.\n\t */\n\thref: PropTypes.string,\n\t/**\n\t * The `id` attribute is applied to the `li` tag. _This was recently changed from being on the anchor tag._\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * Text to show for link item.\n\t */\n\tlabel: PropTypes.string,\n\t/**\n\t * Triggered when focus is removed.\n\t */\n\tonBlur: PropTypes.func,\n\t/**\n\t * `function (event, href)` - fires when the link is clicked. If set, the browser location change to the `href` specified will be ignored, but the `href` will be included in an additional parameter passed to the callback.\n\t */\n\tonClick: PropTypes.func,\n\t/**\n\t * Triggered when component is focused.\n\t */\n\tonFocus: PropTypes.func,\n\t/**\n\t * Triggered when a key is pressed down\n\t */\n\tonKeyDown: PropTypes.func,\n\t/**\n\t * Triggered when a key is pressed and released\n\t */\n\tonKeyPress: PropTypes.func,\n\t/**\n\t * Triggered when a key is released\n\t */\n\tonKeyUp: PropTypes.func,\n\t/**\n\t * Triggered when a mouse arrow hovers\n\t */\n\tonMouseEnter: PropTypes.func,\n\t/**\n\t * Triggered when a mouse arrow no longer hovers\n\t */\n\tonMouseLeave: PropTypes.func,\n\t/**\n\t * Write \"-1\" if you don't want the user to tab to the button.\n\t */\n\ttabIndex: PropTypes.string,\n};\n\nGlobalNavigationBarLink.defaultProps = {\n\tassistiveText: {\n\t\tactiveDescriptor: 'Current page:',\n\t},\n\thref: 'javascript:void(0);', // eslint-disable-line no-script-url\n};\n\nexport default GlobalNavigationBarLink;\n"],"file":"link.js"}