{"version":3,"sources":["../../../.tmp-es/components/welcome-mat/tile.jsx"],"names":["React","PropTypes","classNames","shortid","Icon","WELCOME_MAT_TILE","displayName","propTypes","assistiveText","shape","completedIcon","string","className","oneOfType","array","object","id","title","description","href","icon","node","isComplete","bool","variant","oneOf","defaultProps","Tile","generatedId","generate","props","body","label","getId","Component"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Welcome Mat Tile design pattern](https://lightningdesignsystem.com/components/welcome-mat/) in React.\n// Based on SLDS v2.4.0\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\nimport Icon from '../icon';\n\nimport { WELCOME_MAT_TILE } from '../../utilities/constants';\n\nconst displayName = WELCOME_MAT_TILE;\n\nconst propTypes = {\n\t/**\n\t * **Assistive text for accessibility.**\n\t * This object is merged with the default props object on every render.\n\t * * `completeIcon`: Text that is visually hidden but read aloud by screenreaders to tell the user what the complete icon means.\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tcompletedIcon: PropTypes.string,\n\t}),\n\t/**\n\t * CSS class names to be added to the container element. `array`, `object`, or `string` are accepted.\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * HTML id for component.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * Title for the tile component.\n\t */\n\ttitle: PropTypes.string,\n\t/**\n\t * Description for the tile component.\n\t */\n\tdescription: PropTypes.string,\n\t/**\n\t * Href for the tile link\n\t */\n\thref: PropTypes.string,\n\t/**\n\t * Icon for the tile\n\t */\n\ticon: PropTypes.node,\n\t/**\n\t * Whether the tile is completed\n\t */\n\tisComplete: PropTypes.bool,\n\t/**\n\t * Variant of the Welcome Mat Tile\n\t */\n\tvariant: PropTypes.oneOf([\n\t\t'steps',\n\t\t'info-only',\n\t\t'splash',\n\t\t'trailhead-connected',\n\t]),\n};\n\nconst defaultProps = {\n\tassistiveText: {\n\t\tcompletedIcon: 'Completed',\n\t},\n\tisComplete: false,\n\tvariant: 'steps',\n};\n\n/**\n * Tile component item represents a tile in a Welcome Mat\n */\nclass Tile extends React.Component {\n\tcomponentWillMount() {\n\t\tthis.generatedId = shortid.generate();\n\t}\n\n\t/**\n\t * Get the Welcome Mat Tile's HTML id. Generate a new one if no ID present.\n\t */\n\tgetId() {\n\t\treturn this.props.id || this.generatedId;\n\t}\n\n\trender() {\n\t\tconst assistiveText = {\n\t\t\t...defaultProps.assistiveText,\n\t\t\t...this.props.assistiveText,\n\t\t};\n\t\tconst body = (\n\t\t\t<React.Fragment>\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t'slds-media__figure',\n\t\t\t\t\t\t'slds-media__figure_fixed-width',\n\t\t\t\t\t\t'slds-align_absolute-center'\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"slds-welcome-mat__tile-figure\">\n\t\t\t\t\t\t<div className=\"slds-welcome-mat__tile-icon-container\">\n\t\t\t\t\t\t\t{this.props.icon}\n\t\t\t\t\t\t\t{this.props.isComplete && this.props.variant !== 'info-only' ? (\n\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\tassistiveText={{\n\t\t\t\t\t\t\t\t\t\tlabel: assistiveText.completedIcon,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tcategory=\"action\"\n\t\t\t\t\t\t\t\t\tname=\"check\"\n\t\t\t\t\t\t\t\t\ttitle={assistiveText.completedIcon}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"slds-media__body\">\n\t\t\t\t\t<div className=\"slds-welcome-mat__tile-body\">\n\t\t\t\t\t\t<h3 className=\"slds-welcome-mat__tile-title\">{this.props.title}</h3>\n\t\t\t\t\t\t<p className=\"slds-welcome-mat__tile-description\">\n\t\t\t\t\t\t\t{this.props.description}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tid={this.getId()}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-welcome-mat__tile',\n\t\t\t\t\tthis.props.variant === 'info-only'\n\t\t\t\t\t\t? 'slds-welcome-mat__tile_info-only'\n\t\t\t\t\t\t: null,\n\t\t\t\t\tthis.props.isComplete && this.props.variant !== 'info-only'\n\t\t\t\t\t\t? 'slds-welcome-mat__tile_complete'\n\t\t\t\t\t\t: null,\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{this.props.variant === 'info-only' ? (\n\t\t\t\t\t<div className=\"slds-media\">{body}</div>\n\t\t\t\t) : (\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={this.props.href}\n\t\t\t\t\t\tclassName=\"slds-box slds-box_link slds-media\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{body}\n\t\t\t\t\t</a>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nTile.displayName = displayName;\nTile.propTypes = propTypes;\nTile.defaultProps = defaultProps;\n\nexport default Tile;\n"],"file":"tile.js"}