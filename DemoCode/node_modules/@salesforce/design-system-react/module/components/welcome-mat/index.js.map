{"version":3,"sources":["../../../.tmp-es/components/welcome-mat/index.jsx"],"names":["React","PropTypes","classNames","shortid","assign","Modal","ProgressBar","WELCOME_MAT","displayName","propTypes","className","oneOfType","array","object","string","id","isOpen","bool","labels","shape","title","description","unitsCompletedAfter","variant","oneOf","onRenderInfoActions","func","onRequestClose","infoBadge","node","doNotShowAgainCheckbox","defaultProps","WelcomeMat","props","state","completedSteps","totalSteps","progress","generatedId","generate","getCount","Children","count","children","toArray","filter","c","isComplete","length","setState","splash","getId","map","child","cloneElement","dialogLabelledBy","Component"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Welcome Mat design pattern](https://lightningdesignsystem.com/components/welcome-mat/) in React.\n// Based on SLDS v2.4.0\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\nimport assign from 'lodash.assign';\n\nimport Modal from '../modal';\nimport ProgressBar from '../progress-bar';\n\nimport { WELCOME_MAT } from '../../utilities/constants';\n\nconst displayName = WELCOME_MAT;\n\nconst propTypes = {\n\t/**\n\t * CSS class names to be added to the container element. `array`, `object`, or `string` are accepted.\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * HTML id for component.\n\t */\n\tid: PropTypes.string,\n\t/**\n\t * Whether the modal is open\n\t */\n\tisOpen: PropTypes.bool,\n\t/**\n\t * **Weclome Mat labels for internationalization**\n\t * This object is merged with the default props object on every render.\n\t * * `title`: Title for the Welcome Mat\n\t * * `description`: Label for the radio input\n\t * * `unitsCompletedAfter`: Label for the radio input\n\t */\n\tlabels: PropTypes.shape({\n\t\ttitle: PropTypes.string,\n\t\tdescription: PropTypes.string,\n\t\tunitsCompletedAfter: PropTypes.string,\n\t}),\n\t/**\n\t *\tVariant of the WelcomeMat\n\t */\n\tvariant: PropTypes.oneOf([\n\t\t'steps',\n\t\t'info-only',\n\t\t'splash',\n\t\t'trailhead-connected',\n\t]),\n\t/**\n\t * Link to learn more button\n\t */\n\tonRenderInfoActions: PropTypes.func,\n\t/**\n\t * Callback to fire when modal is dismissed\n\t */\n\tonRequestClose: PropTypes.func,\n\t/**\n\t *  Accepts a single WelcomeMatInfoBadge component, to be used with the trailhead variant\n\t */\n\tinfoBadge: PropTypes.node,\n\t/**\n\t *  Do not show again checkbox for info-only variant\n\t */\n\tdoNotShowAgainCheckbox: PropTypes.node,\n};\n\nconst defaultProps = {\n\tlabels: {\n\t\tunitsCompletedAfter: 'units completed',\n\t},\n\tvariant: 'steps',\n\tisOpen: true,\n};\n\n/**\n * A Welcome Mat provides a series of unordered items a user can click to learn about a thematic topic.\n */\nclass WelcomeMat extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcompletedSteps: 0,\n\t\t\ttotalSteps: 0,\n\t\t\tprogress: 0,\n\t\t};\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.generatedId = shortid.generate();\n\t\tthis.getCount();\n\t}\n\n\t/**\n\t * Get the WelcomeMat's HTML id. Generate a new one if no ID present.\n\t */\n\tgetId() {\n\t\treturn this.props.id || this.generatedId;\n\t}\n\n\tgetCount() {\n\t\tconst totalSteps = React.Children.count(this.props.children);\n\t\tconst completedSteps = React.Children.toArray(this.props.children).filter(\n\t\t\t(c) => c.props.isComplete\n\t\t).length;\n\t\tconst progress = completedSteps / totalSteps * 100;\n\t\tthis.setState({\n\t\t\ttotalSteps,\n\t\t\tcompletedSteps,\n\t\t\tprogress,\n\t\t});\n\t}\n\n\trender() {\n\t\tconst labels = assign({}, defaultProps.labels, this.props.labels);\n\t\tconst splash = (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-welcome-mat__info-content',\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t\tid={`${this.getId()}-content`}\n\t\t\t>\n\t\t\t\t<h2\n\t\t\t\t\tclassName=\"slds-welcome-mat__info-title\"\n\t\t\t\t\tid={`${this.getId()}-label`}\n\t\t\t\t>\n\t\t\t\t\t{labels.title}\n\t\t\t\t</h2>\n\t\t\t\t<div className=\"slds-welcome-mat__info-description slds-text-longform\">\n\t\t\t\t\t<p>{labels.description}</p>\n\t\t\t\t</div>\n\t\t\t\t{this.props.variant === 'info-only' ||\n\t\t\t\tthis.props.variant === 'splash' ? (\n\t\t\t\t\t<div className=\"slds-welcome-mat__info-actions\">\n\t\t\t\t\t\t{this.props.onRenderInfoActions()\n\t\t\t\t\t\t\t? this.props.onRenderInfoActions()\n\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t<div className=\"slds-m-top_large\">\n\t\t\t\t\t\t\t{this.props.doNotShowAgainCheckbox\n\t\t\t\t\t\t\t\t? this.props.doNotShowAgainCheckbox\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t\t{(this.props.variant === 'steps' ||\n\t\t\t\t\tthis.props.variant === 'trailhead-connected') &&\n\t\t\t\tthis.props.children ? (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\t\t'slds-welcome-mat__info-progress',\n\t\t\t\t\t\t\t\tthis.state.completedSteps === this.state.totalSteps\n\t\t\t\t\t\t\t\t\t? 'slds-welcome-mat__info-progress_complete'\n\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{this.props.variant === 'trailhead-connected'\n\t\t\t\t\t\t\t\t? React.Children.map(this.props.infoBadge, (child) =>\n\t\t\t\t\t\t\t\t\t\tReact.cloneElement(child, {\n\t\t\t\t\t\t\t\t\t\t\tisComplete:\n\t\t\t\t\t\t\t\t\t\t\t\tthis.state.completedSteps === this.state.totalSteps\n\t\t\t\t\t\t\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t{this.state.completedSteps !== this.state.totalSteps ||\n\t\t\t\t\t\t\tthis.props.variant !== 'trailhead-connected' ? (\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t{this.props.variant === 'trailhead-connected' ? (\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.completedSteps}\n\t\t\t\t\t\t\t\t\t\t\t{`/`}\n\t\t\t\t\t\t\t\t\t\t\t{this.state.totalSteps}\n\t\t\t\t\t\t\t\t\t\t\t{` ${labels.unitsCompletedAfter}`}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.completedSteps}\n\t\t\t\t\t\t\t\t\t\t\t\t{`/`}\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.totalSteps}\n\t\t\t\t\t\t\t\t\t\t\t\t{` ${labels.unitsCompletedAfter}`}\n\t\t\t\t\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t<ProgressBar value={this.state.progress} radius=\"circular\" />\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t);\n\n\t\treturn (\n\t\t\t<Modal\n\t\t\t\tassistiveText={{\n\t\t\t\t\tdialogLabelledBy: `${this.getId()}-label`,\n\t\t\t\t}}\n\t\t\t\tisOpen={this.props.isOpen}\n\t\t\t\tonRequestClose={this.props.onRequestClose}\n\t\t\t\tsize=\"small\"\n\t\t\t\tid={`${this.getId()}-modal`}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t'slds-welcome-mat',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'slds-welcome-mat_info-only': this.props.variant === 'info-only',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis.props.children ? null : 'slds-welcome-mat_splash'\n\t\t\t\t\t)}\n\t\t\t\t\tid={this.getId()}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"slds-welcome-mat__content slds-grid\">\n\t\t\t\t\t\t{this.props.children ? (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t<div className=\"slds-welcome-mat__info slds-size_1-of-2\">\n\t\t\t\t\t\t\t\t\t{splash}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName={classNames(\n\t\t\t\t\t\t\t\t\t\t'slds-welcome-mat__tiles',\n\t\t\t\t\t\t\t\t\t\t'slds-size_1-of-2',\n\t\t\t\t\t\t\t\t\t\tthis.props.variant === 'info-only'\n\t\t\t\t\t\t\t\t\t\t\t? 'slds-welcome-mat__tiles_info-only'\n\t\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{React.Children.map(this.props.children, (child) =>\n\t\t\t\t\t\t\t\t\t\tReact.cloneElement(child, {\n\t\t\t\t\t\t\t\t\t\t\tvariant: this.props.variant,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div className=\"slds-welcome-mat__info slds-size_1-of-1\">\n\t\t\t\t\t\t\t\t{splash}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t);\n\t}\n}\n\nWelcomeMat.displayName = displayName;\nWelcomeMat.propTypes = propTypes;\nWelcomeMat.defaultProps = defaultProps;\n\nexport default WelcomeMat;\n"],"file":"index.js"}