{"version":3,"sources":["../../../.tmp-es/components/badge/index.jsx"],"names":["React","PropTypes","classNames","shortid","BADGE","Badge","props","generatedId","generate","id","icon","iconAlignment","style","getId","color","className","content","Component","displayName","propTypes","oneOfType","array","object","string","oneOf","node","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;AACA;AAEA;AAEA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;AACA;AACA;;AACA,OAAOC,OAAP,MAAoB,SAApB,C,CAEA;;AACA,SAASC,KAAT,QAAsB,2BAAtB;AAEA;;;;IAGMC,K;;;;;AACL,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,+EAAMA,KAAN;AACA,UAAKC,WAAL,GAAmBJ,OAAO,CAACK,QAAR,EAAnB;AAFkB;AAGlB;AAED;;;;;;;4BAGQ;AACP,aAAO,KAAKF,KAAL,CAAWG,EAAX,IAAiB,KAAKF,WAA7B;AACA;;;6BAEQ;AACR,UAAMG,IAAI;AAAA;AACT;AACC,QAAA,SAAS,EAAER,UAAU,CACpB,kBADoB,6BAEA,KAAKI,KAAL,CAAWK,aAFX,EADtB;AAKC,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWM;AALnB,SAOE,KAAKN,KAAL,CAAWI,IAPb,CADD;AAYA;AAAA;AACC;AACC,UAAA,EAAE,EAAE,KAAKG,KAAL,EADL;AAEC,UAAA,SAAS,EAAEX,UAAU,CACpB,YADoB,EAEpB;AACC,kCAAsB,KAAKI,KAAL,CAAWQ,KAAX,KAAqB,SAD5C;AAEC,mCAAuB,KAAKR,KAAL,CAAWQ,KAAX,KAAqB;AAF7C,WAFoB,EAMpB,KAAKR,KAAL,CAAWS,SANS;AAFtB,WAWE,KAAKT,KAAL,CAAWK,aAAX,KAA6B,MAA7B;AAAA;AACA,4BAAC,KAAD,CAAO,QAAP,QACED,IADF,EAEE,KAAKJ,KAAL,CAAWU,OAFb,CADA;AAAA;AAMA,4BAAC,KAAD,CAAO,QAAP,QACE,KAAKV,KAAL,CAAWU,OADb,EAEEN,IAFF,CAjBF;AADD;AAyBA;;;;EAnDkBV,KAAK,CAACiB,S;;AAsD1BZ,KAAK,CAACa,WAAN,GAAoBd,KAApB;AAEAC,KAAK,CAACc,SAAN,GAAkB;AACjB;;;AAGAJ,EAAAA,SAAS,EAAEd,SAAS,CAACmB,SAAV,CAAoB,CAC9BnB,SAAS,CAACoB,KADoB,EAE9BpB,SAAS,CAACqB,MAFoB,EAG9BrB,SAAS,CAACsB,MAHoB,CAApB,CAJM;;AAUjB;;;AAGAd,EAAAA,EAAE,EAAER,SAAS,CAACsB,MAbG;;AAejB;;;AAGAX,EAAAA,KAAK,EAAEX,SAAS,CAACqB,MAlBA;;AAoBjB;;;AAGAR,EAAAA,KAAK,EAAEb,SAAS,CAACuB,KAAV,CAAgB,CAAC,SAAD,EAAY,SAAZ,EAAuB,OAAvB,CAAhB,CAvBU;;AAyBjB;;;AAGAb,EAAAA,aAAa,EAAEV,SAAS,CAACuB,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB,CA5BE;;AA8BjB;;;AAGAR,EAAAA,OAAO,EAAEf,SAAS,CAACmB,SAAV,CAAoB,CAACnB,SAAS,CAACsB,MAAX,EAAmBtB,SAAS,CAACwB,IAA7B,CAApB;AAjCQ,CAAlB;AAoCApB,KAAK,CAACqB,YAAN,GAAqB;AACpBf,EAAAA,aAAa,EAAE,MADK;AAEpBG,EAAAA,KAAK,EAAE;AAFa,CAArB;AAKA,eAAeT,KAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// Implements the [Badge design pattern](https://latest-216.lightningdesignsystem.com/components/badges/) in React.\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\n// ### shortid\n// [npmjs.com/package/shortid](https://www.npmjs.com/package/shortid)\n// shortid is a short, non-sequential, url-friendly, unique id generator\nimport shortid from 'shortid';\n\n// ## Constants\nimport { BADGE } from '../../utilities/constants';\n\n/**\n * Badges are labels which hold small amounts of information.\n */\nclass Badge extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.generatedId = shortid.generate();\n\t}\n\n\t/**\n\t * Get the Badge's HTML id. Generate a new one if no ID present.\n\t */\n\tgetId() {\n\t\treturn this.props.id || this.generatedId;\n\t}\n\n\trender() {\n\t\tconst icon = (\n\t\t\t<span\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-badge__icon',\n\t\t\t\t\t`slds-badge__icon_${this.props.iconAlignment}`\n\t\t\t\t)}\n\t\t\t\tstyle={this.props.style}\n\t\t\t>\n\t\t\t\t{this.props.icon}\n\t\t\t</span>\n\t\t);\n\n\t\treturn (\n\t\t\t<span\n\t\t\t\tid={this.getId()}\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-badge',\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-badge_inverse': this.props.color === 'inverse',\n\t\t\t\t\t\t'slds-badge_lightest': this.props.color === 'light',\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{this.props.iconAlignment === 'left' ? (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t{icon}\n\t\t\t\t\t\t{this.props.content}\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t) : (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t{this.props.content}\n\t\t\t\t\t\t{icon}\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\t\t\t</span>\n\t\t);\n\t}\n}\n\nBadge.displayName = BADGE;\n\nBadge.propTypes = {\n\t/**\n\t * CSS classes that are applied to the component\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\n\t/**\n\t * Id of component, if desired. If not provided an id is automatically generated\n\t */\n\tid: PropTypes.string,\n\n\t/**\n\t * Custom styles to be passed to the component\n\t */\n\tstyle: PropTypes.object,\n\n\t/**\n\t * Color variant for the badge component\n\t */\n\tcolor: PropTypes.oneOf(['default', 'inverse', 'light']),\n\n\t/**\n\t * Icon alignment for the badge component\n\t */\n\ticonAlignment: PropTypes.oneOf(['left', 'right']),\n\n\t/**\n\t *  Content to be placed inside the badge component\n\t */\n\tcontent: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n};\n\nBadge.defaultProps = {\n\ticonAlignment: 'left',\n\tcolor: 'default',\n};\n\nexport default Badge;\n"],"file":"index.js"}