{"version":3,"sources":["../../../../.tmp-es/components/split-view/__tests__/split-view.listbox.header.browser-test.jsx"],"names":["React","chai","expect","chaiEnzyme","mount","sinon","IconSettings","SplitViewListbox","SORT_OPTIONS","use","listOptions","id","label","topRightText","bottomLeftText","bottomRightText","describe","component","WrappedComponent","props","mountComponent","options","labels","header","assistiveText","sort","sortedBy","descending","ascending","sortDirection","DOWN","events","onSort","spy","onSelect","event","selectedItems","setProps","selection","beforeEach","it","find","to","have","length","at","text","equal","prop","string","UP","undefined","simulate","called","be","true"],"mappings":"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","sourcesContent":["import React from 'react';\nimport chai, { expect } from 'chai';\nimport chaiEnzyme from 'chai-enzyme';\nimport { mount } from 'enzyme';\nimport sinon from 'sinon';\n\nimport IconSettings from '../../../components/icon-settings';\nimport SplitViewListbox, {\n\tSORT_OPTIONS,\n} from '../../../components/split-view/listbox';\n\nchai.use(chaiEnzyme());\n\nconst listOptions = [\n\t{\n\t\tid: 'option1',\n\t\tlabel: 'Riley Shultz',\n\t\ttopRightText: '99',\n\t\tbottomLeftText: 'Biotech, Inc.',\n\t\tbottomRightText: 'Nurturing',\n\t},\n\t{\n\t\tid: 'option2',\n\t\tlabel: 'Jason A. - VP of Sales',\n\t\ttopRightText: '92',\n\t\tbottomLeftText: 'Case Management Solutions',\n\t\tbottomRightText: 'Contacted',\n\t},\n\t{\n\t\tid: 'option3',\n\t\tlabel: 'Josh Smith',\n\t\ttopRightText: '90',\n\t\tbottomLeftText: 'Acme, Inc.',\n\t\tbottomRightText: 'Contacted',\n\t},\n\t{\n\t\tid: 'option4',\n\t\tlabel: 'Bobby Tree',\n\t\ttopRightText: '89',\n\t\tbottomLeftText: 'Salesforce, Inc.',\n\t\tbottomRightText: 'Closing',\n\t},\n];\n\ndescribe('SLDSSplitView - Listbox header', () => {\n\tlet component;\n\n\tconst WrappedComponent = (props) => (\n\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t<SplitViewListbox {...props} />\n\t\t</IconSettings>\n\t);\n\n\tconst mountComponent = (props) => mount(<WrappedComponent {...props} />);\n\n\tconst props = {\n\t\toptions: listOptions,\n\t\tlabels: {\n\t\t\theader: 'test header',\n\t\t},\n\t\tassistiveText: {\n\t\t\tsort: {\n\t\t\t\tsortedBy: 'test sort by',\n\t\t\t\tdescending: 'test descending',\n\t\t\t\tascending: 'test ascending',\n\t\t\t},\n\t\t},\n\t\tsortDirection: SORT_OPTIONS.DOWN,\n\t\tevents: {\n\t\t\tonSort: sinon.spy(),\n\t\t\tonSelect: (event, { selectedItems }) => {\n\t\t\t\tcomponent.setProps({ selection: selectedItems });\n\t\t\t},\n\t\t},\n\t};\n\n\tbeforeEach(() => {\n\t\tcomponent = mountComponent(props);\n\t});\n\n\tit('should have a header', () => {\n\t\texpect(component.find('.slds-split-view__list-header')).to.have.length(1);\n\t});\n\n\tit('should not have a header when no label specified', () => {\n\t\tcomponent.setProps({ labels: {} });\n\t\texpect(component.find('.slds-split-view__list-header')).to.have.length(0);\n\t});\n\n\tit('should have test label', () => {\n\t\texpect(\n\t\t\tcomponent\n\t\t\t\t.find('.slds-split-view__list-header > span > span')\n\t\t\t\t.at(1)\n\t\t\t\t.text()\n\t\t).to.equal('test header');\n\t});\n\n\tit('should have sort by assistive text', () => {\n\t\texpect(\n\t\t\tcomponent\n\t\t\t\t.find('.slds-split-view__list-header > span > span')\n\t\t\t\t.at(0)\n\t\t\t\t.text()\n\t\t).to.equal('test sort by: ');\n\t});\n\n\tdescribe('sort', () => {\n\t\tdescribe('direction', () => {\n\t\t\tit('should have a sort direction down icon', () => {\n\t\t\t\texpect(\n\t\t\t\t\tcomponent.find('.slds-split-view__list-header svg > use').prop('href')\n\t\t\t\t).to.have.string('arrowdown');\n\t\t\t});\n\n\t\t\tit('should have sort descending assistive text', () => {\n\t\t\t\texpect(\n\t\t\t\t\tcomponent\n\t\t\t\t\t\t.find('.slds-split-view__list-header > span > span')\n\t\t\t\t\t\t.at(2)\n\t\t\t\t\t\t.text()\n\t\t\t\t).to.equal('- test descending');\n\t\t\t});\n\n\t\t\tit('should have a sort direction up icon', () => {\n\t\t\t\tcomponent.setProps({ sortDirection: SORT_OPTIONS.UP });\n\n\t\t\t\texpect(\n\t\t\t\t\tcomponent.find('.slds-split-view__list-header svg > use').prop('href')\n\t\t\t\t).to.have.string('arrowup');\n\t\t\t});\n\n\t\t\tit('should have sort ascending assistive text', () => {\n\t\t\t\tcomponent.setProps({ sortDirection: SORT_OPTIONS.UP });\n\n\t\t\t\texpect(\n\t\t\t\t\tcomponent\n\t\t\t\t\t\t.find('.slds-split-view__list-header > span > span')\n\t\t\t\t\t\t.at(2)\n\t\t\t\t\t\t.text()\n\t\t\t\t).to.equal('- test ascending');\n\t\t\t});\n\n\t\t\tit('should not have a sort direction when no direction specified', () => {\n\t\t\t\tcomponent.setProps({ sortDirection: undefined });\n\t\t\t\texpect(\n\t\t\t\t\tcomponent.find('.slds-split-view__list-header svg')\n\t\t\t\t).to.have.length(0);\n\t\t\t});\n\n\t\t\tit('should call onSort when the header is clicked', () => {\n\t\t\t\tcomponent.find('a.slds-split-view__list-header').simulate('click');\n\t\t\t\texpect(props.events.onSort.called).to.be.true;\n\t\t\t});\n\n\t\t\tit('should not be clickable when onSort not specified', () => {\n\t\t\t\tcomponent.setProps({ events: { onSelect: sinon.spy() } });\n\t\t\t\texpect(component.find('.slds-split-view__list-header a')).to.be.length(\n\t\t\t\t\t0\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t});\n});\n"],"file":"split-view.listbox.header.browser-test.js"}