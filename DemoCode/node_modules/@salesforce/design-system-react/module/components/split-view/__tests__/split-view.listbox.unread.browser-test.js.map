{"version":3,"sources":["../../../../.tmp-es/components/split-view/__tests__/split-view.listbox.unread.browser-test.jsx"],"names":["React","chai","expect","chaiEnzyme","mount","sinon","IconSettings","SplitViewListbox","SORT_OPTIONS","use","listOptions","id","label","topRightText","bottomLeftText","bottomRightText","describe","component","WrappedComponent","props","mountComponent","options","unread","labels","header","assistiveText","sort","sortedBy","descending","ascending","unreadItem","sortDirection","DOWN","events","onSort","spy","onSelect","event","selectedItems","setProps","selection","beforeEach","it","find","at","prop","to","not","contain","have","length","equal"],"mappings":"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","sourcesContent":["import React from 'react';\nimport chai, { expect } from 'chai';\nimport chaiEnzyme from 'chai-enzyme';\nimport { mount } from 'enzyme';\nimport sinon from 'sinon';\n\nimport IconSettings from '../../../components/icon-settings';\nimport SplitViewListbox, {\n\tSORT_OPTIONS,\n} from '../../../components/split-view/listbox';\n\nchai.use(chaiEnzyme());\n\nconst listOptions = [\n\t{\n\t\tid: 'option1',\n\t\tlabel: 'Riley Shultz',\n\t\ttopRightText: '99',\n\t\tbottomLeftText: 'Biotech, Inc.',\n\t\tbottomRightText: 'Nurturing',\n\t},\n\t{\n\t\tid: 'option2',\n\t\tlabel: 'Jason A. - VP of Sales',\n\t\ttopRightText: '92',\n\t\tbottomLeftText: 'Case Management Solutions',\n\t\tbottomRightText: 'Contacted',\n\t},\n\t{\n\t\tid: 'option3',\n\t\tlabel: 'Josh Smith',\n\t\ttopRightText: '90',\n\t\tbottomLeftText: 'Acme, Inc.',\n\t\tbottomRightText: 'Contacted',\n\t},\n\t{\n\t\tid: 'option4',\n\t\tlabel: 'Bobby Tree',\n\t\ttopRightText: '89',\n\t\tbottomLeftText: 'Salesforce, Inc.',\n\t\tbottomRightText: 'Closing',\n\t},\n];\n\ndescribe('SLDSSplitView - Listbox header', () => {\n\tlet component;\n\n\tconst WrappedComponent = (props) => (\n\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t<SplitViewListbox {...props} />\n\t\t</IconSettings>\n\t);\n\n\tconst mountComponent = (props) => mount(<WrappedComponent {...props} />);\n\n\tconst props = {\n\t\toptions: listOptions,\n\t\tunread: [listOptions[1], listOptions[3]],\n\t\tlabels: {\n\t\t\theader: 'test header',\n\t\t},\n\t\tassistiveText: {\n\t\t\tsort: {\n\t\t\t\tsortedBy: 'test sort by',\n\t\t\t\tdescending: 'test descending',\n\t\t\t\tascending: 'test ascending',\n\t\t\t},\n\t\t\tunreadItem: 'test unread',\n\t\t},\n\t\tsortDirection: SORT_OPTIONS.DOWN,\n\t\tevents: {\n\t\t\tonSort: sinon.spy(),\n\t\t\tonSelect: (event, { selectedItems }) => {\n\t\t\t\tcomponent.setProps({ selection: selectedItems });\n\t\t\t},\n\t\t},\n\t};\n\n\tbeforeEach(() => {\n\t\tcomponent = mountComponent(props);\n\t});\n\n\tit('should have unread', () => {\n\t\texpect(\n\t\t\tcomponent\n\t\t\t\t.find('li')\n\t\t\t\t.at(0)\n\t\t\t\t.prop('className')\n\t\t).to.not.contain('slds-is-unread');\n\t\texpect(\n\t\t\tcomponent\n\t\t\t\t.find('li')\n\t\t\t\t.at(1)\n\t\t\t\t.prop('className')\n\t\t).to.contain('slds-is-unread');\n\t\texpect(\n\t\t\tcomponent\n\t\t\t\t.find('li')\n\t\t\t\t.at(2)\n\t\t\t\t.prop('className')\n\t\t).to.not.contain('slds-is-unread');\n\t\texpect(\n\t\t\tcomponent\n\t\t\t\t.find('li')\n\t\t\t\t.at(3)\n\t\t\t\t.prop('className')\n\t\t).to.contain('slds-is-unread');\n\n\t\texpect(component.find('.slds-indicator_unread')).to.have.length(2);\n\t});\n\n\tit('should have unread assistive text', () => {\n\t\texpect(\n\t\t\tcomponent\n\t\t\t\t.find('.slds-indicator_unread')\n\t\t\t\t.at(0)\n\t\t\t\t.prop('title')\n\t\t).to.equal('test unread');\n\t\texpect(\n\t\t\tcomponent\n\t\t\t\t.find('.slds-indicator_unread')\n\t\t\t\t.at(1)\n\t\t\t\t.prop('title')\n\t\t).to.equal('test unread');\n\t\texpect(\n\t\t\tcomponent\n\t\t\t\t.find('.slds-indicator_unread')\n\t\t\t\t.at(0)\n\t\t\t\t.prop('aria-label')\n\t\t).to.equal('test unread');\n\t\texpect(\n\t\t\tcomponent\n\t\t\t\t.find('.slds-indicator_unread')\n\t\t\t\t.at(1)\n\t\t\t\t.prop('aria-label')\n\t\t).to.equal('test unread');\n\t});\n});\n"],"file":"split-view.listbox.unread.browser-test.js"}