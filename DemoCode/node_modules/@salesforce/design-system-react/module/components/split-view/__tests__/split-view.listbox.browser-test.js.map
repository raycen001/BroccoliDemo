{"version":3,"sources":["../../../../.tmp-es/components/split-view/__tests__/split-view.listbox.browser-test.jsx"],"names":["React","chai","expect","chaiEnzyme","mount","sinon","IconSettings","SplitViewListbox","use","listOptions","id","label","topRightText","bottomLeftText","bottomRightText","describe","component","WrappedComponent","props","mountComponent","expectItemFocused","value","anchors","find","forEach","item","index","get","tabIndex","to","equal","expectItemSelected","itemIndex","Array","isArray","includes","at","prop","be","true","false","it","options","selection","events","onSelect","spy","simulate","event","selectedItems","setProps","beforeEach","key","ctrlKey","multiple","metaKey","shiftKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport chai, { expect } from 'chai';\nimport chaiEnzyme from 'chai-enzyme';\nimport { mount } from 'enzyme';\nimport sinon from 'sinon';\n\nimport IconSettings from '../../../components/icon-settings';\nimport SplitViewListbox from '../../../components/split-view/listbox';\n\nchai.use(chaiEnzyme());\n\nconst listOptions = [\n\t{\n\t\tid: 'option1',\n\t\tlabel: 'Riley Shultz',\n\t\ttopRightText: '99',\n\t\tbottomLeftText: 'Biotech, Inc.',\n\t\tbottomRightText: 'Nurturing',\n\t},\n\t{\n\t\tid: 'option2',\n\t\tlabel: 'Jason A. - VP of Sales',\n\t\ttopRightText: '92',\n\t\tbottomLeftText: 'Case Management Solutions',\n\t\tbottomRightText: 'Contacted',\n\t},\n\t{\n\t\tid: 'option3',\n\t\tlabel: 'Josh Smith',\n\t\ttopRightText: '90',\n\t\tbottomLeftText: 'Acme, Inc.',\n\t\tbottomRightText: 'Contacted',\n\t},\n\t{\n\t\tid: 'option4',\n\t\tlabel: 'Bobby Tree',\n\t\ttopRightText: '89',\n\t\tbottomLeftText: 'Salesforce, Inc.',\n\t\tbottomRightText: 'Closing',\n\t},\n];\n\ndescribe('SLDSSplitView - Listbox', () => {\n\tlet component;\n\n\tconst WrappedComponent = (props) => (\n\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t<SplitViewListbox {...props} />\n\t\t</IconSettings>\n\t);\n\n\tconst mountComponent = (props) => mount(<WrappedComponent {...props} />);\n\n\tconst expectItemFocused = (value) => {\n\t\tconst anchors = component.find('li > a');\n\n\t\tlistOptions.forEach((item, index) => {\n\t\t\texpect(anchors.get(index).props.tabIndex).to.equal(\n\t\t\t\tindex === value ? 0 : -1\n\t\t\t);\n\t\t});\n\t};\n\n\tconst expectItemSelected = (value) => {\n\t\tconst itemIndex = Array.isArray(value) ? value : [value];\n\n\t\tconst anchors = component.find('li > a');\n\n\t\tlistOptions.forEach((item, index) => {\n\t\t\titemIndex.includes(index)\n\t\t\t\t? expect(anchors.at(index).prop('aria-selected')).to.be.true\n\t\t\t\t: expect(anchors.at(index).prop('aria-selected')).to.be.false;\n\t\t});\n\t};\n\n\tdescribe('When the component is mounted', () => {\n\t\tit('should focus the first selected item', () => {\n\t\t\tcomponent = mountComponent({\n\t\t\t\toptions: listOptions,\n\t\t\t\tselection: [listOptions[1]],\n\t\t\t\tevents: {\n\t\t\t\t\tonSelect: sinon.spy(),\n\t\t\t\t},\n\t\t\t});\n\n\t\t\texpectItemFocused(1);\n\t\t});\n\n\t\tit('should focus the first item when there is no selection', () => {\n\t\t\tcomponent = mountComponent({\n\t\t\t\toptions: listOptions,\n\t\t\t\tevents: {\n\t\t\t\t\tonSelect: sinon.spy(),\n\t\t\t\t},\n\t\t\t});\n\n\t\t\texpectItemFocused(0);\n\t\t});\n\t});\n\n\tdescribe('When a list item is selected', () => {\n\t\tdescribe('and single select only', () => {\n\t\t\tit('should focus the item that is clicked', () => {\n\t\t\t\tcomponent = mountComponent({\n\t\t\t\t\toptions: listOptions,\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tonSelect: () => {},\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\tcomponent\n\t\t\t\t\t.find('li > a')\n\t\t\t\t\t.at(2)\n\t\t\t\t\t.simulate('click');\n\n\t\t\t\texpectItemFocused(2);\n\t\t\t});\n\n\t\t\tit('should select the item that is clicked', () => {\n\t\t\t\tcomponent = mountComponent({\n\t\t\t\t\toptions: listOptions,\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tonSelect: (event, { selectedItems }) => {\n\t\t\t\t\t\t\tcomponent.setProps({ selection: selectedItems });\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\t\tcomponent\n\t\t\t\t\t.find('li > a')\n\t\t\t\t\t.at(2)\n\t\t\t\t\t.simulate('click');\n\n\t\t\t\texpectItemSelected(2);\n\t\t\t});\n\n\t\t\tdescribe('and using the keyboard', () => {\n\t\t\t\tbeforeEach(() => {\n\t\t\t\t\tcomponent = mountComponent({\n\t\t\t\t\t\toptions: listOptions,\n\t\t\t\t\t\tselection: [listOptions[1]],\n\t\t\t\t\t\tevents: {\n\t\t\t\t\t\t\tonSelect: (event, { selectedItems }) => {\n\t\t\t\t\t\t\t\tcomponent.setProps({ selection: selectedItems });\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tdescribe('and \"ctrl a\" keyed', () => {\n\t\t\t\t\tit('should not select all list items', () => {\n\t\t\t\t\t\tcomponent\n\t\t\t\t\t\t\t.find('ul')\n\t\t\t\t\t\t\t.simulate('keyDown', { key: 'a', ctrlKey: true });\n\n\t\t\t\t\t\texpectItemSelected([1]);\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tit('and arrow key up it should focus the previous item', () => {\n\t\t\t\t\tcomponent.find('ul').simulate('keyDown', { key: 'ArrowUp' });\n\t\t\t\t\texpectItemFocused(0);\n\t\t\t\t});\n\n\t\t\t\tit('and arrow key down it should focus the next item', () => {\n\t\t\t\t\tcomponent.find('ul').simulate('keyDown', { key: 'ArrowDown' });\n\t\t\t\t\texpectItemFocused(2);\n\t\t\t\t});\n\n\t\t\t\tit('and arrow key up followed by click/enter should select the previous item', () => {\n\t\t\t\t\tcomponent.find('ul').simulate('keyDown', { key: 'ArrowUp' });\n\t\t\t\t\tcomponent\n\t\t\t\t\t\t.find('ul li a')\n\t\t\t\t\t\t.at(0)\n\t\t\t\t\t\t.simulate('click');\n\t\t\t\t\texpectItemSelected(0);\n\t\t\t\t});\n\n\t\t\t\tit('and arrow key down followed by click/enter should select the next item', () => {\n\t\t\t\t\tcomponent.find('ul').simulate('keyDown', { key: 'ArrowDown' });\n\t\t\t\t\tcomponent\n\t\t\t\t\t\t.find('ul li a')\n\t\t\t\t\t\t.at(2)\n\t\t\t\t\t\t.simulate('click');\n\t\t\t\t\texpectItemSelected(2);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tdescribe('and multiple select enabled', () => {\n\t\t\tbeforeEach(() => {\n\t\t\t\tcomponent = mountComponent({\n\t\t\t\t\tmultiple: true,\n\t\t\t\t\toptions: listOptions,\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tonSelect: (event, { selectedItems }) => {\n\t\t\t\t\t\t\tcomponent.setProps({ selection: selectedItems });\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tit('should select multiple items when clicked and the metaKey is pressed', () => {\n\t\t\t\tconst anchors = component.find('li > a');\n\n\t\t\t\tanchors.at(2).simulate('click');\n\t\t\t\tanchors.at(3).simulate('click', { metaKey: true });\n\n\t\t\t\texpectItemSelected([2, 3]);\n\t\t\t});\n\n\t\t\tit('should select multiple items when clicked and the shiftKey is pressed', () => {\n\t\t\t\tconst anchors = component.find('li > a');\n\n\t\t\t\tanchors.at(1).simulate('click');\n\t\t\t\tanchors.at(3).simulate('click', { shiftKey: true });\n\n\t\t\t\texpectItemSelected([1, 2, 3]);\n\t\t\t});\n\n\t\t\tdescribe('and \"ctrl a\" keyed', () => {\n\t\t\t\tit('should select all list items', () => {\n\t\t\t\t\tcomponent.find('ul').simulate('keyDown', { key: 'a', ctrlKey: true });\n\n\t\t\t\t\texpectItemSelected([0, 1, 2, 3]);\n\t\t\t\t});\n\n\t\t\t\tit('should de-select all list items when all the list items are already selected', () => {\n\t\t\t\t\tcomponent.setProps({ selection: listOptions });\n\t\t\t\t\tcomponent.find('ul').simulate('keyDown', { key: 'a', ctrlKey: true });\n\n\t\t\t\t\texpectItemSelected([]);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n});\n"],"file":"split-view.listbox.browser-test.js"}