{"version":3,"sources":["../../../../.tmp-es/components/radio-button-group/__tests__/radio-button-group.browser-test.jsx"],"names":["React","PropTypes","chai","expect","chaiEnzyme","mount","createMountNode","destroyMountNode","RadioButtonGroup","Radio","use","RadioButtonGroupExample","props","state","checked","days","labels","event","setState","target","value","disabled","required","map","day","label","Component","propTypes","shape","error","string","bool","defaultProps","describe","mountNode","wrapper","beforeEach","context","afterEach","it","attachTo","radios","find","to","have","lengthOf","forEach","radioWrapper","index","radio","get","equal","legend","text","be","true","abbr","false","simulate","prop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport chai, { expect } from 'chai';\nimport chaiEnzyme from 'chai-enzyme';\nimport { mount } from 'enzyme';\n\n/* Enzyme Helpers that can mount and unmount React component instances to\n * the DOM and set `this.wrapper` and `this.dom` within Mocha's `this`\n * context [full source here](tests/enzyme-helpers.js). `this` can\n * only be referenced if inside `function () {}`.\n */\nimport {\n\tcreateMountNode,\n\tdestroyMountNode,\n} from '../../../tests/enzyme-helpers';\n\nimport RadioButtonGroup from '../../radio-button-group';\nimport Radio from '../../radio-button-group/radio';\n\nchai.use(chaiEnzyme());\n\n/* Re-usable demo component.\n */\nclass RadioButtonGroupExample extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { checked: 'Tue' };\n\t}\n\n\trender() {\n\t\tconst days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'];\n\t\treturn (\n\t\t\t<RadioButtonGroup\n\t\t\t\tlabels={this.props.labels}\n\t\t\t\tonChange={(event) => this.setState({ checked: event.target.value })}\n\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\trequired={this.props.required}\n\t\t\t>\n\t\t\t\t{days.map((day) => (\n\t\t\t\t\t<Radio\n\t\t\t\t\t\tkey={day}\n\t\t\t\t\t\tlabels={{ label: day }}\n\t\t\t\t\t\tvalue={day}\n\t\t\t\t\t\tchecked={this.state.checked === day}\n\t\t\t\t\t\tvariant=\"button-group\"\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</RadioButtonGroup>\n\t\t);\n\t}\n}\n\nRadioButtonGroupExample.propTypes = {\n\tlabels: PropTypes.shape({\n\t\terror: PropTypes.string,\n\t\tlabel: PropTypes.string,\n\t}),\n\tdisabled: PropTypes.bool,\n\trequired: PropTypes.bool,\n};\n\nRadioButtonGroupExample.defaultProps = {\n\tlabels: { label: 'Day of week' },\n};\n\n/* RadioButtonGroup rendering tests\n */\ndescribe('RadioButtonGroup', function() {\n\tlet mountNode;\n\tlet wrapper;\n\n\tbeforeEach(() => {\n\t\tmountNode = createMountNode({ context: this });\n\t});\n\n\tafterEach(() => {\n\t\tdestroyMountNode({ wrapper, mountNode });\n\t});\n\n\tit('renders a radio button group', () => {\n\t\twrapper = mount(<RadioButtonGroupExample />, { attachTo: mountNode });\n\t\tconst radios = wrapper.find(Radio);\n\t\texpect(radios).to.have.lengthOf(5, 'there are five radio inputs');\n\t\tradios.forEach((radioWrapper, index) => {\n\t\t\tconst radio = radios.get(index);\n\t\t\texpect(radio.props.checked).to.equal(\n\t\t\t\tradio.props.labels.label === 'Tue',\n\t\t\t\t'the second radio input is checked'\n\t\t\t);\n\t\t});\n\t\tconst legend = wrapper.find('legend');\n\t\texpect(legend.text()).to.equal('Day of week', 'there is a label');\n\t});\n\n\tit('renders a disabled state', () => {\n\t\twrapper = mount(<RadioButtonGroupExample disabled />, {\n\t\t\tattachTo: mountNode,\n\t\t});\n\t\tconst radios = wrapper.find(Radio);\n\t\tradios.forEach((radioWrapper, index) => {\n\t\t\tconst radio = radios.get(index);\n\t\t\texpect(radio.props.disabled, 'all radio inputs are disabled').to.be.true;\n\t\t});\n\t});\n\n\tit('renders a required indicator', () => {\n\t\twrapper = mount(<RadioButtonGroupExample required />, {\n\t\t\tattachTo: mountNode,\n\t\t});\n\t\tconst abbr = wrapper.find('abbr');\n\t\texpect(abbr.text()).to.equal('*Required ', 'there is a required indicator');\n\t});\n\n\tit('triggers a change callback', () => {\n\t\twrapper = mount(<RadioButtonGroupExample />, { attachTo: mountNode });\n\t\tlet radio = wrapper.find({ value: 'Mon' }).find('input');\n\t\texpect(radio.props().checked).to.be.false;\n\t\tradio.simulate('change', { event: { target: 'Mon' } });\n\t\tradio = wrapper.find({ value: 'Mon' }).find('input');\n\t\texpect(radio).to.have.prop('checked', true);\n\t});\n});\n"],"file":"radio-button-group.browser-test.js"}