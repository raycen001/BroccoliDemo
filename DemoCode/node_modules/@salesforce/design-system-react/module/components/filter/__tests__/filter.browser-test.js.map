{"version":3,"sources":["../../../../.tmp-es/components/filter/__tests__/filter.browser-test.jsx"],"names":["React","PropTypes","chai","expect","chaiEnzyme","mount","createMountNode","destroyMountNode","Popover","Button","Filter","IconSettings","use","defaultProps","id","body","heading","DemoComponent","props","Component","isOpen","bool","describe","describeFunction","mountNode","wrapper","beforeEach","context","afterEach","it","demoPopover","attachTo","find","to","exist","done","onFilterClicked","onClick","setTimeout","filterButton","simulate","be","true"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport chai, { expect } from 'chai';\nimport chaiEnzyme from 'chai-enzyme';\nimport { mount } from 'enzyme';\n\n/* Enzyme Helpers that can mount and unmount React component instances to\n * the DOM and set `this.wrapper` and `this.dom` within Mocha's `this`\n * context [full source here](tests/enzyme-helpers.js). `this` can\n * only be referenced if inside `function () {}`.\n */\nimport {\n\tcreateMountNode,\n\tdestroyMountNode,\n} from '../../../tests/enzyme-helpers';\n\n// Import your internal dependencies (for example):\nimport Popover from '../../popover';\nimport Button from '../../button';\nimport Filter from '../../filter';\nimport IconSettings from '../../icon-settings';\n\n/* Set Chai to use chaiEnzyme for enzyme compatible assertions:\n * https://github.com/producthunt/chai-enzyme\n */\nchai.use(chaiEnzyme());\n\nconst defaultProps = {\n\tid: 'sample-popover',\n\tbody: <span id=\"sample-body\">This is the body</span>,\n\theading: <span id=\"sample-heading\">This is the heading</span>,\n};\n\n/* A re-usable demo component fixture outside of `describe` sections\n * can accept props within each test and be unmounted after each tests.\n * This wrapping component will be similar to your wrapping component\n * you will create in the React Storybook for manual testing.\n */\nclass DemoComponent extends React.Component {\n\tstatic displayName = 'PopoverDemoComponent';\n\n\tstatic propTypes = {\n\t\tisOpen: PropTypes.bool,\n\t};\n\n\tstatic defaultProps = defaultProps;\n\n\tstate = {};\n\n\trender() {\n\t\treturn (\n\t\t\t<Popover {...this.props}>\n\t\t\t\t<Button label=\"Trigger Popover\" />\n\t\t\t</Popover>\n\t\t);\n\t}\n}\n\n/* All tests for component being tested should be wrapped in a root `describe`,\n * which should be named after the component being tested.\n * When read aloud, the cumulative `describe` and `it` names should form a coherent\n * sentence, eg \"Date Picker default structure and css is present with expected\n * attributes set\". If you are having trouble constructing a cumulative short\n * sentence, this may be an indicator that your test is poorly structured.\n * String provided as first parameter names the `describe` section. Limit to nouns\n * as much as possible/appropriate.`\n */\ndescribe('SLDSFilter', function describeFunction() {\n\tlet mountNode;\n\tlet wrapper;\n\n\t// BASIC STRUCTURE\n\n\tdescribe('Add custom props to Filter Popover', function() {\n\t\tbeforeEach(() => {\n\t\t\tmountNode = createMountNode({ context: this });\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tdestroyMountNode({ wrapper, mountNode });\n\t\t});\n\n\t\tit('Filter could take popover as a prop and use the props of popover to render, verifies the custom popover className', () => {\n\t\t\tconst demoPopover = (\n\t\t\t\t<DemoComponent\n\t\t\t\t\tclassName=\"custom-filter-popover\"\n\t\t\t\t\tisOpen\n\t\t\t\t\tposition=\"absolute\"\n\t\t\t\t/>\n\t\t\t);\n\t\t\twrapper = mount(\n\t\t\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t\t\t<Filter\n\t\t\t\t\t\tproperty=\"Show Me\"\n\t\t\t\t\t\tpredicate=\"All Opportunities\"\n\t\t\t\t\t\tpopover={demoPopover}\n\t\t\t\t\t/>\n\t\t\t\t</IconSettings>,\n\t\t\t\t{ attachTo: mountNode }\n\t\t\t);\n\n\t\t\texpect(wrapper.find('.custom-filter-popover')).to.exist;\n\t\t});\n\t});\n\n\tdescribe('On click handler when clicking on filter', function() {\n\t\tbeforeEach(() => {\n\t\t\tmountNode = createMountNode({ context: this });\n\t\t});\n\n\t\tafterEach(() => {\n\t\t\tdestroyMountNode({ wrapper, mountNode });\n\t\t});\n\n\t\tit('Filter could take onClick prop and trigger this callback during filter click', (done) => {\n\t\t\tconst demoPopover = <DemoComponent className=\"custom-filter-popover\" />;\n\n\t\t\tlet onFilterClicked = false;\n\n\t\t\tconst onClick = () => {\n\t\t\t\tonFilterClicked = true;\n\t\t\t};\n\n\t\t\twrapper = mount(\n\t\t\t\t<IconSettings iconPath=\"/assets/icons\">\n\t\t\t\t\t<Filter\n\t\t\t\t\t\tproperty=\"Show Me\"\n\t\t\t\t\t\tpredicate=\"All Opportunities\"\n\t\t\t\t\t\tpopover={demoPopover}\n\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t/>\n\t\t\t\t</IconSettings>,\n\t\t\t\t{ attachTo: mountNode }\n\t\t\t);\n\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst filterButton = wrapper.find(\n\t\t\t\t\t'.slds-filters__item .slds-button_reset'\n\t\t\t\t);\n\t\t\t\tfilterButton.simulate('click', {});\n\t\t\t\texpect(onFilterClicked).to.be.true;\n\t\t\t\tdone();\n\t\t\t}, 0);\n\t\t});\n\t});\n});\n"],"file":"filter.browser-test.js"}