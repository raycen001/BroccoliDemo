{"version":3,"sources":["../../../.tmp-es/components/alert/index.jsx"],"names":["React","PropTypes","assign","classNames","Button","Icon","checkProps","componentDoc","ALERT","DOMElementFocus","propTypes","assistiveText","shape","closeButton","oneOfType","string","node","className","array","object","dismissible","bool","icon","labels","heading","headingLink","onClickHeadingLink","func","onRequestClose","style","variant","oneOf","isRequired","defaultProps","Alert","props","component","state","isInitialRender","storeActiveElement","focus","setState","returnFocusToStoredElement","content","onDismiss","assistiveTextVariant","info","warning","error","offline","defaultIcons","iconName","iconCategory","clonedIcon","cloneElement","containerClassName","inverse","size","saveButtonRef","Component","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AAEA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,SAASC,KAAT,QAAsB,2BAAtB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AAEA,IAAMC,SAAS,GAAG;AACjB;;;;;;AAMAC,EAAAA,aAAa,EAAEV,SAAS,CAACW,KAAV,CAAgB;AAC9BC,IAAAA,WAAW,EAAEZ,SAAS,CAACa,SAAV,CAAoB,CAACb,SAAS,CAACc,MAAX,EAAmBd,SAAS,CAACe,IAA7B,CAApB;AADiB,GAAhB,CAPE;;AAUjB;;;;AAIAC,EAAAA,SAAS,EAAEhB,SAAS,CAACa,SAAV,CAAoB,CAC9Bb,SAAS,CAACiB,KADoB,EAE9BjB,SAAS,CAACkB,MAFoB,EAG9BlB,SAAS,CAACc,MAHoB,CAApB,CAdM;;AAmBjB;;;;AAIAK,EAAAA,WAAW,EAAEnB,SAAS,CAACoB,IAvBN;;AAwBjB;;;;;;;;;AASAC,EAAAA,IAAI,EAAErB,SAAS,CAACe,IAjCC;;AAkCjB;;;;;;;;AAQAO,EAAAA,MAAM,EAAEtB,SAAS,CAACW,KAAV,CAAgB;AACvBY,IAAAA,OAAO,EAAEvB,SAAS,CAACa,SAAV,CAAoB,CAACb,SAAS,CAACc,MAAX,EAAmBd,SAAS,CAACe,IAA7B,CAApB,CADc;AAEvBS,IAAAA,WAAW,EAAExB,SAAS,CAACa,SAAV,CAAoB,CAACb,SAAS,CAACc,MAAX,EAAmBd,SAAS,CAACe,IAA7B,CAApB;AAFU,GAAhB,CA1CS;;AA8CjB;;;AAGAU,EAAAA,kBAAkB,EAAEzB,SAAS,CAAC0B,IAjDb;;AAkDjB;;;AAGAC,EAAAA,cAAc,EAAE3B,SAAS,CAAC0B,IArDT;;AAsDjB;;;AAGAE,EAAAA,KAAK,EAAE5B,SAAS,CAACkB,MAzDA;;AA0DjB;;;AAGAW,EAAAA,OAAO,EAAE7B,SAAS,CAAC8B,KAAV,CAAgB,CAAC,OAAD,EAAU,MAAV,EAAkB,SAAlB,EAA6B,SAA7B,CAAhB,EAAyDC;AA7DjD,CAAlB;AAgEA,IAAMC,YAAY,GAAG;AACpBtB,EAAAA,aAAa,EAAE;AACdE,IAAAA,WAAW,EAAE;AADC,GADK;AAIpBU,EAAAA,MAAM,EAAE,EAJY;AAKpBO,EAAAA,OAAO,EAAE;AALW,CAArB;AAQA;;;;IAIMI,K;;;;;AACL,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,+EAAMA,KAAN;;AADkB,oEAcH,UAACC,SAAD,EAAe;AAC9B,YAAKvB,WAAL,GAAmBuB,SAAnB;;AACA,UAAI,MAAKC,KAAL,CAAWC,eAAf,EAAgC;AAC/B7B,QAAAA,eAAe,CAAC8B,kBAAhB;;AACA,YAAI,MAAK1B,WAAT,EAAsB;AACrB,gBAAKA,WAAL,CAAiB2B,KAAjB;AACA;;AACD,cAAKC,QAAL,CAAc;AAAEH,UAAAA,eAAe,EAAE;AAAnB,SAAd;AACA;AACD,KAvBkB;;AAElB,UAAKD,KAAL,GAAa;AACZC,MAAAA,eAAe,EAAE;AADL,KAAb,CAFkB,CAMlB;;AACAhC,IAAAA,UAAU,CAACE,KAAD,EAAQ2B,KAAR,EAAe5B,YAAf,CAAV;AAPkB;AAQlB;;;;2CAEsB;AACtBE,MAAAA,eAAe,CAACiC,0BAAhB;AACA;;;6BAaQ;AACR;AACA,UAAM/B,aAAa,GAAGT,MAAM,CAC3B,EAD2B,EAE3B+B,YAAY,CAACtB,aAFc,EAG3B,KAAKwB,KAAL,CAAWxB,aAHgB,CAA5B;AAKA,UAAMY,MAAM,GAAGrB,MAAM,CAAC,EAAD,EAAK+B,YAAY,CAACV,MAAlB,EAA0B,KAAKY,KAAL,CAAWZ,MAArC,CAArB,CAPQ,CASR;;AACA,UAAMC,OAAO,GAAGD,MAAM,CAACC,OAAP,IAAkB,KAAKW,KAAL,CAAWQ,OAA7C,CAVQ,CAU8C;;AACtD,UAAMf,cAAc,GAAG,KAAKO,KAAL,CAAWP,cAAX,IAA6B,KAAKO,KAAL,CAAWS,SAA/D,CAXQ,CAWkE;;AAE1E,UAAMC,oBAAoB,GAAG;AAC5BC,QAAAA,IAAI,EAAE,MADsB;AAE5BC,QAAAA,OAAO,EAAE,SAFmB;AAG5BC,QAAAA,KAAK,EAAE,OAHqB;AAI5BC,QAAAA,OAAO,EAAE;AAJmB,OAA7B;AAOA,UAAMC,YAAY,GAAG;AACpBJ,QAAAA,IAAI;AAAA;AAAE,4BAAC,IAAD;AAAM,UAAA,QAAQ,EAAC,SAAf;AAAyB,UAAA,IAAI,EAAC;AAA9B,UADc;AAEpBG,QAAAA,OAAO;AAAA;AAAE,4BAAC,IAAD;AAAM,UAAA,QAAQ,EAAC,SAAf;AAAyB,UAAA,IAAI,EAAC;AAA9B,UAFW;AAGpBF,QAAAA,OAAO;AAAA;AAAE,4BAAC,IAAD;AAAM,UAAA,QAAQ,EAAC,SAAf;AAAyB,UAAA,IAAI,EAAC;AAA9B,UAHW;AAIpBC,QAAAA,KAAK;AAAA;AAAE,4BAAC,IAAD;AAAM,UAAA,QAAQ,EAAC,SAAf;AAAyB,UAAA,IAAI,EAAC;AAA9B;AAJa,OAArB;AAOA,UAAI1B,IAAI,GAAG,KAAKa,KAAL,CAAWb,IAAX,GACR,KAAKa,KAAL,CAAWb,IADH,GAER4B,YAAY,CAAC,KAAKf,KAAL,CAAWL,OAAZ,CAFf,CA3BQ,CA+BR;;AACA,UAAI,KAAKK,KAAL,CAAWgB,QAAX,IAAuB,KAAKhB,KAAL,CAAWiB,YAAtC,EAAoD;AACnD;AACA9B,QAAAA,IAAI;AAAA;AACH,4BAAC,IAAD;AAAM,UAAA,QAAQ,EAAE,KAAKa,KAAL,CAAWiB,YAA3B;AAAyC,UAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWgB;AAA1D,UADD;AAGA;;AAED,UAAME,UAAU;AAAA;AAAGrD,MAAAA,KAAK,CAACsD,YAAN,CAAmBhC,IAAnB,EAAyB;AAC3CiC,QAAAA,kBAAkB,EAAE,sBADuB;AAE3CC,QAAAA,OAAO,EAAE,IAFkC;AAG3CC,QAAAA,IAAI,EAAE;AAHqC,OAAzB,CAAnB;AAMA;;AACA;AAAA;AACC;AACC,UAAA,SAAS,EAAEtD,UAAU,CACpB,wDADoB,EAEpB;AACC,+BAAmB,KAAKgC,KAAL,CAAWL,OAAX,KAAuB,MAD3C;AAEC,kCAAsB,KAAKK,KAAL,CAAWL,OAAX,KAAuB,SAF9C;AAGC,gCAAoB,KAAKK,KAAL,CAAWL,OAAX,KAAuB,OAH5C;AAIC,kCAAsB,KAAKK,KAAL,CAAWL,OAAX,KAAuB;AAJ9C,WAFoB,EAQpB,KAAKK,KAAL,CAAWlB,SARS,CADtB;AAWC,UAAA,IAAI,EAAC,OAXN;AAYC,UAAA,KAAK,EAAE,KAAKkB,KAAL,CAAWN;AAZnB;AAAA;AAcC;AAAM,UAAA,SAAS,EAAC;AAAhB,WACEgB,oBAAoB,CAAC,KAAKV,KAAL,CAAWL,OAAZ,CADtB,CAdD,EAiBEuB,UAjBF;AAAA;AAkBC,wCACE7B,OADF,EACW,GADX,EAEED,MAAM,CAACE,WAAP;AAAA;AACA;AACC,UAAA,OAAO,EAAE,KAAKU,KAAL,CAAWT,kBADrB;AAEC,UAAA,IAAI,EAAC;AAFN,WAIEH,MAAM,CAACE,WAJT,CADA,GAOG,IATL,CAlBD,EA6BE,KAAKU,KAAL,CAAWf,WAAX;AAAA;AACA,4BAAC,MAAD;AACC,UAAA,aAAa,EAAE;AAAEE,YAAAA,IAAI,EAAEX,aAAa,CAACE;AAAtB,WADhB;AAEC,UAAA,SAAS,EAAE,KAAK6C,aAFjB;AAGC,UAAA,SAAS,EAAC,oBAHX;AAIC,UAAA,YAAY,EAAC,SAJd;AAKC,UAAA,QAAQ,EAAC,OALV;AAMC,UAAA,QAAQ,EAAC,QANV;AAOC,UAAA,OAAO,MAPR;AAQC,UAAA,OAAO,EAAE9B,cARV;AASC,UAAA,KAAK,EAAEjB,aAAa,CAACE,WATtB;AAUC,UAAA,OAAO,EAAC;AAVT,UADA,GAaG,IA1CL;AADD;AA8CA;;;;EAtHkBb,KAAK,CAAC2D,S;;AAyH1BzB,KAAK,CAACD,YAAN,GAAqBA,YAArB;AACAC,KAAK,CAAC0B,WAAN,GAAoBpD,KAApB;AACA0B,KAAK,CAACxB,SAAN,GAAkBA,SAAlB;AAEA,eAAewB,KAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Alert Component\n\n// Implements the [Alert design pattern](https://lightningdesignsystem.com/components/alert/) in React.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport assign from 'lodash.assign';\nimport classNames from '../../utilities/class-names';\nimport Button from '../button';\nimport Icon from '../icon';\nimport checkProps from './check-props';\nimport componentDoc from './component.json';\nimport { ALERT } from '../../utilities/constants';\nimport DOMElementFocus from '../../utilities/dom-element-focus';\n\nconst propTypes = {\n\t/**\n\t * **Assistive text for accessibility**\n\t * This object is merged with the default props object on every render.\n\t * * `closeButton`: This is a visually hidden label for the close button.\n\t * _Tested with snapshot testing._\n\t */\n\tassistiveText: PropTypes.shape({\n\t\tcloseButton: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t}),\n\t/**\n\t * CSS classes to be added to tag with `.slds-notify_alert`. Uses `classNames` [API](https://github.com/JedWatson/classnames).\n\t * _Tested with snapshot testing._\n\t */\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t\tPropTypes.string,\n\t]),\n\t/**\n\t * Allows user to click a close button. Banners should be dismissible only if they communicate future impact to the system,\n\t * _Tested with snapshot testing._\n\t */\n\tdismissible: PropTypes.bool,\n\t/**\n\t * Icon of type `~/components/icon`. This icon will be cloned and additional props appended. The default icons are:\n\t * * info variant: `utility:info`\n\t * * error variant: `utility:error`\n\t * * offline variant: `utility:offline`\n\t * * warning variant: `utility:warning`\n\t *\n\t * _Tested with snapshot testing._\n\t */\n\ticon: PropTypes.node,\n\t/**\n\t * **Text labels for internationalization**\n\t * This object is merged with the default props object on every render.\n\t * * `heading`: text within heading tag\n\t * * `headingLink`: Text of link that triggers `onClickHeadingLink`. Inline links should pass a keyed array of React components into `labels.heading`.\n\t *\n\t * _Tested with snapshot testing._\n\t */\n\tlabels: PropTypes.shape({\n\t\theading: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t\theadingLink: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\t}),\n\t/**\n\t * Triggered by link. _Tested with Mocha testing._\n\t */\n\tonClickHeadingLink: PropTypes.func,\n\t/**\n\t * Triggered by close button. This is a controlled component. _Tested with Mocha testing._\n\t */\n\tonRequestClose: PropTypes.func,\n\t/**\n\t * Custom styles to be passed to the component. _Tested with Mocha testing._\n\t */\n\tstyle: PropTypes.object,\n\t/**\n\t * The type of alert. _Tested with snapshot testing._\n\t */\n\tvariant: PropTypes.oneOf(['error', 'info', 'offline', 'warning']).isRequired,\n};\n\nconst defaultProps = {\n\tassistiveText: {\n\t\tcloseButton: 'Close',\n\t},\n\tlabels: {},\n\tvariant: 'info',\n};\n\n/**\n * Alert banners communicate a state that affects the entire system, not just a feature or page. It persists over a session and appears without the user initiating the action. View [banner guidelines](https://www.lightningdesignsystem.com/guidelines/messaging/components/banners/).\n */\n\nclass Alert extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisInitialRender: true,\n\t\t};\n\n\t\t// `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\t\tcheckProps(ALERT, props, componentDoc);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tDOMElementFocus.returnFocusToStoredElement();\n\t}\n\n\tsaveButtonRef = (component) => {\n\t\tthis.closeButton = component;\n\t\tif (this.state.isInitialRender) {\n\t\t\tDOMElementFocus.storeActiveElement();\n\t\t\tif (this.closeButton) {\n\t\t\t\tthis.closeButton.focus();\n\t\t\t}\n\t\t\tthis.setState({ isInitialRender: false });\n\t\t}\n\t};\n\n\trender() {\n\t\t// Merge objects of strings with their default object\n\t\tconst assistiveText = assign(\n\t\t\t{},\n\t\t\tdefaultProps.assistiveText,\n\t\t\tthis.props.assistiveText\n\t\t);\n\t\tconst labels = assign({}, defaultProps.labels, this.props.labels);\n\n\t\t// BACKWARD COMPATIBILITY WITH NOTIFICATION\n\t\tconst heading = labels.heading || this.props.content; // eslint-disable-line react/prop-types\n\t\tconst onRequestClose = this.props.onRequestClose || this.props.onDismiss; // eslint-disable-line react/prop-types\n\n\t\tconst assistiveTextVariant = {\n\t\t\tinfo: 'info',\n\t\t\twarning: 'warning',\n\t\t\terror: 'error',\n\t\t\toffline: 'offline',\n\t\t};\n\n\t\tconst defaultIcons = {\n\t\t\tinfo: <Icon category=\"utility\" name=\"info\" />,\n\t\t\toffline: <Icon category=\"utility\" name=\"offline\" />,\n\t\t\twarning: <Icon category=\"utility\" name=\"warning\" />,\n\t\t\terror: <Icon category=\"utility\" name=\"error\" />,\n\t\t};\n\n\t\tlet icon = this.props.icon\n\t\t\t? this.props.icon\n\t\t\t: defaultIcons[this.props.variant];\n\n\t\t// BACKWARD COMPATIBILITY WITH NOTIFICATION\n\t\tif (this.props.iconName && this.props.iconCategory) {\n\t\t\t// eslint-disable-line react/prop-types\n\t\t\ticon = (\n\t\t\t\t<Icon category={this.props.iconCategory} name={this.props.iconName} />\n\t\t\t);\n\t\t}\n\n\t\tconst clonedIcon = React.cloneElement(icon, {\n\t\t\tcontainerClassName: 'slds-m-right_x-small',\n\t\t\tinverse: true,\n\t\t\tsize: 'x-small',\n\t\t});\n\n\t\t/* eslint-disable no-script-url */\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={classNames(\n\t\t\t\t\t'slds-notify slds-notify_alert slds-theme_alert-texture',\n\t\t\t\t\t{\n\t\t\t\t\t\t'slds-theme_info': this.props.variant === 'info',\n\t\t\t\t\t\t'slds-theme_warning': this.props.variant === 'warning',\n\t\t\t\t\t\t'slds-theme_error': this.props.variant === 'error',\n\t\t\t\t\t\t'slds-theme_offline': this.props.variant === 'offline',\n\t\t\t\t\t},\n\t\t\t\t\tthis.props.className\n\t\t\t\t)}\n\t\t\t\trole=\"alert\"\n\t\t\t\tstyle={this.props.style}\n\t\t\t>\n\t\t\t\t<span className=\"slds-assistive-text\">\n\t\t\t\t\t{assistiveTextVariant[this.props.variant]}\n\t\t\t\t</span>\n\t\t\t\t{clonedIcon}\n\t\t\t\t<h2>\n\t\t\t\t\t{heading}{' '}\n\t\t\t\t\t{labels.headingLink ? (\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tonClick={this.props.onClickHeadingLink}\n\t\t\t\t\t\t\thref=\"javascript:void(0);\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{labels.headingLink}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t) : null}\n\t\t\t\t</h2>\n\t\t\t\t{this.props.dismissible ? (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tassistiveText={{ icon: assistiveText.closeButton }}\n\t\t\t\t\t\tbuttonRef={this.saveButtonRef}\n\t\t\t\t\t\tclassName=\"slds-notify__close\"\n\t\t\t\t\t\ticonCategory=\"utility\"\n\t\t\t\t\t\ticonName=\"close\"\n\t\t\t\t\t\ticonSize=\"medium\"\n\t\t\t\t\t\tinverse\n\t\t\t\t\t\tonClick={onRequestClose}\n\t\t\t\t\t\ttitle={assistiveText.closeButton}\n\t\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nAlert.defaultProps = defaultProps;\nAlert.displayName = ALERT;\nAlert.propTypes = propTypes;\n\nexport default Alert;\n"],"file":"index.js"}