{"version":3,"sources":["../../../.tmp-es/components/time-picker/index.jsx"],"names":["React","PropTypes","isDate","checkProps","InputIcon","MenuDropdown","TimepickerDropdownTrigger","TIME_PICKER","componentDoc","getOptions","props","baseDate","Date","options","setHours","setMinutes","setSeconds","setMilliseconds","curDate","getDate","formatted","formatter","push","label","value","getMinutes","stepInMinutes","Timepicker","strValue","newDate","parser","isNaN","getTime","date","setState","onDateChange","val","handleChange","event","target","parsedDate","nextProps","currentTime","nextTime","constrainToScrollParent","disabled","inheritTargetWidth","listItemRenderer","maxHeight","overflowX","minWidth","menuPosition","handleSelect","state","handleInputChange","placeholder","required","Component","bool","func","string","oneOf","number","instanceOf","toLocaleTimeString","navigator","language","hour","minute","timeStr","dateStr","toLocaleString","year","month","day"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AAEA;AAEA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,eAAnB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,eAAvB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,yBAAP,MAAsC,4BAAtC,C,CAEA;;AACA,SAASC,WAAT,QAA4B,2BAA5B;AAEA,OAAOC,YAAP,MAAyB,kBAAzB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACjC,MAAMC,QAAQ,GAAG,IAAIC,IAAJ,EAAjB;AACA,MAAMC,OAAO,GAAG,EAAhB;AAEAF,EAAAA,QAAQ,CAACG,QAAT,CAAkB,CAAlB;AACAH,EAAAA,QAAQ,CAACI,UAAT,CAAoB,CAApB;AACAJ,EAAAA,QAAQ,CAACK,UAAT,CAAoB,CAApB;AACAL,EAAAA,QAAQ,CAACM,eAAT,CAAyB,CAAzB;AAEA,MAAMC,OAAO,GAAG,IAAIN,IAAJ,CAASD,QAAT,CAAhB,CATiC,CAWjC;;AACA,SAAOA,QAAQ,CAACQ,OAAT,OAAuBD,OAAO,CAACC,OAAR,EAA9B,EAAiD;AAChD,QAAMC,SAAS,GAAGV,KAAK,CAACW,SAAN,CAAgBH,OAAhB,CAAlB,CADgD,CAGhD;;AACAL,IAAAA,OAAO,CAACS,IAAR,CAAa;AACZC,MAAAA,KAAK,EAAEH,SADK;AAEZI,MAAAA,KAAK,EAAE,IAAIZ,IAAJ,CAASM,OAAT;AAFK,KAAb;AAKAA,IAAAA,OAAO,CAACH,UAAR,CAAmBG,OAAO,CAACO,UAAR,KAAuBf,KAAK,CAACgB,aAAhD;AACA;;AAED,SAAOb,OAAP;AACA,CAzBD;AA2BA;;;;;IAGMc,U;;;;;AACL;AACA;AAGA;AAkGA,sBAAYjB,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,oFAAMA,KAAN,GADkB,CAGlB;;AAHkB,4DANX;AACPc,MAAAA,KAAK,EAAE,MAAKd,KAAL,CAAWc,KADX;AAEPI,MAAAA,QAAQ,EAAE,MAAKlB,KAAL,CAAWkB,QAFd;AAGPf,MAAAA,OAAO,EAAEJ,UAAU,CAAC;AAAEC,QAAAA,KAAK,EAAE,MAAKA;AAAd,OAAD;AAHZ,KAMW;;AAAA,gEAyBP,UAACkB,QAAD,EAAc;AACzB,UAAMC,OAAO,GAAG,MAAKnB,KAAL,CAAWoB,MAAX,CAAkBF,QAAlB,CAAhB;;AAEA,UAAI1B,MAAM,CAAC2B,OAAD,CAAV,EAAqB;AACpB,YAAI,CAACE,KAAK,CAACF,OAAO,CAACG,OAAR,EAAD,CAAV,EAA+B;AAC9B,iBAAOH,OAAP;AACA;AACD;;AAED,aAAO,IAAIjB,IAAJ,EAAP;AACA,KAnCkB;;AAAA,mEAqCJ,UAACqB,IAAD,EAAOL,QAAP,EAAoB;AAClC,YAAKM,QAAL,CAAc;AACbV,QAAAA,KAAK,EAAES,IADM;AAEbL,QAAAA,QAAQ,EAARA;AAFa,OAAd;;AAKA,UAAI,MAAKlB,KAAL,CAAWyB,YAAf,EAA6B;AAC5B,cAAKzB,KAAL,CAAWyB,YAAX,CAAwBF,IAAxB,EAA8BL,QAA9B;AACA;AACD,KA9CkB;;AAAA,mEAgDJ,UAACQ,GAAD,EAAS;AACvB,UAAIA,GAAG,IAAIA,GAAG,CAACZ,KAAf,EAAsB;AACrB,cAAKa,YAAL,CAAkBD,GAAG,CAACZ,KAAtB,EAA6BY,GAAG,CAACb,KAAjC;AACA;AACD,KApDkB;;AAAA,wEAsDC,UAACe,KAAD,EAAW;AAC9B,UAAMV,QAAQ,GAAGU,KAAK,CAACC,MAAN,CAAaf,KAA9B;;AAEA,YAAKU,QAAL,CAAc;AACbN,QAAAA,QAAQ,EAARA;AADa,OAAd;;AAIA,UAAI,MAAKlB,KAAL,CAAWyB,YAAf,EAA6B;AAC5B,YAAMK,UAAU,GAAG,MAAK9B,KAAL,CAAWoB,MAAX,CAAkBF,QAAlB,CAAnB;;AACA,cAAKlB,KAAL,CAAWyB,YAAX,CAAwBK,UAAxB,EAAoCZ,QAApC;AACA;AACD,KAjEkB;;AAIlBzB,IAAAA,UAAU,CAACI,WAAD,EAAcG,KAAd,EAAqBF,YAArB,CAAV;AAJkB;AAKlB,G,CAED;;;;;qDACiCiC,S,EAAW;AAC3C,UAAIA,SAAS,CAACjB,KAAV,IAAmB,KAAKd,KAAL,CAAWc,KAAlC,EAAyC;AACxC,YAAMkB,WAAW,GAAG,KAAKhC,KAAL,CAAWc,KAAX,CAAiBQ,OAAjB,EAApB;AACA,YAAMW,QAAQ,GAAGF,SAAS,CAACjB,KAAV,CAAgBQ,OAAhB,EAAjB;;AAEA,YAAIU,WAAW,KAAKC,QAApB,EAA8B;AAC7B,eAAKT,QAAL,CAAc;AACbV,YAAAA,KAAK,EAAEiB,SAAS,CAACjB,KADJ;AAEbI,YAAAA,QAAQ,EAAE,KAAKlB,KAAL,CAAWW,SAAX,CAAqBoB,SAAS,CAACjB,KAA/B;AAFG,WAAd;AAIA;AACD;;AACD,UAAIiB,SAAS,CAACb,QAAV,KAAuB,KAAKlB,KAAL,CAAWc,KAAtC,EAA6C;AAC5C,aAAKU,QAAL,CAAc;AAAEN,UAAAA,QAAQ,EAAEa,SAAS,CAACb;AAAtB,SAAd;AACA;AACD;;;AA4CD;6BACS;AACR;AAAA;AACC,4BAAC,YAAD;AACC,UAAA,SAAS,EAAE,KADZ;AAEC,UAAA,uBAAuB,EAAE,KAAKlB,KAAL,CAAWkC,uBAFrC;AAGC,UAAA,QAAQ,EAAE,KAAKlC,KAAL,CAAWmC,QAHtB;AAIC,UAAA,kBAAkB,EAAE,KAAKnC,KAAL,CAAWoC,kBAJhC;AAKC,UAAA,KAAK,EAAE,KAAKpC,KAAL,CAAWa,KALnB;AAMC,UAAA,gBAAgB,EAAE,KAAKb,KAAL,CAAWqC,gBAN9B,CAOC;AAPD;AAQC,UAAA,SAAS,EAAE;AACVC,YAAAA,SAAS,EAAE,MADD;AAEVC,YAAAA,SAAS,EAAE,QAFD;AAGVC,YAAAA,QAAQ,EAAE;AAHA,WARZ;AAaC,UAAA,YAAY,EAAE,KAAKxC,KAAL,CAAWyC,YAb1B;AAcC,UAAA,QAAQ,EAAE,KAAKC,YAdhB;AAeC,UAAA,OAAO,EAAE,KAAKC,KAAL,CAAWxC;AAfrB;AAAA;AAiBC,4BAAC,yBAAD;AACC,UAAA,SAAS;AAAA;AAAE,8BAAC,SAAD;AAAW,YAAA,QAAQ,EAAC,SAApB;AAA8B,YAAA,IAAI,EAAC;AAAnC,YADZ;AAEC,UAAA,QAAQ,EAAE,KAAKyC,iBAFhB;AAGC,UAAA,WAAW,EAAE,KAAK5C,KAAL,CAAW6C,WAHzB;AAIC,UAAA,QAAQ,EAAE,KAAK7C,KAAL,CAAW8C,QAJtB;AAKC,UAAA,IAAI,EAAC,MALN;AAMC,UAAA,KAAK,EAAE,KAAKH,KAAL,CAAWzB;AANnB,UAjBD;AADD;AA4BA;;;;EAxMuB5B,KAAK,CAACyD,S;;gBAAzB9B,U,iBAGgBpB,W;;gBAHhBoB,U,eAMc;AAClB;;;AAGAiB,EAAAA,uBAAuB,EAAE3C,SAAS,CAACyD,IAJjB;;AAKlB;;;AAGAb,EAAAA,QAAQ,EAAE5C,SAAS,CAACyD,IARF;;AASlB;;;AAGArC,EAAAA,SAAS,EAAEpB,SAAS,CAAC0D,IAZH;;AAalB;;;AAGAb,EAAAA,kBAAkB,EAAE7C,SAAS,CAACyD,IAhBZ;;AAiBlB;;;AAGAnC,EAAAA,KAAK,EAAEtB,SAAS,CAAC2D,MApBC;;AAqBlB;;;AAGAb,EAAAA,gBAAgB,EAAE9C,SAAS,CAAC0D,IAxBV;;AAyBlB;;;;;;AAMAR,EAAAA,YAAY,EAAElD,SAAS,CAAC4D,KAAV,CAAgB,CAC7B,UAD6B,EAE7B,yBAF6B,EAG7B,UAH6B,CAAhB,CA/BI;;AAoClB;;;AAGA1B,EAAAA,YAAY,EAAElC,SAAS,CAAC0D,IAvCN;;AAwClB;;;AAGA7B,EAAAA,MAAM,EAAE7B,SAAS,CAAC0D,IA3CA;;AA4ClB;;;AAGAJ,EAAAA,WAAW,EAAEtD,SAAS,CAAC2D,MA/CL;;AAgDlB;;;AAGAJ,EAAAA,QAAQ,EAAEvD,SAAS,CAACyD,IAnDF;;AAoDlB;;;AAGAhC,EAAAA,aAAa,EAAEzB,SAAS,CAAC6D,MAvDP;;AAwDlB;;;AAGAlC,EAAAA,QAAQ,EAAE3B,SAAS,CAAC2D,MA3DF;;AA4DlB;;;AAGApC,EAAAA,KAAK,EAAEvB,SAAS,CAAC8D,UAAV,CAAqBnD,IAArB;AA/DW,C;;gBANde,U,kBAwEiB;AACrBN,EAAAA,SADqB,qBACXY,IADW,EACL;AACf,QAAIA,IAAJ,EAAU;AACT,aAAOA,IAAI,CAAC+B,kBAAL,CAAwBC,SAAS,CAACC,QAAlC,EAA4C;AAClDC,QAAAA,IAAI,EAAE,SAD4C;AAElDC,QAAAA,MAAM,EAAE;AAF0C,OAA5C,CAAP;AAIA;;AAED,WAAO,IAAP;AACA,GAVoB;AAWrBtC,EAAAA,MAXqB,kBAWduC,OAXc,EAWL;AACf,QAAMpC,IAAI,GAAG,IAAIrB,IAAJ,EAAb;AACA,QAAM0D,OAAO,GAAGrC,IAAI,CAACsC,cAAL,CAAoBN,SAAS,CAACC,QAA9B,EAAwC;AACvDM,MAAAA,IAAI,EAAE,SADiD;AAEvDC,MAAAA,KAAK,EAAE,SAFgD;AAGvDC,MAAAA,GAAG,EAAE;AAHkD,KAAxC,CAAhB;AAKA,WAAO,IAAI9D,IAAJ,WAAY0D,OAAZ,cAAuBD,OAAvB,EAAP;AACA,GAnBoB;AAoBrBlB,EAAAA,YAAY,EAAE,UApBO;AAqBrB3B,EAAAA,KAAK,EAAE,IArBc;AAsBrBE,EAAAA,aAAa,EAAE;AAtBM,C;;AAmIvB,eAAeC,UAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n// # Timepicker Component\n\n// ## Dependencies\n\n// ### React\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\n// ### isDate\nimport isDate from 'lodash.isdate';\n\n// This component's `checkProps` which issues warnings to developers about properties when in development mode (similar to React's built in development tools)\nimport checkProps from './check-props';\n\n// ### Dropdown\nimport InputIcon from '../icon/input-icon';\nimport MenuDropdown from '../menu-dropdown';\nimport TimepickerDropdownTrigger from './private/dropdown-trigger';\n\n// ## Constants\nimport { TIME_PICKER } from '../../utilities/constants';\n\nimport componentDoc from './component.json';\n\nconst getOptions = ({ props }) => {\n\tconst baseDate = new Date();\n\tconst options = [];\n\n\tbaseDate.setHours(0);\n\tbaseDate.setMinutes(0);\n\tbaseDate.setSeconds(0);\n\tbaseDate.setMilliseconds(0);\n\n\tconst curDate = new Date(baseDate);\n\n\t// eslint-disable-next-line fp/no-loops\n\twhile (baseDate.getDate() === curDate.getDate()) {\n\t\tconst formatted = props.formatter(curDate);\n\n\t\t// eslint-disable-next-line fp/no-mutating-methods\n\t\toptions.push({\n\t\t\tlabel: formatted,\n\t\t\tvalue: new Date(curDate),\n\t\t});\n\n\t\tcurDate.setMinutes(curDate.getMinutes() + props.stepInMinutes);\n\t}\n\n\treturn options;\n};\n\n/**\n *  Component description.\n */\nclass Timepicker extends React.Component {\n\t// ### Display Name\n\t// Always use the canonical component name as the React display name.\n\tstatic displayName = TIME_PICKER;\n\n\t// ### Prop Types\n\tstatic propTypes = {\n\t\t/**\n\t\t * If true, constrains the menu to the scroll parent. See `Dropdown`.\n\t\t */\n\t\tconstrainToScrollParent: PropTypes.bool,\n\t\t/**\n\t\t * Disables the input and prevents editing the contents.\n\t\t */\n\t\tdisabled: PropTypes.bool,\n\t\t/**\n\t\t * Time formatting function\n\t\t */\n\t\tformatter: PropTypes.func,\n\t\t/**\n\t\t * Sets the dialog width to the width of the target. Menus attached to `input` typically follow this UX pattern.\n\t\t */\n\t\tinheritTargetWidth: PropTypes.bool,\n\t\t/**\n\t\t * This label appears above the input.\n\t\t */\n\t\tlabel: PropTypes.string,\n\t\t/**\n\t\t * Custom element that overrides the default Menu Item component.\n\t\t */\n\t\tlistItemRenderer: PropTypes.func,\n\t\t/**\n\t\t * Please select one of the following:\n\t\t * * `absolute` - (default) The dialog will use `position: absolute` and style attributes to position itself. This allows inverted placement or flipping of the dialog.\n\t\t * * `overflowBoundaryElement` - The dialog will overflow scrolling parents. Use on elements that are aligned to the left or right of their target and don't care about the target being within a scrolling parent. Typically this is a popover or tooltip. Dropdown menus can usually open up and down if no room exists. In order to achieve this a portal element will be created and attached to `body`. This element will render into that detached render tree.\n\t\t * * `relative` - No styling or portals will be used. Menus will be positioned relative to their triggers. This is a great choice for HTML snapshot testing.\n\t\t */\n\t\tmenuPosition: PropTypes.oneOf([\n\t\t\t'absolute',\n\t\t\t'overflowBoundaryElement',\n\t\t\t'relative',\n\t\t]),\n\t\t/**\n\t\t * Receives the props `(dateValue, stringValue)`\n\t\t */\n\t\tonDateChange: PropTypes.func,\n\t\t/**\n\t\t * Parsing date string into Date\n\t\t */\n\t\tparser: PropTypes.func,\n\t\t/**\n\t\t * Text that will appear in an empty input.\n\t\t */\n\t\tplaceholder: PropTypes.string,\n\t\t/**\n\t\t * If true, adds asterisk next to input label to indicate it is a required field.\n\t\t */\n\t\trequired: PropTypes.bool,\n\t\t/**\n\t\t * Frequency of options\n\t\t */\n\t\tstepInMinutes: PropTypes.number,\n\t\t/**\n\t\t * Value for input that is parsed to create an internal state in the `date` format.\n\t\t */\n\t\tstrValue: PropTypes.string,\n\t\t/**\n\t\t * Instance an internal state in the `date` format.\n\t\t */\n\t\tvalue: PropTypes.instanceOf(Date),\n\t};\n\n\tstatic defaultProps = {\n\t\tformatter(date) {\n\t\t\tif (date) {\n\t\t\t\treturn date.toLocaleTimeString(navigator.language, {\n\t\t\t\t\thour: '2-digit',\n\t\t\t\t\tminute: '2-digit',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\t\tparser(timeStr) {\n\t\t\tconst date = new Date();\n\t\t\tconst dateStr = date.toLocaleString(navigator.language, {\n\t\t\t\tyear: 'numeric',\n\t\t\t\tmonth: 'numeric',\n\t\t\t\tday: 'numeric',\n\t\t\t});\n\t\t\treturn new Date(`${dateStr} ${timeStr}`);\n\t\t},\n\t\tmenuPosition: 'absolute',\n\t\tvalue: null,\n\t\tstepInMinutes: 30,\n\t};\n\n\tstate = {\n\t\tvalue: this.props.value,\n\t\tstrValue: this.props.strValue,\n\t\toptions: getOptions({ props: this.props }),\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// `checkProps` issues warnings to developers about properties (similar to React's built in development tools)\n\t\tcheckProps(TIME_PICKER, props, componentDoc);\n\t}\n\n\t// eslint-disable-next-line camelcase, react/sort-comp\n\tUNSAFE_componentWillReceiveProps(nextProps) {\n\t\tif (nextProps.value && this.props.value) {\n\t\t\tconst currentTime = this.props.value.getTime();\n\t\t\tconst nextTime = nextProps.value.getTime();\n\n\t\t\tif (currentTime !== nextTime) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tvalue: nextProps.value,\n\t\t\t\t\tstrValue: this.props.formatter(nextProps.value),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (nextProps.strValue !== this.props.value) {\n\t\t\tthis.setState({ strValue: nextProps.strValue });\n\t\t}\n\t}\n\n\tparseDate = (strValue) => {\n\t\tconst newDate = this.props.parser(strValue);\n\n\t\tif (isDate(newDate)) {\n\t\t\tif (!isNaN(newDate.getTime())) {\n\t\t\t\treturn newDate;\n\t\t\t}\n\t\t}\n\n\t\treturn new Date();\n\t};\n\n\thandleChange = (date, strValue) => {\n\t\tthis.setState({\n\t\t\tvalue: date,\n\t\t\tstrValue,\n\t\t});\n\n\t\tif (this.props.onDateChange) {\n\t\t\tthis.props.onDateChange(date, strValue);\n\t\t}\n\t};\n\n\thandleSelect = (val) => {\n\t\tif (val && val.value) {\n\t\t\tthis.handleChange(val.value, val.label);\n\t\t}\n\t};\n\n\thandleInputChange = (event) => {\n\t\tconst strValue = event.target.value;\n\n\t\tthis.setState({\n\t\t\tstrValue,\n\t\t});\n\n\t\tif (this.props.onDateChange) {\n\t\t\tconst parsedDate = this.props.parser(strValue);\n\t\t\tthis.props.onDateChange(parsedDate, strValue);\n\t\t}\n\t};\n\n\t// ### Render\n\trender() {\n\t\treturn (\n\t\t\t<MenuDropdown\n\t\t\t\tcheckmark={false}\n\t\t\t\tconstrainToScrollParent={this.props.constrainToScrollParent}\n\t\t\t\tdisabled={this.props.disabled}\n\t\t\t\tinheritTargetWidth={this.props.inheritTargetWidth}\n\t\t\t\tlabel={this.props.label}\n\t\t\t\tlistItemRenderer={this.props.listItemRenderer}\n\t\t\t\t// inline style override\n\t\t\t\tmenuStyle={{\n\t\t\t\t\tmaxHeight: '20em',\n\t\t\t\t\toverflowX: 'hidden',\n\t\t\t\t\tminWidth: '100%',\n\t\t\t\t}}\n\t\t\t\tmenuPosition={this.props.menuPosition}\n\t\t\t\tonSelect={this.handleSelect}\n\t\t\t\toptions={this.state.options}\n\t\t\t>\n\t\t\t\t<TimepickerDropdownTrigger\n\t\t\t\t\ticonRight={<InputIcon category=\"utility\" name=\"clock\" />}\n\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\tplaceholder={this.props.placeholder}\n\t\t\t\t\trequired={this.props.required}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={this.state.strValue}\n\t\t\t\t/>\n\t\t\t</MenuDropdown>\n\t\t);\n\t}\n}\n\nexport default Timepicker;\n"],"file":"index.js"}