{"version":3,"sources":["../../../../.tmp-es/components/vertical-navigation/__tests__/navigation.browser-test.jsx"],"names":["React","PropTypes","chai","expect","chaiEnzyme","mountComponent","unmountComponent","sampleReportCategories","VerticalNavigation","use","defaultProps","id","className","categories","DemoComponent","props","Component","selectedId","string","onSelect","func","describe","beforeEach","afterEach","it","structure","reports","folders","Object","entries","forEach","categoryId","itemCount","header","wrapper","find","to","have","length","ariaDescribedbyId","item","clickHandler","sinon","spy","simulate","callCount","equal"],"mappings":"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","sourcesContent":["/* Adds all of the Mocha (eg `it` and `should`) and sinon testing global\n * variables to the global namespace for eslint purposes.\n */\n/* eslint-env mocha */\n/* global sinon */\n\n// Import your external dependencies\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\nimport chai, { expect } from 'chai';\nimport chaiEnzyme from 'chai-enzyme';\n\n/* Enzyme Helpers that can mount and unmount React component instances to\n * the DOM and set `this.wrapper` and `this.dom` within Mocha's `this`\n * context [full source here](tests/enzyme-helpers.js). `this` can\n * only be referenced if inside `function () {}`.\n */\nimport {\n\tmountComponent,\n\tunmountComponent,\n} from '../../../tests/enzyme-helpers';\n\nimport { sampleReportCategories } from '../../../utilities/sample-data/vertical-navigation';\nimport VerticalNavigation from '../../vertical-navigation';\n\n/* Set Chai to use chaiEnzyme for enzyme compatible assertions:\n * https://github.com/producthunt/chai-enzyme\n */\nchai.use(chaiEnzyme());\n\nconst defaultProps = {\n\tid: 'sample-navigation',\n\tclassName: 'sample-navigation',\n\tcategories: sampleReportCategories,\n};\n\n/* A re-usable demo component fixture outside of `describe` sections\n * can accept props within each test and be unmounted after each tests.\n */\nclass DemoComponent extends React.Component {\n\tstatic displayName = 'NavigationDemoComponent';\n\n\tstatic propTypes = {\n\t\tselectedId: PropTypes.string,\n\t\tonSelect: PropTypes.func,\n\t};\n\n\tstatic defaultProps = defaultProps;\n\n\tstate = {};\n\n\t// event handlers\n\n\trender() {\n\t\treturn <VerticalNavigation {...this.props} />;\n\t}\n}\n\ndescribe('SLDSVerticalNavigation', () => {\n\tdescribe('Assistive technology', () => {\n\t\t/* Detect if presence of accessibility features such as ARIA\n\t\t * roles and screen reader text is present in the DOM.\n\t\t */\n\t\tbeforeEach(mountComponent(<DemoComponent />));\n\n\t\tafterEach(unmountComponent);\n\n\t\tit('has items described by category headers', function() {\n\t\t\tconst structure = { reports: 5, folders: 3 };\n\t\t\tObject.entries(structure).forEach(([categoryId, itemCount]) => {\n\t\t\t\tconst header = this.wrapper.find(`#sample-navigation-${categoryId}`);\n\t\t\t\texpect(header).to.have.length(1);\n\t\t\t\tconst ariaDescribedbyId = this.wrapper.find(\n\t\t\t\t\t`a[aria-describedby=\"sample-navigation-${categoryId}\"]`\n\t\t\t\t);\n\t\t\t\texpect(ariaDescribedbyId).to.have.length(itemCount);\n\t\t\t});\n\t\t});\n\t});\n\n\t// PROPS\n\n\tdescribe('selectedId prop', () => {\n\t\tconst selectedId = 'my_folders';\n\n\t\tbeforeEach(mountComponent(<DemoComponent selectedId={selectedId} />));\n\n\t\tafterEach(unmountComponent);\n\n\t\tit('is used to select an item', function() {\n\t\t\tconst item = this.wrapper\n\t\t\t\t.find('.sample-navigation')\n\t\t\t\t.find('li.slds-is-active')\n\t\t\t\t.find('a[data-id=\"my_folders\"]');\n\t\t\texpect(item).to.have.length(1);\n\t\t});\n\t});\n\n\t// EVENTS\n\n\tdescribe('Item', () => {\n\t\tconst clickHandler = sinon.spy();\n\n\t\tbeforeEach(mountComponent(<DemoComponent onSelect={clickHandler} />));\n\n\t\tafterEach(unmountComponent);\n\n\t\tit('calls onSelect', function() {\n\t\t\tconst item = this.wrapper\n\t\t\t\t.find('.sample-navigation')\n\t\t\t\t.find('a[data-id=\"my_folders\"]');\n\t\t\titem.simulate('click');\n\t\t\texpect(clickHandler.callCount).to.equal(1);\n\t\t});\n\t});\n});\n"],"file":"navigation.browser-test.js"}