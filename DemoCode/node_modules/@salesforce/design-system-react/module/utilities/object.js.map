{"version":3,"sources":["../../.tmp-es/utilities/object.js"],"names":["removeUndefined","obj","newObj","Object","keys","forEach","prop","helpers"],"mappings":"AAAA;;;;;AAMA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAS;AAChC,MAAMC,MAAM,GAAG,EAAf;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiBI,OAAjB,CAAyB,UAACC,IAAD,EAAU;AAClC,QAAI,OAAOL,GAAG,CAACK,IAAD,CAAV,KAAqB,WAAzB,EAAsC;AACrCJ,MAAAA,MAAM,CAACI,IAAD,CAAN,GAAeL,GAAG,CAACK,IAAD,CAAlB;AACA;AACD,GAJD;AAKA,SAAOJ,MAAP;AACA,CARD;;AAUA,IAAMK,OAAO,GAAG;AAAEP,EAAAA,eAAe,EAAfA;AAAF,CAAhB;AAEA,eAAeO,OAAf","sourcesContent":["/*\n * Remove keys with undefined values. This is useful \n * for merging object props like `assistiveText` and `labels` \n * and keeping default prop values.\n */\n\nconst removeUndefined = (obj) => {\n\tconst newObj = {};\n\tObject.keys(obj).forEach((prop) => {\n\t\tif (typeof obj[prop] !== 'undefined') {\n\t\t\tnewObj[prop] = obj[prop];\n\t\t}\n\t});\n\treturn newObj;\n};\n\nconst helpers = { removeUndefined };\n\nexport default helpers;\n"],"file":"object.js"}