{"version":3,"sources":["../../.tmp-es/utilities/dialog-helpers.js"],"names":["classNames","DIRECTIONS","mapPropToPopperPlacement","align","direction","placement","RTL","indexOf","replace","getNubbinClassName","popperData","flipped","DISTANCE_OFFSET","NUBBIN_SIZE","ROTATED_HEIGHT","Math","sqrt","getNubbinMargins","top","left","DISTANCE_OFFSET_PX","ROTATED_HEIGHT_PX","halfWidth","offsets","reference","width","halfHeight","height"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\nimport classNames from 'classnames';\nimport { DIRECTIONS } from './../components/utilities/UNSAFE_direction';\n\n// Translates the prop into a string popper can use https://popper.js.org/popper-documentation.html#Popper.placements\nconst mapPropToPopperPlacement = (align, direction) => {\n\tlet placement;\n\tswitch (align) {\n\t\tcase 'top left':\n\t\t\tplacement = 'top-start';\n\t\t\tbreak;\n\t\tcase 'top right':\n\t\t\tplacement = 'top-end';\n\t\t\tbreak;\n\t\tcase 'right top':\n\t\t\tplacement = 'right-start';\n\t\t\tbreak;\n\t\tcase 'right bottom':\n\t\t\tplacement = 'right-end';\n\t\t\tbreak;\n\t\tcase 'bottom left':\n\t\t\tplacement = 'bottom-start';\n\t\t\tbreak;\n\t\tcase 'bottom right':\n\t\t\tplacement = 'bottom-end';\n\t\t\tbreak;\n\t\tcase 'left top':\n\t\t\tplacement = 'left-start';\n\t\t\tbreak;\n\t\tcase 'left bottom':\n\t\t\tplacement = 'left-end';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tplacement = align;\n\t}\n\tif (direction === DIRECTIONS.RTL) {\n\t\tif (placement.indexOf('left') > -1) {\n\t\t\tplacement = placement.replace('left', 'right');\n\t\t} else if (placement.indexOf('right') > -1) {\n\t\t\tplacement = placement.replace('right', 'left');\n\t\t} else if (placement.indexOf('start') > -1) {\n\t\t\tplacement = placement.replace('start', 'end');\n\t\t} else if (placement.indexOf('end') > -1) {\n\t\t\tplacement = placement.replace('end', 'start');\n\t\t}\n\t}\n\treturn placement;\n};\n\nconst getNubbinClassName = (align, popperData = {}) => {\n\tif (popperData.flipped) {\n\t\treturn classNames({\n\t\t\t'slds-nubbin_top': align === 'top',\n\t\t\t'slds-nubbin_top-left': align === 'top left',\n\t\t\t'slds-nubbin_top-right': align === 'top right',\n\t\t\t'slds-nubbin_bottom': align === 'bottom',\n\t\t\t'slds-nubbin_bottom-left': align === 'bottom left',\n\t\t\t'slds-nubbin_bottom-right': align === 'bottom right',\n\t\t\t'slds-nubbin_left': align === 'left',\n\t\t\t'slds-nubbin_left-bottom': align === 'left bottom',\n\t\t\t'slds-nubbin_left-top': align === 'left top',\n\t\t\t'slds-nubbin_right': align === 'right',\n\t\t\t'slds-nubbin_right-bottom': align === 'right bottom',\n\t\t\t'slds-nubbin_right-top': align === 'right top',\n\t\t});\n\t}\n\n\treturn classNames({\n\t\t'slds-nubbin_top': align === 'bottom',\n\t\t'slds-nubbin_top-left': align === 'bottom left',\n\t\t'slds-nubbin_top-right': align === 'bottom right',\n\t\t'slds-nubbin_bottom': align === 'top',\n\t\t'slds-nubbin_bottom-left': align === 'top left',\n\t\t'slds-nubbin_bottom-right': align === 'top right',\n\t\t'slds-nubbin_left': align === 'right',\n\t\t'slds-nubbin_left-bottom': align === 'right bottom',\n\t\t'slds-nubbin_left-top': align === 'right top',\n\t\t'slds-nubbin_right': align === 'left',\n\t\t'slds-nubbin_right-bottom': align === 'left bottom',\n\t\t'slds-nubbin_right-top': align === 'left top',\n\t});\n};\n\nconst DISTANCE_OFFSET = 1.5; // 'rem'\nconst NUBBIN_SIZE = 1; // 'rem'\nconst ROTATED_HEIGHT = NUBBIN_SIZE / Math.sqrt(2); // 'rem'\n/*\n*\n*\n*\n*\n*/\n// FIXME - still need to account for border shadow of 2px. probably only needs to be added to the rotated height.\n// TODO - should we convert all rem to pixels right from the get go? Keep units consistent. Memoize the values for perf?\nconst getNubbinMargins = (popperData = {}) => {\n\tconst { placement } = popperData;\n\n\tlet top = 0;\n\tlet left = 0;\n\n\tconst DISTANCE_OFFSET_PX = 16 * DISTANCE_OFFSET; // FIXME - actually do a real convert based on font size.\n\tconst ROTATED_HEIGHT_PX = 16 * ROTATED_HEIGHT; // FIXME - actually do a real convert based on font size.\n\n\tconst halfWidth = popperData.offsets.reference.width * 0.5;\n\tconst halfHeight = popperData.offsets.reference.height * 0.5;\n\n\tif (placement === 'top') {\n\t\ttop = ROTATED_HEIGHT_PX * -1;\n\t} else if (placement === 'top-end') {\n\t\ttop = ROTATED_HEIGHT_PX * -1;\n\t\tleft = DISTANCE_OFFSET_PX - halfWidth;\n\t} else if (placement === 'top-start') {\n\t\ttop = ROTATED_HEIGHT_PX * -1;\n\t\tleft = halfWidth - DISTANCE_OFFSET_PX;\n\t}\n\n\tif (placement === 'bottom') {\n\t\ttop = ROTATED_HEIGHT_PX;\n\t} else if (placement === 'bottom-end') {\n\t\ttop = ROTATED_HEIGHT_PX;\n\t\tleft = DISTANCE_OFFSET_PX - halfWidth;\n\t} else if (placement === 'bottom-start') {\n\t\ttop = ROTATED_HEIGHT_PX;\n\t\tleft = halfWidth - DISTANCE_OFFSET_PX;\n\t}\n\n\tif (placement === 'right') {\n\t\tleft = ROTATED_HEIGHT_PX;\n\t} else if (placement === 'right-end') {\n\t\tleft = ROTATED_HEIGHT_PX;\n\t\ttop = DISTANCE_OFFSET_PX - halfHeight;\n\t} else if (placement === 'right-start') {\n\t\tleft = ROTATED_HEIGHT_PX;\n\t\ttop = halfHeight - DISTANCE_OFFSET_PX;\n\t}\n\n\tif (placement === 'left') {\n\t\tleft = ROTATED_HEIGHT_PX * -1;\n\t} else if (placement === 'left-end') {\n\t\tleft = ROTATED_HEIGHT_PX * -1;\n\t\ttop = DISTANCE_OFFSET_PX - halfHeight;\n\t} else if (placement === 'left-start') {\n\t\tleft = ROTATED_HEIGHT_PX * -1;\n\t\ttop = halfHeight - DISTANCE_OFFSET_PX;\n\t}\n\n\treturn {\n\t\tleft,\n\t\ttop,\n\t};\n};\n\nexport { getNubbinMargins, getNubbinClassName, mapPropToPopperPlacement };\n"],"file":"dialog-helpers.js"}