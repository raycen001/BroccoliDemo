{"version":3,"sources":["../../.tmp-es/utilities/keyboard-navigate.js"],"names":["ReactDOM","escapeRegExp","KEYS","keyboardNavigate","componentContext","currentFocusedIndex","isOpen","event","key","keyCode","navigableItems","onFocus","onSelect","target","toggleOpen","indexes","lastIndex","length","focusedIndex","ch","String","fromCharCode","test","toLowerCase","openMenuKeys","ENTER","SPACE","UP","ESCAPE","trigger","findDOMNode","handleClick","navigableIndex","indexOf","DOWN","newNavigableIndex","pattern","keyBuffer","consecutive","RegExp","forEach","item","undefined","text","substr","index"],"mappings":"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","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\nimport ReactDOM from 'react-dom';\nimport escapeRegExp from 'lodash.escaperegexp';\n\nimport KEYS from './key-code';\n\nconst keyboardNavigate = ({\n\tcomponentContext,\n\tcurrentFocusedIndex,\n\tisOpen,\n\tevent,\n\tkey,\n\tkeyCode,\n\tnavigableItems,\n\tonFocus,\n\tonSelect,\n\ttarget,\n\ttoggleOpen,\n}) => {\n\tconst { indexes } = navigableItems;\n\tconst lastIndex = indexes.length - 1;\n\tlet focusedIndex;\n\tlet ch = key || String.fromCharCode(keyCode);\n\n\tif (/^[ -~]$/.test(ch)) {\n\t\tch = ch.toLowerCase();\n\t} else {\n\t\tch = null;\n\t}\n\n\tconst openMenuKeys =\n\t\tkeyCode === KEYS.ENTER || keyCode === KEYS.SPACE || keyCode === KEYS.UP;\n\n\tif (keyCode === KEYS.ESCAPE) {\n\t\tif (isOpen) toggleOpen();\n\t} else if (!isOpen) {\n\t\t[focusedIndex] = indexes;\n\t\tif (openMenuKeys || ch) {\n\t\t\ttoggleOpen();\n\t\t}\n\t\tif (\n\t\t\topenMenuKeys &&\n\t\t\tcomponentContext.trigger &&\n\t\t\t// eslint-disable-next-line react/no-find-dom-node\n\t\t\tReactDOM.findDOMNode(componentContext.trigger) === target\n\t\t) {\n\t\t\tcomponentContext.handleClick(event);\n\t\t}\n\t} else if (keyCode === KEYS.ENTER || keyCode === KEYS.SPACE) {\n\t\tonSelect(currentFocusedIndex);\n\t} else {\n\t\tconst navigableIndex = indexes.indexOf(currentFocusedIndex);\n\n\t\tif (keyCode === KEYS.DOWN) {\n\t\t\tif (navigableIndex < lastIndex) {\n\t\t\t\tconst newNavigableIndex = navigableIndex + 1;\n\t\t\t\tfocusedIndex = indexes[newNavigableIndex];\n\t\t\t} else {\n\t\t\t\t[focusedIndex] = indexes;\n\t\t\t}\n\t\t} else if (keyCode === KEYS.UP) {\n\t\t\tif (navigableIndex > 0) {\n\t\t\t\tconst newNavigableIndex = navigableIndex - 1;\n\t\t\t\tfocusedIndex = indexes[newNavigableIndex];\n\t\t\t} else {\n\t\t\t\tfocusedIndex = indexes[lastIndex];\n\t\t\t}\n\t\t} else if (ch) {\n\t\t\t// Combine subsequent keypresses\n\t\t\tconst pattern = navigableItems.keyBuffer(ch);\n\t\t\tlet consecutive = 0;\n\n\t\t\t// Support for navigating to the next option of the same letter with repeated presses of the same key\n\t\t\tif (\n\t\t\t\tpattern.length > 1 &&\n\t\t\t\tnew RegExp(`^[${escapeRegExp(ch)}]+$`).test(pattern)\n\t\t\t) {\n\t\t\t\tconsecutive = pattern.length;\n\t\t\t}\n\n\t\t\tnavigableItems.forEach((item) => {\n\t\t\t\tif (\n\t\t\t\t\t(focusedIndex === undefined &&\n\t\t\t\t\t\titem.text.substr(0, pattern.length) === pattern) ||\n\t\t\t\t\t(consecutive > 0 && item.text.substr(0, 1) === ch)\n\t\t\t\t) {\n\t\t\t\t\tconsecutive -= 1;\n\t\t\t\t\tfocusedIndex = item.index;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tonFocus(focusedIndex);\n\n\treturn focusedIndex;\n};\n\nexport default keyboardNavigate;\n"],"file":"keyboard-navigate.js"}