{"version":3,"sources":["../../../.tmp-es/utilities/warning/deprecated-event-parameter.js"],"names":["lowPriorityWarning","deprecated","deprecatedFunction","process","env","NODE_ENV","hasWarned","control","comment","oldEventParameterOrder","propAsString","log","additionalComment","warnOnFirstOccurrenceKey","triggerWarning","Boolean","message"],"mappings":"AAAA;;AACA;;AAEA;;AACA;AAEA;AACA,OAAOA,kBAAP,MAA+B,wBAA/B;;AAEA,IAAIC,UAAU,GAAG,SAASC,kBAAT,GAA8B,CAAE,CAAjD;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAC1C,MAAMC,SAAS,GAAG,EAAlB;;AAEAL,EAAAA,UAAU,GAAG,SAASC,kBAAT,CACZK,OADY,QAOZC,OAPY,EAQX;AAAA,QALAC,sBAKA,QALAA,sBAKA;AAAA,QAJAC,YAIA,QAJAA,YAIA;AAAA,QAHAC,GAGA,QAHAA,GAGA;AACD,QAAMC,iBAAiB,GAAGJ,OAAO,cAAOA,OAAP,IAAmB,EAApD;AACA,QAAMK,wBAAwB,GAAGN,OAAO,GAAGG,YAA3C;AACA,QAAMI,cAAc,GAAGC,OAAO,CAACN,sBAAD,CAA9B;;AAEA,QAAI,CAACH,SAAS,CAACO,wBAAD,CAAd,EAA0C;AACzC,UAAMG,OAAO,mCAA4BJ,iBAA5B,CAAb;;AAEA,UAAIE,cAAc,IAAIH,GAAtB,EAA2B;AAC1BA,QAAAA,GAAG,CAAC;AAAEK,UAAAA,OAAO,EAAPA;AAAF,SAAD,CAAH;AACA,OAFD,MAEO,IAAIF,cAAJ,EAAoB;AAC1Bd,QAAAA,kBAAkB,CACjB,KADiB,EACV;AACPgB,QAAAA,OAFiB,CAAlB;AAIA,OAVwC,CAWzC;;;AACAV,MAAAA,SAAS,CAACO,wBAAD,CAAT,GAAsCC,cAAtC;AACA;AACD,GA3BD;AA4BA;;AAED,eAAeb,UAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\n\n/* eslint-disable import/no-mutable-exports */\n/* eslint-disable max-len */\n\n// This function will deliver a warning message to the browser console about an event parameter change.\nimport lowPriorityWarning from './low-priority-warning';\n\nlet deprecated = function deprecatedFunction() {};\n\nif (process.env.NODE_ENV !== 'production') {\n\tconst hasWarned = {};\n\n\tdeprecated = function deprecatedFunction(\n\t\tcontrol,\n\t\t{\n\t\t\toldEventParameterOrder, // flag that tells which parameter order is in use\n\t\t\tpropAsString, // key name of prop being warned about\n\t\t\tlog, // log function that will disable console warning and pipe to another function log({ message })\n\t\t},\n\t\tcomment\n\t) {\n\t\tconst additionalComment = comment ? ` ${comment}` : '';\n\t\tconst warnOnFirstOccurrenceKey = control + propAsString;\n\t\tconst triggerWarning = Boolean(oldEventParameterOrder);\n\n\t\tif (!hasWarned[warnOnFirstOccurrenceKey]) {\n\t\t\tconst message = `[Design System React] ${additionalComment}`;\n\n\t\t\tif (triggerWarning && log) {\n\t\t\t\tlog({ message });\n\t\t\t} else if (triggerWarning) {\n\t\t\t\tlowPriorityWarning(\n\t\t\t\t\tfalse, // false value triggers warning\n\t\t\t\t\tmessage\n\t\t\t\t);\n\t\t\t}\n\t\t\t// store global flag to limit warnings to first issue\n\t\t\thasWarned[warnOnFirstOccurrenceKey] = triggerWarning;\n\t\t}\n\t};\n}\n\nexport default deprecated;\n"],"file":"deprecated-event-parameter.js"}