{"version":3,"sources":["../../.tmp-es/utilities/key-letter-menu-item-select.js"],"names":["escapeRegExp","keyLetterMenuItemSelect","key","keyBuffer","keyCode","options","ch","String","fromCharCode","test","toLowerCase","pattern","consecutive","focusedIndex","length","RegExp","forEach","item","index","itemLabel","label","undefined","substr"],"mappings":"AAAA;;AACA;AACA,OAAOA,YAAP,MAAyB,qBAAzB,C,CAEA;;AACA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,OAA0C;AAAA,MAAvCC,GAAuC,QAAvCA,GAAuC;AAAA,MAAlCC,SAAkC,QAAlCA,SAAkC;AAAA,MAAvBC,OAAuB,QAAvBA,OAAuB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACzE,MAAIC,EAAE,GAAGJ,GAAG,IAAIK,MAAM,CAACC,YAAP,CAAoBJ,OAApB,CAAhB;;AAEA,MAAI,UAAUK,IAAV,CAAeH,EAAf,CAAJ,EAAwB;AACvBA,IAAAA,EAAE,GAAGA,EAAE,CAACI,WAAH,EAAL;AACA,GAFD,MAEO;AACNJ,IAAAA,EAAE,GAAG,IAAL;AACA;;AAED,MAAMK,OAAO,GAAGR,SAAS,CAACG,EAAD,CAAzB;AACA,MAAIM,WAAW,GAAG,CAAlB;AACA,MAAIC,YAAJ,CAXyE,CAazE;;AACA,MACCF,OAAO,CAACG,MAAR,GAAiB,CAAjB,IACA,IAAIC,MAAJ,aAAgBf,YAAY,CAACM,EAAD,CAA5B,UAAuCG,IAAvC,CAA4CE,OAA5C,CAFD,EAGE;AACDC,IAAAA,WAAW,GAAGD,OAAO,CAACG,MAAtB;AACA;;AAEDT,EAAAA,OAAO,CAACW,OAAR,CAAgB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAChC,QAAMC,SAAS,GAAGZ,MAAM,CAACU,IAAI,CAACG,KAAN,CAAN,CAAmBV,WAAnB,EAAlB;;AAEA,QACEG,YAAY,KAAKQ,SAAjB,IACAF,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoBX,OAAO,CAACG,MAA5B,MAAwCH,OADzC,IAECC,WAAW,GAAG,CAAd,IAAmBO,SAAS,CAACG,MAAV,CAAiB,CAAjB,EAAoB,CAApB,MAA2BhB,EAHhD,EAIE;AACDM,MAAAA,WAAW,IAAI,CAAf;AACAC,MAAAA,YAAY,GAAGK,KAAf;AACA;AACD,GAXD;AAaA,SAAOL,YAAP;AACA,CAnCD;;AAqCA,eAAeZ,uBAAf","sourcesContent":["/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved */\n/* Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */\nimport escapeRegExp from 'lodash.escaperegexp';\n\n// Determines the focusedIndex of a menu item following keyboard letter presses\nconst keyLetterMenuItemSelect = ({ key, keyBuffer, keyCode, options }) => {\n\tlet ch = key || String.fromCharCode(keyCode);\n\n\tif (/^[ -~]$/.test(ch)) {\n\t\tch = ch.toLowerCase();\n\t} else {\n\t\tch = null;\n\t}\n\n\tconst pattern = keyBuffer(ch);\n\tlet consecutive = 0;\n\tlet focusedIndex;\n\n\t// Support for navigating to the next option of the same letter with repeated presses of the same key\n\tif (\n\t\tpattern.length > 1 &&\n\t\tnew RegExp(`^[${escapeRegExp(ch)}]+$`).test(pattern)\n\t) {\n\t\tconsecutive = pattern.length;\n\t}\n\n\toptions.forEach((item, index) => {\n\t\tconst itemLabel = String(item.label).toLowerCase();\n\n\t\tif (\n\t\t\t(focusedIndex === undefined &&\n\t\t\t\titemLabel.substr(0, pattern.length) === pattern) ||\n\t\t\t(consecutive > 0 && itemLabel.substr(0, 1) === ch)\n\t\t) {\n\t\t\tconsecutive -= 1;\n\t\t\tfocusedIndex = index;\n\t\t}\n\t});\n\n\treturn focusedIndex;\n};\n\nexport default keyLetterMenuItemSelect;\n"],"file":"key-letter-menu-item-select.js"}