{"version":3,"sources":["../../.tmp-es/utilities/color.js"],"names":["assign","COLOR_NAMES","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","HEX_REGEX","ColorUtils","getNewColor","options","customHexValidator","oldColor","hex","isValidHex","errors","hsv","hue","saturation","value","rgb","returnColor","getHsvFromHex","getRgbFromHex","name","getRgbErrors","Object","values","includes","getHexFromRgb","getHsvFromRgb","getHexFromHsv","getRgbFromHsv","getDeltaColor","limitValue","Math","min","max","test","toSixDigitHex","hasError","isNaN","floor","Number","entries","reduce","keyValue","getHexFromNamedColor","toLowerCase","redRatio","greenRatio","blueRatio","delta","hueRatio","satRatio","valRatio","i","f","p","q","t","round","getHex","color","toString","substr","result","exec","parseInt","shortHandHex","match"],"mappings":"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","sourcesContent":["import assign from 'lodash.assign';\n\nconst COLOR_NAMES = {\n\taliceblue: '#f0f8ff',\n\tantiquewhite: '#faebd7',\n\taqua: '#00ffff',\n\taquamarine: '#7fffd4',\n\tazure: '#f0ffff',\n\tbeige: '#f5f5dc',\n\tbisque: '#ffe4c4',\n\tblack: '#000000',\n\tblanchedalmond: '#ffebcd',\n\tblue: '#0000ff',\n\tblueviolet: '#8a2be2',\n\tbrown: '#a52a2a',\n\tburlywood: '#deb887',\n\tcadetblue: '#5f9ea0',\n\tchartreuse: '#7fff00',\n\tchocolate: '#d2691e',\n\tcoral: '#ff7f50',\n\tcornflowerblue: '#6495ed',\n\tcornsilk: '#fff8dc',\n\tcrimson: '#dc143c',\n\tcyan: '#00ffff',\n\tdarkblue: '#00008b',\n\tdarkcyan: '#008b8b',\n\tdarkgoldenrod: '#b8860b',\n\tdarkgray: '#a9a9a9',\n\tdarkgreen: '#006400',\n\tdarkkhaki: '#bdb76b',\n\tdarkmagenta: '#8b008b',\n\tdarkolivegreen: '#556b2f',\n\tdarkorange: '#ff8c00',\n\tdarkorchid: '#9932cc',\n\tdarkred: '#8b0000',\n\tdarksalmon: '#e9967a',\n\tdarkseagreen: '#8fbc8f',\n\tdarkslateblue: '#483d8b',\n\tdarkslategray: '#2f4f4f',\n\tdarkturquoise: '#00ced1',\n\tdarkviolet: '#9400d3',\n\tdeeppink: '#ff1493',\n\tdeepskyblue: '#00bfff',\n\tdimgray: '#696969',\n\tdodgerblue: '#1e90ff',\n\tfirebrick: '#b22222',\n\tfloralwhite: '#fffaf0',\n\tforestgreen: '#228b22',\n\tfuchsia: '#ff00ff',\n\tgainsboro: '#dcdcdc',\n\tghostwhite: '#f8f8ff',\n\tgold: '#ffd700',\n\tgoldenrod: '#daa520',\n\tgray: '#808080',\n\tgreen: '#008000',\n\tgreenyellow: '#adff2f',\n\thoneydew: '#f0fff0',\n\thotpink: '#ff69b4',\n\tindianred: '#cd5c5c',\n\tindigo: '#4b0082',\n\tivory: '#fffff0',\n\tkhaki: '#f0e68c',\n\tlavender: '#e6e6fa',\n\tlavenderblush: '#fff0f5',\n\tlawngreen: '#7cfc00',\n\tlemonchiffon: '#fffacd',\n\tlightblue: '#add8e6',\n\tlightcoral: '#f08080',\n\tlightcyan: '#e0ffff',\n\tlightgoldenrodyellow: '#fafad2',\n\tlightgrey: '#d3d3d3',\n\tlightgreen: '#90ee90',\n\tlightpink: '#ffb6c1',\n\tlightsalmon: '#ffa07a',\n\tlightseagreen: '#20b2aa',\n\tlightskyblue: '#87cefa',\n\tlightslategray: '#778899',\n\tlightsteelblue: '#b0c4de',\n\tlightyellow: '#ffffe0',\n\tlime: '#00ff00',\n\tlimegreen: '#32cd32',\n\tlinen: '#faf0e6',\n\tmagenta: '#ff00ff',\n\tmaroon: '#800000',\n\tmediumaquamarine: '#66cdaa',\n\tmediumblue: '#0000cd',\n\tmediumorchid: '#ba55d3',\n\tmediumpurple: '#9370d8',\n\tmediumseagreen: '#3cb371',\n\tmediumslateblue: '#7b68ee',\n\tmediumspringgreen: '#00fa9a',\n\tmediumturquoise: '#48d1cc',\n\tmediumvioletred: '#c71585',\n\tmidnightblue: '#191970',\n\tmintcream: '#f5fffa',\n\tmistyrose: '#ffe4e1',\n\tmoccasin: '#ffe4b5',\n\tnavajowhite: '#ffdead',\n\tnavy: '#000080',\n\toldlace: '#fdf5e6',\n\tolive: '#808000',\n\tolivedrab: '#6b8e23',\n\torange: '#ffa500',\n\torangered: '#ff4500',\n\torchid: '#da70d6',\n\tpalegoldenrod: '#eee8aa',\n\tpalegreen: '#98fb98',\n\tpaleturquoise: '#afeeee',\n\tpalevioletred: '#d87093',\n\tpapayawhip: '#ffefd5',\n\tpeachpuff: '#ffdab9',\n\tperu: '#cd853f',\n\tpink: '#ffc0cb',\n\tplum: '#dda0dd',\n\tpowderblue: '#b0e0e6',\n\tpurple: '#800080',\n\trebeccapurple: '#663399',\n\tred: '#ff0000',\n\trosybrown: '#bc8f8f',\n\troyalblue: '#4169e1',\n\tsaddlebrown: '#8b4513',\n\tsalmon: '#fa8072',\n\tsandybrown: '#f4a460',\n\tseagreen: '#2e8b57',\n\tseashell: '#fff5ee',\n\tsienna: '#a0522d',\n\tsilver: '#c0c0c0',\n\tskyblue: '#87ceeb',\n\tslateblue: '#6a5acd',\n\tslategray: '#708090',\n\tsnow: '#fffafa',\n\tspringgreen: '#00ff7f',\n\tsteelblue: '#4682b4',\n\ttan: '#d2b48c',\n\tteal: '#008080',\n\tthistle: '#d8bfd8',\n\ttomato: '#ff6347',\n\tturquoise: '#40e0d0',\n\tviolet: '#ee82ee',\n\twheat: '#f5deb3',\n\twhite: '#ffffff',\n\twhitesmoke: '#f5f5f5',\n\tyellow: '#ffff00',\n\tyellowgreen: '#9acd32',\n};\nconst HEX_REGEX = /^#([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\n\nconst ColorUtils = {\n\tgetNewColor(options, customHexValidator, oldColor = {}) {\n\t\tif (options.hex) {\n\t\t\tif (\n\t\t\t\tcustomHexValidator\n\t\t\t\t\t? !customHexValidator(options.hex)\n\t\t\t\t\t: !this.isValidHex(options.hex)\n\t\t\t) {\n\t\t\t\treturn assign({}, oldColor, {\n\t\t\t\t\thex: options.hex,\n\t\t\t\t\terrors: assign({}, oldColor.errors, {\n\t\t\t\t\t\thex: true,\n\t\t\t\t\t}),\n\t\t\t\t\thsv: {\n\t\t\t\t\t\thue: '',\n\t\t\t\t\t\tsaturation: '',\n\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t},\n\t\t\t\t\trgb: {\n\t\t\t\t\t\tred: '',\n\t\t\t\t\t\tgreen: '',\n\t\t\t\t\t\tblue: '',\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst returnColor = {\n\t\t\t\thex: options.hex,\n\t\t\t\thsv: this.getHsvFromHex(options.hex),\n\t\t\t\trgb: this.getRgbFromHex(options.hex),\n\t\t\t};\n\n\t\t\tif (options.name) {\n\t\t\t\treturnColor.name = options.name;\n\t\t\t}\n\n\t\t\treturn returnColor;\n\t\t}\n\n\t\tif ('red' in options || 'blue' in options || 'green' in options) {\n\t\t\tconst rgb = assign({}, oldColor.rgb, options);\n\t\t\tconst errors = this.getRgbErrors(rgb);\n\n\t\t\tif (Object.values(errors).includes(true)) {\n\t\t\t\treturn assign({}, oldColor, {\n\t\t\t\t\trgb,\n\t\t\t\t\terrors: assign({}, oldColor.errors, errors),\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\thex: this.getHexFromRgb(rgb),\n\t\t\t\thsv: this.getHsvFromRgb(rgb),\n\t\t\t\trgb,\n\t\t\t};\n\t\t}\n\n\t\tif ('hue' in options || 'saturation' in options || 'value' in options) {\n\t\t\tconst hsv = assign({}, oldColor.hsv, options);\n\t\t\treturn {\n\t\t\t\thex: this.getHexFromHsv(hsv),\n\t\t\t\thsv,\n\t\t\t\trgb: this.getRgbFromHsv(hsv),\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\thex: '',\n\t\t\thsv: {\n\t\t\t\thue: '',\n\t\t\t\tsaturation: '',\n\t\t\t\tvalue: '',\n\t\t\t},\n\t\t\trgb: {\n\t\t\t\tred: '',\n\t\t\t\tgreen: '',\n\t\t\t\tblue: '',\n\t\t\t},\n\t\t};\n\t},\n\n\tgetDeltaColor(options, customHexValidator, oldColor) {\n\t\tconst limitValue = (value) => Math.min(Math.max(value, 0), 100);\n\n\t\treturn this.getNewColor(\n\t\t\t{\n\t\t\t\tsaturation: limitValue(\n\t\t\t\t\toldColor.hsv.saturation + (options.saturation || 0)\n\t\t\t\t),\n\t\t\t\tvalue: limitValue(oldColor.hsv.value + (options.value || 0)),\n\t\t\t},\n\t\t\tcustomHexValidator,\n\t\t\toldColor\n\t\t);\n\t},\n\n\tisValidHex(value) {\n\t\treturn !value || HEX_REGEX.test(this.toSixDigitHex(value));\n\t},\n\n\tgetRgbErrors(rgb) {\n\t\tconst hasError = (value) =>\n\t\t\tisNaN(value) ||\n\t\t\tMath.floor(value) !== Number(value) ||\n\t\t\tvalue < 0 ||\n\t\t\tvalue >= 256;\n\n\t\treturn Object.entries(rgb).reduce((errors, keyValue) => {\n\t\t\t// eslint-disable-next-line no-param-reassign\n\t\t\terrors[keyValue[0]] = hasError(keyValue[1]);\n\t\t\treturn errors;\n\t\t}, {});\n\t},\n\n\tgetHsvFromHex(hex) {\n\t\treturn this.getHsvFromRgb(this.getRgbFromHex(hex));\n\t},\n\n\tgetHexFromHsv({ hue, saturation, value }) {\n\t\treturn this.getHexFromRgb(this.getRgbFromHsv({ hue, saturation, value }));\n\t},\n\n\tgetHexFromNamedColor(name) {\n\t\treturn COLOR_NAMES[name.toLowerCase()] || null;\n\t},\n\n\tgetHsvFromRgb({ red, green, blue }) {\n\t\tconst redRatio = red / 255;\n\t\tconst greenRatio = green / 255;\n\t\tconst blueRatio = blue / 255;\n\n\t\tconst max = Math.max(redRatio, greenRatio, blueRatio);\n\t\tconst min = Math.min(redRatio, greenRatio, blueRatio);\n\n\t\tconst delta = max - min;\n\t\tconst saturation = max === 0 ? 0 : delta / max * 100;\n\t\tconst value = max * 100;\n\t\tlet hue;\n\n\t\tif (max === min) {\n\t\t\thue = 0;\n\t\t} else {\n\t\t\tif (redRatio === max) {\n\t\t\t\thue =\n\t\t\t\t\t(greenRatio - blueRatio) / delta + (greenRatio < blueRatio ? 6 : 0);\n\t\t\t} else if (greenRatio === max) {\n\t\t\t\thue = (blueRatio - redRatio) / delta + 2;\n\t\t\t} else {\n\t\t\t\thue = (redRatio - greenRatio) / delta + 4;\n\t\t\t}\n\n\t\t\thue *= 60;\n\t\t}\n\n\t\treturn { hue, saturation, value };\n\t},\n\n\tgetRgbFromHsv({ hue, saturation, value }) {\n\t\tconst hueRatio = hue / 360;\n\t\tconst satRatio = saturation / 100;\n\t\tconst valRatio = value / 100;\n\n\t\tlet red;\n\t\tlet green;\n\t\tlet blue;\n\n\t\tconst i = Math.floor(hueRatio * 6);\n\t\tconst f = hueRatio * 6 - i;\n\t\tconst p = valRatio * (1 - satRatio);\n\t\tconst q = valRatio * (1 - f * satRatio);\n\t\tconst t = valRatio * (1 - (1 - f) * satRatio);\n\n\t\tswitch (i % 6) {\n\t\t\tcase 0:\n\t\t\t\tred = valRatio;\n\t\t\t\tgreen = t;\n\t\t\t\tblue = p;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tred = q;\n\t\t\t\tgreen = valRatio;\n\t\t\t\tblue = p;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tred = p;\n\t\t\t\tgreen = valRatio;\n\t\t\t\tblue = t;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tred = p;\n\t\t\t\tgreen = q;\n\t\t\t\tblue = valRatio;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tred = t;\n\t\t\t\tgreen = p;\n\t\t\t\tblue = valRatio;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tred = valRatio;\n\t\t\t\tgreen = p;\n\t\t\t\tblue = q;\n\t\t}\n\n\t\treturn {\n\t\t\tred: Math.round(red * 255),\n\t\t\tblue: Math.round(blue * 255),\n\t\t\tgreen: Math.round(green * 255),\n\t\t};\n\t},\n\n\tgetHexFromRgb({ red, green, blue }) {\n\t\tfunction getHex(color) {\n\t\t\treturn `0${Math.round(color).toString(16)}`.substr(-2);\n\t\t}\n\t\treturn `#${getHex(red)}${getHex(green)}${getHex(blue)}`;\n\t},\n\n\tgetRgbFromHex(hex) {\n\t\tconst result = HEX_REGEX.exec(this.toSixDigitHex(hex));\n\t\treturn {\n\t\t\tred: parseInt(result[1], 16),\n\t\t\tgreen: parseInt(result[2], 16),\n\t\t\tblue: parseInt(result[3], 16),\n\t\t};\n\t},\n\n\ttoSixDigitHex(value) {\n\t\tconst shortHandHex = /^#([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n\t\tconst match = shortHandHex.exec(value);\n\t\tif (match) {\n\t\t\treturn `#${match[1]}${match[1]}${match[2]}${match[2]}${match[3]}${\n\t\t\t\tmatch[3]\n\t\t\t}`;\n\t\t}\n\n\t\treturn value;\n\t},\n};\n\nexport default ColorUtils;\n"],"file":"color.js"}